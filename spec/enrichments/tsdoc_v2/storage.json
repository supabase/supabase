{
	"id": 0,
	"name": "@supabase/storage-js",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 375,
					"name": "StorageApiError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 376,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 377,
									"name": "new StorageApiError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 378,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 379,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 375,
										"name": "StorageApiError"
									},
									"overwrites": {
										"type": "reference",
										"id": 372,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 371,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 387,
							"name": "__isStorageError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 2,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "StorageError.__isStorageError"
							}
						},
						{
							"id": 380,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 381,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 23,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 382,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 383,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 385,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 26,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 384,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 25,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 386,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 27,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														385,
														384,
														386
													]
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								376
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								387,
								380
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								381
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 370,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 245,
					"name": "StorageClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 246,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 6,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 247,
									"name": "new StorageClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 248,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 249,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 250,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 251,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 252,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 253,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 254,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 255,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 256,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 257,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 245,
										"name": "StorageClient"
									},
									"overwrites": {
										"type": "reference",
										"id": 5,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 4,
								"name": "default.constructor"
							}
						},
						{
							"id": 266,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 10,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 267,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 268,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 269,
													"name": "input",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInfo",
														"package": "typescript",
														"name": "RequestInfo"
													}
												},
												{
													"id": 270,
													"name": "init",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInit",
														"package": "typescript",
														"name": "RequestInit"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Response",
														"package": "typescript",
														"name": "Response"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 21,
								"name": "default.fetch"
							}
						},
						{
							"id": 262,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 263,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 264,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 265,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "default.headers"
							}
						},
						{
							"id": 261,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "default.url"
							}
						},
						{
							"id": 288,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 290,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 291,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 292,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 293,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 80,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																293
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 294,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 295,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 83,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 336,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 296,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 84,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		295,
																		296
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 297,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 298,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 87,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 299,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 88,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		298,
																		299
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 44,
										"name": "default.createBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 43,
								"name": "default.createBucket"
							}
						},
						{
							"id": 325,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 183,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 326,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 327,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 328,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 329,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 187,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 330,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 331,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 187,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						331
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 332,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		329,
																		332
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 333,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 334,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 191,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 335,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		334,
																		335
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 81,
										"name": "default.deleteBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "default.deleteBucket"
							}
						},
						{
							"id": 314,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 315,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 316,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 317,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 318,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 152,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 319,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 320,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 152,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						320
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 321,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 153,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		318,
																		321
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 322,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 323,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 156,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 324,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 157,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		323,
																		324
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 70,
										"name": "default.emptyBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 69,
								"name": "default.emptyBucket"
							}
						},
						{
							"id": 258,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform file operation in a bucket."
									},
									"parameters": [
										{
											"id": 260,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The bucket id to operate on.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 279,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 280,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 281,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 282,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 283,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 52,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 336,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 284,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 53,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		283,
																		284
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 285,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 286,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 56,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 287,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 57,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		286,
																		287
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "default.getBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "default.getBucket"
							}
						},
						{
							"id": 271,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 272,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 273,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 274,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 336,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 275,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		274,
																		275
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 276,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 277,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 278,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		277,
																		278
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 27,
										"name": "default.listBuckets"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 26,
								"name": "default.listBuckets"
							}
						},
						{
							"id": 300,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 113,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a new Storage bucket"
									},
									"parameters": [
										{
											"id": 302,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 303,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 304,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 305,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 115,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																305
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 306,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 307,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 118,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 308,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 309,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 118,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						309
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 310,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 119,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		307,
																		310
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 311,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 312,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 122,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 313,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 123,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		312,
																		313
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 56,
										"name": "default.updateBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 55,
								"name": "default.updateBucket"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								246
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								266,
								262,
								261
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								288,
								325,
								314,
								258,
								279,
								271,
								300
							]
						}
					],
					"sources": [
						{
							"fileName": "src/StorageClient.ts",
							"line": 5,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3,
							"name": "default"
						}
					]
				},
				{
					"id": 370,
					"name": "StorageError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 371,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 4,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 372,
									"name": "new StorageError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 373,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 370,
										"name": "StorageError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 374,
							"name": "__isStorageError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 2,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								371
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								374
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 1,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 375,
							"name": "StorageApiError"
						},
						{
							"type": "reference",
							"id": 388,
							"name": "StorageUnknownError"
						}
					]
				},
				{
					"id": 388,
					"name": "StorageUnknownError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 389,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 35,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 390,
									"name": "new StorageUnknownError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 391,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 392,
											"name": "originalError",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 388,
										"name": "StorageUnknownError"
									},
									"overwrites": {
										"type": "reference",
										"id": 372,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 371,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 394,
							"name": "__isStorageError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 2,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "StorageError.__isStorageError"
							}
						},
						{
							"id": 393,
							"name": "originalError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								389
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								394,
								393
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 32,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 370,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 336,
					"name": "Bucket",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 340,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 337,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 338,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 339,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 342,
							"name": "public",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 341,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								340,
								337,
								338,
								339,
								342,
								341
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1,
							"character": 17
						}
					]
				},
				{
					"id": 343,
					"name": "FileObject",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 345,
							"name": "bucket_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 352,
							"name": "buckets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 336,
								"name": "Bucket"
							}
						},
						{
							"id": 349,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 347,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 350,
							"name": "last_accessed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 351,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 344,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 346,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 348,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								345,
								352,
								349,
								347,
								350,
								351,
								344,
								346,
								348
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 10,
							"character": 17
						}
					]
				},
				{
					"id": 356,
					"name": "FileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 357,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 358,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 359,
							"name": "upsert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								357,
								358,
								359
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 365,
					"name": "Metadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 366,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 49,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 48,
							"character": 17
						}
					]
				},
				{
					"id": 360,
					"name": "SearchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 361,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of files you want to be returned."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 362,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The starting position."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 364,
							"name": "search",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The search string to filter files by."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 363,
							"name": "sortBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The column to sort by. Can be any column inside a FileObject."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 353,
								"name": "SortBy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								361,
								362,
								364,
								363
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 33,
							"character": 17
						}
					]
				},
				{
					"id": 353,
					"name": "SortBy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 354,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 355,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								354,
								355
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 22,
							"character": 17
						}
					]
				},
				{
					"id": 367,
					"name": "isStorageError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "isStorageError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 369,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 370,
									"name": "StorageError"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						375,
						245,
						370,
						388
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						336,
						343,
						356,
						365,
						360,
						353
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						367
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "packages/StorageBucketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 12,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 7,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 10,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 11,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 12,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 13,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 14,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 15,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 21,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 10,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 23,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 24,
													"name": "input",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInfo",
														"package": "typescript",
														"name": "RequestInfo"
													}
												},
												{
													"id": 25,
													"name": "init",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInit",
														"package": "typescript",
														"name": "RequestInit"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Response",
														"package": "typescript",
														"name": "Response"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 17,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 19,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 20,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 16,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 43,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 45,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 47,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 48,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 80,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																48
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 49,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 50,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 83,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 336,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 51,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 84,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		50,
																		51
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 52,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 53,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 87,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 54,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 88,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		53,
																		54
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 80,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 183,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 81,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 82,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 83,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 84,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 187,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 85,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 86,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 187,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						86
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 87,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		84,
																		87
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 88,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 89,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 191,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 90,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		89,
																		90
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 69,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 70,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 71,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 72,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 73,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 152,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 74,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 75,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 152,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						75
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 76,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 153,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		73,
																		76
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 77,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 78,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 156,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 79,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 157,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		78,
																		79
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 34,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 35,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 36,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 37,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 38,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 52,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 336,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 39,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 53,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		38,
																		39
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 41,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 56,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 42,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 57,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		41,
																		42
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 26,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 28,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 29,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 336,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 30,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		29,
																		30
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 32,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 33,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		32,
																		33
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 55,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 113,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 56,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a new Storage bucket"
									},
									"parameters": [
										{
											"id": 57,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 60,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 115,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																60
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 61,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 62,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 118,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 63,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 64,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 118,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						64
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 65,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 119,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		62,
																		65
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 66,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 67,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 122,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 68,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 123,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		67,
																		68
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								21,
								17,
								16
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								43,
								80,
								69,
								34,
								26,
								55
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageBucketApi.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 245,
							"name": "StorageClient"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageBucketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 91,
			"name": "packages/StorageFileApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 92,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 93,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 27,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 95,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 96,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 97,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 98,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 99,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 100,
											"name": "bucketId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 101,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 102,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 103,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 104,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 105,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 111,
							"name": "bucketId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 24,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 112,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 25,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 113,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 114,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 115,
													"name": "input",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInfo",
														"package": "typescript",
														"name": "RequestInfo"
													}
												},
												{
													"id": 116,
													"name": "init",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"qualifiedName": "RequestInit",
														"package": "typescript",
														"name": "RequestInit"
													}
												}
											],
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "Response",
														"package": "typescript",
														"name": "Response"
													}
												],
												"qualifiedName": "Promise",
												"package": "typescript",
												"name": "Promise"
											}
										}
									]
								}
							}
						},
						{
							"id": 107,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 108,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 109,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 110,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 106,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 169,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 238,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Copies an existing file."
									},
									"parameters": [
										{
											"id": 171,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 172,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-copy.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 173,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 174,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 243,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 175,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 176,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 243,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						176
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 177,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 244,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		174,
																		177
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 178,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 179,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 247,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 180,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 248,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		179,
																		180
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 181,
							"name": "createSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 274,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "createSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds."
									},
									"parameters": [
										{
											"id": 183,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path to be downloaded, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 184,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 186,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 279,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 187,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 188,
																					"name": "signedURL",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 279,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						188
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 189,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 280,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		186,
																		189
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 190,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 191,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 283,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 192,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 284,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		191,
																		192
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 193,
							"name": "createSignedUrls",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 313,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 194,
									"name": "createSignedUrls",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds."
									},
									"parameters": [
										{
											"id": 195,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 196,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 197,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 198,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 318,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 199,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 200,
																						"name": "error",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 318,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 201,
																						"name": "path",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 318,
																								"character": 38
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 202,
																						"name": "signedURL",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 318,
																								"character": 59
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							200,
																							201,
																							202
																						]
																					}
																				]
																			}
																		}
																	}
																},
																{
																	"id": 203,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 319,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		198,
																		203
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 204,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 205,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 322,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 206,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 323,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		205,
																		206
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "download",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 354,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "download",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Downloads a file."
									},
									"parameters": [
										{
											"id": 209,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 210,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 211,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 358,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Blob",
																		"package": "typescript",
																		"name": "Blob"
																	}
																},
																{
																	"id": 212,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 359,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		211,
																		212
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 213,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 214,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 362,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 215,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 363,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		214,
																		215
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 216,
							"name": "getPublicUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 388,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 217,
									"name": "getPublicUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve URLs for assets in public buckets and encapsulates it in a return object"
									},
									"parameters": [
										{
											"id": 218,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 228,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 496,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 229,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Lists all the files within a bucket."
									},
									"parameters": [
										{
											"id": 230,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The folder path."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 231,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Search options, including `limit`, `offset`, `sortBy`, and `search`."
											},
											"type": {
												"type": "reference",
												"id": 360,
												"name": "SearchOptions"
											}
										},
										{
											"id": 232,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n"
											},
											"type": {
												"type": "reference",
												"name": "FetchParameters"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 233,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 234,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 502,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 343,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 235,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 503,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		234,
																		235
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 236,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 237,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 506,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 238,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 507,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		237,
																		238
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 157,
							"name": "move",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 202,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 158,
									"name": "move",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Moves an existing file."
									},
									"parameters": [
										{
											"id": 159,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 160,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-new.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 161,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 162,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 163,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 164,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 207,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						164
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 165,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 208,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		162,
																		165
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 166,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 167,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 211,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 168,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 212,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		167,
																		168
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 219,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 398,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 220,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes files within the same bucket"
									},
									"parameters": [
										{
											"id": 221,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 222,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 223,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 402,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 343,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 224,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 403,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		223,
																		224
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 225,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 226,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 406,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 227,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 407,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		226,
																		227
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 144,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 145,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Replaces an existing file at the specified path with a new one."
									},
									"parameters": [
										{
											"id": 146,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 147,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBufferView",
														"package": "typescript",
														"name": "ArrayBufferView"
													},
													{
														"type": "reference",
														"qualifiedName": "Blob",
														"package": "typescript",
														"name": "Blob"
													},
													{
														"type": "reference",
														"qualifiedName": "Buffer",
														"package": "@types/node",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "FormData",
														"package": "typescript",
														"name": "FormData"
													},
													{
														"type": "reference",
														"qualifiedName": "NodeJS.ReadableStream",
														"package": "@types/node",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "Uint8Array",
																"package": "typescript",
																"name": "Uint8Array"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"qualifiedName": "URLSearchParams",
														"package": "typescript",
														"name": "URLSearchParams"
													}
												]
											}
										},
										{
											"id": 148,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "HTTP headers.\n`cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n`contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n`upsert`: boolean, whether to perform an upsert.\n"
											},
											"type": {
												"type": "reference",
												"id": 356,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 149,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 150,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 185,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 151,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 152,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 185,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						152
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 153,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 186,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		150,
																		153
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 154,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 155,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 156,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 190,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		155,
																		156
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 131,
							"name": "upload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 132,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 132,
									"name": "upload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file to an existing bucket."
									},
									"parameters": [
										{
											"id": 133,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 134,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket."
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBufferView",
														"package": "typescript",
														"name": "ArrayBufferView"
													},
													{
														"type": "reference",
														"qualifiedName": "Blob",
														"package": "typescript",
														"name": "Blob"
													},
													{
														"type": "reference",
														"qualifiedName": "Buffer",
														"package": "@types/node",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "FormData",
														"package": "typescript",
														"name": "FormData"
													},
													{
														"type": "reference",
														"qualifiedName": "NodeJS.ReadableStream",
														"package": "@types/node",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "Uint8Array",
																"package": "typescript",
																"name": "Uint8Array"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"qualifiedName": "URLSearchParams",
														"package": "typescript",
														"name": "URLSearchParams"
													}
												]
											}
										},
										{
											"id": 135,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "HTTP headers.\n`cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n`contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n`upsert`: boolean, whether to perform an upsert.\n"
											},
											"type": {
												"type": "reference",
												"id": 356,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 136,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 137,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 148,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 138,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 139,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 148,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						139
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 140,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 149,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		137,
																		140
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 141,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 142,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 152,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 143,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 153,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 370,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		142,
																		143
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								93
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								111,
								112,
								107,
								106
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								169,
								181,
								193,
								207,
								216,
								228,
								157,
								219,
								144,
								131
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageFileApi.ts",
							"line": 21,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						92
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageFileApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				2,
				91
			]
		}
	]
}