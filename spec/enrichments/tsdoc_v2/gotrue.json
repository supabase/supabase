{
  "id": 0,
  "name": "@supabase/gotrue-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 740,
      "name": "AuthApiError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 741,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 17,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 742,
              "name": "new AuthApiError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 743,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 744,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 740,
                "name": "AuthApiError"
              },
              "overwrites": {
                "type": "reference",
                "id": 737,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 736,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 745,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 15,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 746,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 23,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 747,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 748,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 750,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 26,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 749,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 25,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 751,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 27,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [750, 749, 751]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [741]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [745]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [746]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 14,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 735,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 735,
      "name": "AuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 736,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 4,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 737,
              "name": "new AuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 738,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 735,
                "name": "AuthError"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [736]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 1,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "Error",
          "package": "typescript",
          "name": "Error"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 740,
          "name": "AuthApiError"
        },
        {
          "type": "reference",
          "id": 753,
          "name": "AuthUnknownError"
        },
        {
          "type": "reference",
          "id": 760,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 800,
      "name": "AuthImplicitGrantRedirectError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 801,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 78,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 802,
              "name": "new AuthImplicitGrantRedirectError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 803,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 804,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 805,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 807,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 78,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 806,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 78,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [807, 806]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 800,
                "name": "AuthImplicitGrantRedirectError"
              },
              "overwrites": {
                "type": "reference",
                "id": 762,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 761,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 808,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 77,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 809,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 811,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 77,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 810,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 77,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [811, 810]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 822,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 47,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 766,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 823,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 767,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 812,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 83,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 813,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 814,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 818,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 88,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 819,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 821,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 77,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 820,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 77,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [821, 820]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 816,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 86,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 815,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 85,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 817,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 87,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [818, 816, 815, 817]
                    }
                  ]
                }
              },
              "overwrites": {
                "type": "reference",
                "id": 769,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 768,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [801]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [808, 822, 823]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [812]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 76,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 760,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 787,
      "name": "AuthInvalidCredentialsError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 788,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 71,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 789,
              "name": "new AuthInvalidCredentialsError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 790,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 787,
                "name": "AuthInvalidCredentialsError"
              },
              "overwrites": {
                "type": "reference",
                "id": 762,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 761,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 791,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 47,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 766,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 792,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 767,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 793,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 794,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 795,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 797,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 58,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 796,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 57,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 798,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [797, 796, 798]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 769,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 768,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [788]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [791, 792]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [793]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 70,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 760,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 825,
      "name": "AuthRetryableFetchError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 826,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 94,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 827,
              "name": "new AuthRetryableFetchError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 828,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 829,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 825,
                "name": "AuthRetryableFetchError"
              },
              "overwrites": {
                "type": "reference",
                "id": 762,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 761,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 830,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 47,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 766,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 831,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 767,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 832,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 833,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 834,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 836,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 58,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 835,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 57,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 837,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [836, 835, 837]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 769,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 768,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [826]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [830, 831]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [832]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 93,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 760,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 775,
      "name": "AuthSessionMissingError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 776,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 65,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 777,
              "name": "new AuthSessionMissingError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 775,
                "name": "AuthSessionMissingError"
              },
              "overwrites": {
                "type": "reference",
                "id": 762,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 761,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 778,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 47,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 766,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 779,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 767,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 780,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 781,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 782,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 784,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 58,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 783,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 57,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 785,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [784, 783, 785]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 769,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 768,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [776]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [778, 779]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [780]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 64,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 760,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 753,
      "name": "AuthUnknownError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 754,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 39,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 755,
              "name": "new AuthUnknownError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 756,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 757,
                  "name": "originalError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 753,
                "name": "AuthUnknownError"
              },
              "overwrites": {
                "type": "reference",
                "id": 737,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 736,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 758,
          "name": "originalError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 37,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [754]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [758]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 36,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 735,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 760,
      "name": "CustomAuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 761,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 762,
              "name": "new CustomAuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 763,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 764,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 765,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 760,
                "name": "CustomAuthError"
              },
              "overwrites": {
                "type": "reference",
                "id": 737,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 736,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 766,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 47,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "AuthError.name"
          }
        },
        {
          "id": 767,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 768,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 769,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 770,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 772,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 58,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 771,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 57,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 773,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [772, 771, 773]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [761]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [766, 767]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [768]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 46,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 735,
          "name": "AuthError"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 775,
          "name": "AuthSessionMissingError"
        },
        {
          "type": "reference",
          "id": 787,
          "name": "AuthInvalidCredentialsError"
        },
        {
          "type": "reference",
          "id": 800,
          "name": "AuthImplicitGrantRedirectError"
        },
        {
          "type": "reference",
          "id": 825,
          "name": "AuthRetryableFetchError"
        }
      ]
    },
    {
      "id": 1,
      "name": "GoTrueAdminApi",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 35,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new GoTrueAdminApi",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 4,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 5,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 11,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 44,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 12,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 13,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 14,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 15,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 41,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 6,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 40,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [11, 7, 6]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Contains all MFA administration methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 27,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 700,
            "name": "GoTrueAdminMFAApi"
          }
        },
        {
          "id": 43,
          "name": "createUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 146,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 44,
              "name": "createUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 45,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 412,
                    "name": "AdminUserAttributes"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 67,
          "name": "deleteUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 260,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 68,
              "name": "deleteUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Delete a user. Requires a `service_role` key."
              },
              "parameters": [
                {
                  "id": 69,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user id you want to remove.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 40,
          "name": "generateLink",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 112,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 41,
              "name": "generateLink",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generates email links and OTPs to be sent via a custom email provider."
              },
              "parameters": [
                {
                  "id": 42,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 544,
                    "name": "GenerateLinkParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 545,
                    "name": "GenerateLinkResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 60,
          "name": "getUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 215,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 61,
              "name": "getUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get user by id."
              },
              "parameters": [
                {
                  "id": 62,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "inviteUserByEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 82,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "inviteUserByEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends an invite link to an email address."
              },
              "parameters": [
                {
                  "id": 35,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 36,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 37,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 39,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Optional user metadata\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 86,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 38,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL or mobile deeplink to send the user to after they are confirmed."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 85,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [39, 38]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 46,
          "name": "listUsers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 168,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 47,
              "name": "listUsers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a list of users.",
                "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 48,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 725,
                    "name": "PageParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 49,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 50,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 171,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 51,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 53,
                                          "name": "aud",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 171,
                                              "character": 31
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 52,
                                          "name": "users",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 171,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "array",
                                            "elementType": {
                                              "type": "reference",
                                              "id": 385,
                                              "name": "User"
                                            }
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [53, 52]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "reference",
                                    "id": 718,
                                    "name": "Pagination"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 54,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 171,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [50, 54]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 55,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 56,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 172,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 57,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 58,
                                      "name": "users",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 172,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "tuple"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [58]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 59,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 172,
                                  "character": 29
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 735,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [56, 59]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 59,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 28,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Removes a logged-in session."
              },
              "parameters": [
                {
                  "id": 29,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A valid, logged-in JWT.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 30,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 31,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 59,
                              "character": 40
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 32,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 59,
                              "character": 52
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 735,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [31, 32]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 63,
          "name": "updateUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 237,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 64,
              "name": "updateUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates the user data."
              },
              "parameters": [
                {
                  "id": 65,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 66,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 412,
                    "name": "AdminUserAttributes"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [2]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [16]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [43, 67, 40, 60, 33, 46, 27, 63]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueAdminApi.ts",
          "line": 25,
          "character": 21
        }
      ]
    },
    {
      "id": 76,
      "name": "GoTrueClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 77,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 127,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 78,
              "name": "new GoTrueClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Create a new client for use in the browser."
              },
              "parameters": [
                {
                  "id": 79,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 289,
                    "name": "GoTrueClientOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 76,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 80,
          "name": "admin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 87,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1,
            "name": "default"
          }
        },
        {
          "id": 81,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the MFA methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 91,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 655,
            "name": "GoTrueMFAApi"
          }
        },
        {
          "id": 125,
          "name": "getSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 501,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 126,
              "name": "getSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the session, refreshing it if necessary.\nThe session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 127,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 128,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 503,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 129,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 130,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 504,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 348,
                                        "name": "Session"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [130]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 131,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 506,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [128, 131]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 132,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 133,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 509,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 134,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 135,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 510,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [135]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 136,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 512,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 735,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [133, 136]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 137,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 138,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 515,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 139,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 140,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 516,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [140]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 141,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 518,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [138, 141]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 142,
          "name": "getUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 564,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 143,
              "name": "getUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets the current user details if there is an existing session."
              },
              "parameters": [
                {
                  "id": 144,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 103,
          "name": "initialize",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 162,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 104,
              "name": "initialize",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 708,
                    "name": "InitializeResult"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 186,
          "name": "onAuthStateChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 848,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 187,
              "name": "onAuthStateChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Receive a notification every time an auth event happens."
              },
              "parameters": [
                {
                  "id": 188,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A callback function to be invoked when an auth event happens.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 189,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 190,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 191,
                              "name": "event",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 288,
                                "name": "AuthChangeEvent"
                              }
                            },
                            {
                              "id": 192,
                              "name": "session",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 348,
                                    "name": "Session"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 193,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 194,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueClient.ts",
                          "line": 849,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 195,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 196,
                              "name": "subscription",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 849,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 422,
                                "name": "Subscription"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [196]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [194]
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 161,
          "name": "refreshSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 703,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 162,
              "name": "refreshSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 163,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The current session. If passed in, it must contain a refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 164,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 165,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 703,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [165]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 197,
          "name": "resetPasswordForEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 871,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 198,
              "name": "resetPasswordForEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a password reset request to an email address."
              },
              "parameters": [
                {
                  "id": 199,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 200,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 201,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 203,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 875,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 202,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL to send the user to after they click the password reset link."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 874,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [203, 202]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 204,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 205,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 879,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 206,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 207,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 880,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [205, 207]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 208,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 209,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 882,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 210,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 882,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 735,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [209, 210]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 155,
          "name": "setSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 640,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 156,
              "name": "setSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 157,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The current session that minimally contains an access token and refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 158,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 159,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 641,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 160,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 642,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [159, 160]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 113,
          "name": "signInWithOAuth",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 349,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 114,
              "name": "signInWithOAuth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user via a third-party provider."
              },
              "parameters": [
                {
                  "id": 115,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 479,
                    "name": "SignInWithOAuthCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 315,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 116,
          "name": "signInWithOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 369,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 117,
              "name": "signInWithOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user using magiclink or a one-time password (OTP).",
                "text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n"
              },
              "parameters": [
                {
                  "id": 118,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 463,
                    "name": "SignInWithPasswordlessCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 110,
          "name": "signInWithPassword",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 297,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 111,
              "name": "signInWithPassword",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user with an email and password or phone and password.",
                "text": "Be aware that you may get back an error message that will not distingish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
              },
              "parameters": [
                {
                  "id": 112,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 448,
                    "name": "SignInWithPasswordCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 122,
          "name": "signInWithSSO",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 472,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 123,
              "name": "signInWithSSO",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
                "text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n\nThis API is experimental and availability is conditional on correct\nsettings on the Auth service.\n",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 124,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 509,
                    "name": "SignInWithSSO"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 328,
                    "name": "SSOResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 182,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 823,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 183,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session\nand log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
                "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 184,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 185,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 823,
                              "character": 29
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 735,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [185]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 107,
          "name": "signUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 229,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 108,
              "name": "signUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.",
                "text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\n",
                "returns": "A logged-in session if the server has \"autoconfirm\" ON"
              },
              "parameters": [
                {
                  "id": 109,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 432,
                    "name": "SignUpWithPasswordCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 145,
          "name": "updateUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 593,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 146,
              "name": "updateUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates user data, if there is a logged in user."
              },
              "parameters": [
                {
                  "id": 147,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 407,
                    "name": "UserAttributes"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 337,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 119,
          "name": "verifyOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 413,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 120,
              "name": "verifyOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user given a User supplied OTP received via mobile."
              },
              "parameters": [
                {
                  "id": 121,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 490,
                    "name": "VerifyOtpParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 302,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [77]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [80, 81]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [125, 142, 103, 186, 161, 197, 155, 113, 116, 110, 122, 182, 107, 145, 119]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueClient.ts",
          "line": 82,
          "character": 21
        }
      ]
    },
    {
      "id": 357,
      "name": "AMREntry",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "An authentication methord reference (AMR) entry.",
        "text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
          }
        ]
      },
      "children": [
        {
          "id": 358,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Authentication method name."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 152,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 359,
          "name": "timestamp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 158,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [358, 359]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 150,
          "character": 17
        }
      ]
    },
    {
      "id": 412,
      "name": "AdminUserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 414,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 280,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 417,
          "name": "ban_duration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Determines how long a user is banned for.",
            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 306,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 421,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 255,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 411,
            "name": "UserAttributes.data"
          }
        },
        {
          "id": 418,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 237,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 408,
            "name": "UserAttributes.email"
          }
        },
        {
          "id": 415,
          "name": "email_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's email address if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 287,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 420,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 247,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 410,
            "name": "UserAttributes.password"
          }
        },
        {
          "id": 419,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 242,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 409,
            "name": "UserAttributes.phone"
          }
        },
        {
          "id": 416,
          "name": "phone_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's phone number if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 294,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 413,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "Only a service role can modify.\n\nThe `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 270,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [414, 417, 421, 418, 415, 420, 419, 416, 413]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 258,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 407,
          "name": "UserAttributes"
        }
      ]
    },
    {
      "id": 371,
      "name": "Factor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "A MFA factor.",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#enroll}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#listFactors}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAAdminApi#listFactors}\n"
          }
        ]
      },
      "children": [
        {
          "id": 376,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 196,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 374,
          "name": "factor_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Type of factor. Only `totp` supported with this version but may change in\nfuture versions."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 191,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 373,
          "name": "friendly_name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 185,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 372,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "ID of the factor."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 182,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 375,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Factor's status."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 194,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "verified"
              },
              {
                "type": "literal",
                "value": "unverified"
              }
            ]
          }
        },
        {
          "id": 377,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 197,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [376, 374, 373, 372, 375, 377]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 180,
          "character": 17
        }
      ]
    },
    {
      "id": 541,
      "name": "GenerateLinkOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 542,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 540,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 543,
          "name": "redirectTo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The URL which will be appended to the email link generated."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 542,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [542, 543]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 534,
          "character": 17
        }
      ]
    },
    {
      "id": 700,
      "name": "GoTrueAdminMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication administration API.",
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "children": [
        {
          "id": 704,
          "name": "deleteFactor",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 705,
              "name": "deleteFactor",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                  },
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 706,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 684,
                    "name": "AuthMFAAdminDeleteFactorParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 675,
                    "name": "AuthMFAAdminDeleteFactorResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 701,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 702,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Lists all factors associated to a user."
              },
              "parameters": [
                {
                  "id": 703,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 697,
                    "name": "AuthMFAAdminListFactorsParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 688,
                    "name": "AuthMFAAdminListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [704, 701]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 872,
          "character": 17
        }
      ]
    },
    {
      "id": 655,
      "name": "GoTrueMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication API."
      },
      "children": [
        {
          "id": 659,
          "name": "challenge",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 660,
              "name": "challenge",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
              },
              "parameters": [
                {
                  "id": 661,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 579,
                    "name": "MFAChallengeParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 623,
                    "name": "AuthMFAChallengeResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 668,
          "name": "challengeAndVerify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 669,
              "name": "challengeAndVerify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 670,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 582,
                    "name": "MFAChallengeAndVerifyParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 586,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 656,
          "name": "enroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 657,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
              },
              "parameters": [
                {
                  "id": 658,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 566,
                    "name": "MFAEnrollParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 599,
                    "name": "AuthMFAEnrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 673,
          "name": "getAuthenticatorAssuranceLevel",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 674,
              "name": "getAuthenticatorAssuranceLevel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 644,
                    "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 671,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 672,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the list of MFA factors enabled for this user.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#enroll}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueClient#getUser}\n\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 633,
                    "name": "AuthMFAListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 665,
          "name": "unenroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 666,
              "name": "unenroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
              },
              "parameters": [
                {
                  "id": 667,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 571,
                    "name": "MFAUnenrollParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 614,
                    "name": "AuthMFAUnenrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 662,
          "name": "verify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 663,
              "name": "verify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 664,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 574,
                    "name": "MFAVerifyParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 586,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [659, 668, 656, 673, 671, 665, 662]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 759,
          "character": 17
        }
      ]
    },
    {
      "id": 348,
      "name": "Session",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 351,
          "name": "access_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 125,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 354,
          "name": "expires_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 137,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 353,
          "name": "expires_in",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 133,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 350,
          "name": "provider_refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 121,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 349,
          "name": "provider_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 116,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 352,
          "name": "refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "A one-time used refresh token that never expires."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 129,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 355,
          "name": "token_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 138,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 356,
          "name": "user",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 139,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 385,
            "name": "User"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [351, 354, 353, 350, 349, 352, 355, 356]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 112,
          "character": 17
        }
      ]
    },
    {
      "id": 422,
      "name": "Subscription",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 423,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The subscriber UUID. This will be set by the client."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 313,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 424,
          "name": "callback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 317,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 425,
              "name": "callback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
              },
              "parameters": [
                {
                  "id": 426,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 288,
                    "name": "AuthChangeEvent"
                  }
                },
                {
                  "id": 427,
                  "name": "session",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 348,
                        "name": "Session"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 428,
          "name": "unsubscribe",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 321,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 429,
              "name": "unsubscribe",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call this to remove the listener."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [423]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [424, 428]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 309,
          "character": 17
        }
      ]
    },
    {
      "id": 430,
      "name": "UpdatableFactorAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 431,
          "name": "friendlyName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 325,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [431]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 324,
          "character": 17
        }
      ]
    },
    {
      "id": 385,
      "name": "User",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 395,
          "name": "action_link",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 219,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 387,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 211,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 378,
            "name": "UserAppMetadata"
          }
        },
        {
          "id": 389,
          "name": "aud",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 213,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 390,
          "name": "confirmation_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 214,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 399,
          "name": "confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 223,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 398,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 222,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 396,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 220,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 392,
          "name": "email_change_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 216,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 400,
          "name": "email_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 224,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 406,
          "name": "factors",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 230,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 371,
              "name": "Factor"
            }
          }
        },
        {
          "id": 386,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 210,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 405,
          "name": "identities",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 229,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 360,
              "name": "UserIdentity"
            }
          }
        },
        {
          "id": 394,
          "name": "invited_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 218,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 402,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 226,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 393,
          "name": "new_email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 217,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 397,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 221,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 401,
          "name": "phone_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 225,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 391,
          "name": "recovery_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 215,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 403,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 227,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 404,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 228,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 388,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 212,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 382,
            "name": "UserMetadata"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            395, 387, 389, 390, 399, 398, 396, 392, 400, 406, 386, 405, 394, 402, 393, 397, 401,
            391, 403, 404, 388
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 209,
          "character": 17
        }
      ]
    },
    {
      "id": 378,
      "name": "UserAppMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 379,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 201,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [379]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 200,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 380,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 381,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 407,
      "name": "UserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 411,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 255,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 408,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 237,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 410,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 247,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 409,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 242,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [411, 408, 410, 409]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 233,
          "character": 17
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 412,
          "name": "AdminUserAttributes"
        }
      ]
    },
    {
      "id": 360,
      "name": "UserIdentity",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 368,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 168,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 361,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 162,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 363,
          "name": "identity_data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 164,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 364,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 365,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 366,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 369,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 169,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 367,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 167,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 370,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 170,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 362,
          "name": "user_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 163,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [368, 361, 363, 369, 367, 370, 362]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 161,
          "character": 17
        }
      ]
    },
    {
      "id": 382,
      "name": "UserMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 205,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 383,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 384,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 499,
      "name": "VerifyEmailOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 500,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 468,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 503,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 473,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 504,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 506,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 477,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 505,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 475,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [506, 505]
                }
              ]
            }
          }
        },
        {
          "id": 501,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 470,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 502,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 472,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 508,
            "name": "EmailOtpType"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [500, 503, 501, 502]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 466,
          "character": 17
        }
      ]
    },
    {
      "id": 491,
      "name": "VerifyMobileOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 495,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 454,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 496,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 498,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 463,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 497,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 456,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [498, 497]
                }
              ]
            }
          }
        },
        {
          "id": 492,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 449,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 493,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 451,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 494,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 453,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 507,
            "name": "MobileOtpType"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [495, 492, 493, 494]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 447,
          "character": 17
        }
      ]
    },
    {
      "id": 288,
      "name": "AuthChangeEvent",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 25,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "PASSWORD_RECOVERY"
          },
          {
            "type": "literal",
            "value": "SIGNED_IN"
          },
          {
            "type": "literal",
            "value": "SIGNED_OUT"
          },
          {
            "type": "literal",
            "value": "TOKEN_REFRESHED"
          },
          {
            "type": "literal",
            "value": "USER_UPDATED"
          },
          {
            "type": "literal",
            "value": "USER_DELETED"
          },
          {
            "type": "reference",
            "id": 287,
            "name": "AuthChangeEventMFA"
          }
        ]
      }
    },
    {
      "id": 287,
      "name": "AuthChangeEventMFA",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 23,
          "character": 12
        }
      ],
      "type": {
        "type": "literal",
        "value": "MFA_CHALLENGE_VERIFIED"
      }
    },
    {
      "id": 684,
      "name": "AuthMFAAdminDeleteFactorParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 838,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 685,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 686,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the MFA factor to delete."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 840,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 687,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user whose factor is being deleted."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 843,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [686, 687]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 838,
              "character": 45
            }
          ]
        }
      }
    },
    {
      "id": 675,
      "name": "AuthMFAAdminDeleteFactorResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 825,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 676,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 677,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 827,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 678,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 679,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully deleted."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 829,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [679]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 827,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 680,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 831,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [677, 680]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 826,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 681,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 682,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 833,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 683,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 833,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [682, 683]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 833,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 697,
      "name": "AuthMFAAdminListFactorsParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 862,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 698,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 699,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 864,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [699]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 862,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 688,
      "name": "AuthMFAAdminListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 849,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 689,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 690,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 851,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 691,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 692,
                          "name": "factors",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All factors attached to the user."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 853,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 371,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [692]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 851,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 693,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 855,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [690, 693]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 850,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 694,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 695,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 857,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 696,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 857,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [695, 696]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 857,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 623,
      "name": "AuthMFAChallengeResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 702,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 624,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 625,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 704,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 626,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 628,
                          "name": "expires_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 709,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 627,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the newly created challenge."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 706,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [628, 627]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 704,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 629,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 711,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [625, 629]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 703,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 630,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 631,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 713,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 632,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 713,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [631, 632]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 713,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 599,
      "name": "AuthMFAEnrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 659,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 600,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 601,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 661,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 602,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 603,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 663,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 605,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "TOTP enrollment information."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 669,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 606,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 607,
                                  "name": "qr_code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 673,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 608,
                                  "name": "secret",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 678,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 609,
                                  "name": "uri",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 682,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [607, 608, 609]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 669,
                                  "character": 14
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 604,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of MFA factor. Only `totp` supported for now."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 666,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "totp"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [603, 605, 604]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 661,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 610,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 685,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [601, 610]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 660,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 611,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 612,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 688,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 613,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 689,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [612, 613]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 687,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 644,
      "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 730,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 645,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 646,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 732,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 647,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 650,
                          "name": "currentAuthenticationMethods",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 749,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 357,
                              "name": "AMREntry"
                            }
                          }
                        },
                        {
                          "id": 648,
                          "name": "currentLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Current AAL level of the session."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 734,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 643,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 649,
                          "name": "nextLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#challenge}\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 742,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 643,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [650, 648, 649]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 732,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 651,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 751,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [646, 651]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 731,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 652,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 653,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 753,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 654,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 753,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [653, 654]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 753,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 633,
      "name": "AuthMFAListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 715,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 634,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 635,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 717,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 636,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 637,
                          "name": "all",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All available factors (verified and unverified)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 719,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 371,
                              "name": "Factor"
                            }
                          }
                        },
                        {
                          "id": 638,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Only verified TOTP factors. (A subset of `all`.)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 722,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 371,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [637, 638]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 717,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 639,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 724,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [635, 639]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 716,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 640,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 641,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 726,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 642,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 726,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [641, 642]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 726,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 614,
      "name": "AuthMFAUnenrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 692,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 615,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 616,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 694,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 617,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 618,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully unenrolled."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 696,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [618]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 694,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 619,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 698,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [616, 619]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 693,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 620,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 621,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 700,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 622,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 700,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [621, 622]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 700,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 586,
      "name": "AuthMFAVerifyResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 634,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 587,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 588,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 636,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 589,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 590,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "New access token (JWT) after successful verification."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 638,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 592,
                          "name": "expires_in",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Number of seconds in which the access token will expire."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 644,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 593,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Refresh token you can use to obtain new access tokens when expired."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 647,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 591,
                          "name": "token_type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of token, typically `Bearer`."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 641,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 594,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Updated user profile."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 650,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 385,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [590, 592, 593, 591, 594]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 636,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 595,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 652,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [588, 595]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 635,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 596,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 597,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 655,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 598,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 656,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [597, 598]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 654,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 302,
      "name": "AuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 53,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 303,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 304,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 55,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 305,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 307,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 57,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 348,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 306,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 56,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 385,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [307, 306]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 55,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 308,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 59,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [304, 308]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 54,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 309,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 310,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 62,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 311,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 313,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 64,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 312,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 63,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [313, 312]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 62,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 314,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 66,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [310, 314]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 61,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 643,
      "name": "AuthenticatorAssuranceLevels",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 728,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "aal1"
          },
          {
            "type": "literal",
            "value": "aal2"
          }
        ]
      }
    },
    {
      "id": 711,
      "name": "CallRefreshTokenResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 903,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 712,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 714,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 906,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 713,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 905,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 348,
                    "name": "Session"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [714, 713]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 904,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 715,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 717,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 910,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                },
                {
                  "id": 716,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 909,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [717, 716]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 908,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 508,
      "name": "EmailOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 482,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change"
          }
        ]
      }
    },
    {
      "id": 535,
      "name": "GenerateEmailChangeLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 523,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 536,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 538,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 526,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 539,
              "name": "newEmail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 530,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 540,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 531,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 541,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 537,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 524,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "email_change_current"
                  },
                  {
                    "type": "literal",
                    "value": "email_change_new"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [538, 539, 540, 537]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 523,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 525,
      "name": "GenerateInviteOrMagiclinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 509,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 526,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 528,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 512,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 529,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 513,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 541,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 527,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 510,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [528, 529, 527]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 509,
              "character": 46
            }
          ]
        }
      }
    },
    {
      "id": 544,
      "name": "GenerateLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 545,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 519,
            "name": "GenerateSignupLinkParams"
          },
          {
            "type": "reference",
            "id": 525,
            "name": "GenerateInviteOrMagiclinkParams"
          },
          {
            "type": "reference",
            "id": 530,
            "name": "GenerateRecoveryLinkParams"
          },
          {
            "type": "reference",
            "id": 535,
            "name": "GenerateEmailChangeLinkParams"
          }
        ]
      }
    },
    {
      "id": 558,
      "name": "GenerateLinkProperties",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "The properties related to the email link generated"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 568,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 559,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 560,
              "name": "action_link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 573,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 561,
              "name": "email_otp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 578,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 562,
              "name": "hashed_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The hashed token appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 582,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 563,
              "name": "redirect_to",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The URL appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 584,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 564,
              "name": "verification_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The verification type that the email link is associated to."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 586,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 565,
                "name": "GenerateLinkType"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [560, 561, 562, 563, 564]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 568,
              "character": 37
            }
          ]
        }
      }
    },
    {
      "id": 545,
      "name": "GenerateLinkResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 551,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 546,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 547,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 553,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 548,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 549,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 554,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 558,
                            "name": "GenerateLinkProperties"
                          }
                        },
                        {
                          "id": 550,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 555,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 385,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [549, 550]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 553,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 551,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 557,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [547, 551]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 552,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 552,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 553,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 560,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 554,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 555,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 561,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 556,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 562,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [555, 556]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 560,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 557,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 564,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [553, 557]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 559,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 565,
      "name": "GenerateLinkType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 589,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change_current"
          },
          {
            "type": "literal",
            "value": "email_change_new"
          }
        ]
      }
    },
    {
      "id": 530,
      "name": "GenerateRecoveryLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 516,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 531,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 533,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 519,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 534,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 520,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 541,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 532,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 517,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "recovery"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [533, 534, 532]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 516,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 519,
      "name": "GenerateSignupLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 502,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 520,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 522,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 504,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 524,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 506,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 541,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 523,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 505,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 521,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 503,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "signup"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [522, 524, 523, 521]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 502,
              "character": 39
            }
          ]
        }
      }
    },
    {
      "id": 289,
      "name": "GoTrueClientOptions",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 34,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 290,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 298,
              "name": "autoRefreshToken",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 44,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 297,
              "name": "detectSessionInUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 42,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 301,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 50,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "name": "Fetch"
              }
            },
            {
              "id": 292,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 38,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 293,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 38,
                      "character": 12
                    }
                  ],
                  "indexSignature": {
                    "id": 294,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 295,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              }
            },
            {
              "id": 299,
              "name": "persistSession",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 46,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 300,
              "name": "storage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 48,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 707,
                "name": "SupportedStorage"
              }
            },
            {
              "id": 296,
              "name": "storageKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 40,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 291,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 36,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [298, 297, 301, 292, 299, 300, 296, 291]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 34,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 708,
      "name": "InitializeResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 901,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 709,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 710,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 901,
                  "character": 33
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [710]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 901,
              "character": 31
            }
          ]
        }
      }
    },
    {
      "id": 582,
      "name": "MFAChallengeAndVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 627,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 583,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 585,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 631,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 584,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 629,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [585, 584]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 627,
              "character": 42
            }
          ]
        }
      }
    },
    {
      "id": 579,
      "name": "MFAChallengeParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 622,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 580,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 581,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor to be challenged. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 624,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [581]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 622,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 566,
      "name": "MFAEnrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 597,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 567,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 568,
              "name": "factorType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The type of factor being enrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 599,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "totp"
              }
            },
            {
              "id": 570,
              "name": "friendlyName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Human readable name assigned to the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 603,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 569,
              "name": "issuer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Domain which the user is enrolled with."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 601,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [568, 570, 569]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 597,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 571,
      "name": "MFAUnenrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 606,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 572,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 573,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being unenrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 608,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [573]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 606,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 574,
      "name": "MFAVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 611,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 575,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 577,
              "name": "challengeId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the challenge being verified. Returned in challenge()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 616,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 578,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 619,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 576,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 613,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [577, 578, 576]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 611,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 507,
      "name": "MobileOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 481,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "sms"
          },
          {
            "type": "literal",
            "value": "phone_change"
          }
        ]
      }
    },
    {
      "id": 315,
      "name": "OAuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 69,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 316,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 317,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 71,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 318,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 319,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 72,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 286,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 320,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 73,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [319, 320]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 71,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 321,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 75,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [317, 321]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 70,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 322,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 323,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 78,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 324,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 325,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 79,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 286,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 326,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 80,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [325, 326]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 78,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 327,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 82,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [323, 327]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 77,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 725,
      "name": "PageParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 920,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 726,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 727,
              "name": "page",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The page number"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 922,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 728,
              "name": "perPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Number of items returned per page"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 924,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [727, 728]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 920,
              "character": 25
            }
          ]
        }
      }
    },
    {
      "id": 718,
      "name": "Pagination",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 913,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 719,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 721,
              "name": "lastPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 916,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 720,
              "name": "nextPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 915,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            },
            {
              "id": 722,
              "name": "total",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 917,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [721, 720, 722]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 913,
              "character": 25
            }
          ],
          "indexSignature": {
            "id": 723,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 724,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      }
    },
    {
      "id": 286,
      "name": "Provider",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "One of the providers supported by GoTrue."
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 5,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "apple"
          },
          {
            "type": "literal",
            "value": "azure"
          },
          {
            "type": "literal",
            "value": "bitbucket"
          },
          {
            "type": "literal",
            "value": "discord"
          },
          {
            "type": "literal",
            "value": "facebook"
          },
          {
            "type": "literal",
            "value": "github"
          },
          {
            "type": "literal",
            "value": "gitlab"
          },
          {
            "type": "literal",
            "value": "google"
          },
          {
            "type": "literal",
            "value": "keycloak"
          },
          {
            "type": "literal",
            "value": "linkedin"
          },
          {
            "type": "literal",
            "value": "notion"
          },
          {
            "type": "literal",
            "value": "slack"
          },
          {
            "type": "literal",
            "value": "spotify"
          },
          {
            "type": "literal",
            "value": "twitch"
          },
          {
            "type": "literal",
            "value": "twitter"
          },
          {
            "type": "literal",
            "value": "workos"
          }
        ]
      }
    },
    {
      "id": 328,
      "name": "SSOResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 85,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 329,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 330,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 87,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 331,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 332,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "URL to take the user to (in a browser) to complete SSO."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 89,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [332]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 87,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 333,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 91,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [330, 333]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 86,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 334,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 335,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 94,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 336,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 95,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [335, 336]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 93,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 479,
      "name": "SignInWithOAuthCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 433,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 480,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 482,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 436,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 483,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 486,
                      "name": "queryParams",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An object of query params"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 442,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 487,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 442,
                              "character": 18
                            }
                          ],
                          "indexSignature": {
                            "id": 488,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 489,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 484,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 438,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 485,
                      "name": "scopes",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 440,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [486, 484, 485]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 436,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 481,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "One of the providers supported by GoTrue."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 435,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 286,
                "name": "Provider"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [482, 481]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 433,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 448,
      "name": "SignInWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 363,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 449,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 450,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 366,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 452,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 369,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 453,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 455,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 377,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 454,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 375,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [455, 454]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 369,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 451,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 368,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [450, 452, 451]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 364,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 456,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 459,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 385,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 460,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 462,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 393,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 461,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 391,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [462, 461]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 385,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 458,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 384,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 457,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 382,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [459, 458, 457]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 380,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 463,
      "name": "SignInWithPasswordlessCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 397,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 464,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 465,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 400,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 466,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 401,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 467,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 471,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 413,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 470,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 411,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 468,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 403,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 469,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 405,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [471, 470, 468, 469]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 401,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [465, 466]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 398,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 472,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 474,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 419,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 475,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 478,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 429,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 477,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 427,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 476,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 421,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [478, 477, 476]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 419,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 473,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 418,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [474, 473]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 416,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 509,
      "name": "SignInWithSSO",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 484,
          "character": 12
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 510,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 511,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 485,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 512,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 514,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 489,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 513,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 487,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [514, 513]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 485,
                          "character": 12
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [511]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 484,
                  "character": 28
                }
              ]
            }
          },
          {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 515,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 516,
                      "name": "providerId",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "UUID of the SSO provider to invoke single-sign on to."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 494,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [516]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 492,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 517,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 518,
                      "name": "domain",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "Domain name of the organization for which to invoke single-sign on."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 498,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [518]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 496,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 432,
      "name": "SignUpWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 328,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 433,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 434,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 331,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 436,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 334,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 437,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 440,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 344,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 439,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 342,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 438,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 336,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [440, 439, 438]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 334,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 435,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 333,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [434, 436, 435]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 329,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 441,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 444,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 352,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 445,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 447,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 360,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 446,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 358,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [447, 446]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 352,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 443,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 351,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 442,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 349,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [444, 443, 442]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 347,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 707,
      "name": "SupportedStorage",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 899,
          "character": 12
        }
      ],
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "Storage",
                "package": "typescript",
                "name": "Storage"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "getItem"
                  },
                  {
                    "type": "literal",
                    "value": "setItem"
                  },
                  {
                    "type": "literal",
                    "value": "removeItem"
                  }
                ]
              }
            ],
            "qualifiedName": "Pick",
            "package": "typescript",
            "name": "Pick"
          }
        ],
        "name": "PromisifyMethods"
      }
    },
    {
      "id": 337,
      "name": "UserResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 98,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 338,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 339,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 100,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 340,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 341,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 101,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 385,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [341]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 100,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 342,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 103,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [339, 342]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 99,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 343,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 344,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 106,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 345,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 346,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 107,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [346]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 106,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 347,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 109,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 735,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [344, 347]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 105,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 490,
      "name": "VerifyOtpParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 446,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 491,
            "name": "VerifyMobileOtpParams"
          },
          {
            "type": "reference",
            "id": 499,
            "name": "VerifyEmailOtpParams"
          }
        ]
      }
    },
    {
      "id": 732,
      "name": "isAuthApiError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 32,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 733,
          "name": "isAuthApiError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 734,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 740,
              "name": "AuthApiError"
            }
          }
        }
      ]
    },
    {
      "id": 729,
      "name": "isAuthError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 10,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 730,
          "name": "isAuthError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 731,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 735,
              "name": "AuthError"
            }
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [740, 735, 800, 787, 825, 775, 753, 760, 1, 76]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [357, 412, 371, 541, 700, 655, 348, 422, 430, 385, 378, 407, 360, 382, 499, 491]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [
        288, 287, 684, 675, 697, 688, 623, 599, 644, 633, 614, 586, 302, 643, 711, 508, 535, 525,
        544, 558, 545, 565, 530, 519, 289, 708, 582, 579, 566, 571, 574, 507, 315, 725, 718, 286,
        328, 479, 448, 463, 509, 432, 707, 337, 490
      ]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [732, 729]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
