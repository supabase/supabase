{
  "id": 0,
  "name": "@supabase/gotrue-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 811,
      "name": "AuthApiError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 812,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 19,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 813,
              "name": "new AuthApiError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 814,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 815,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 811,
                "name": "AuthApiError"
              },
              "overwrites": {
                "type": "reference",
                "id": 806,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 805,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 816,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 17,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 809,
            "name": "AuthError.status"
          }
        },
        {
          "id": 817,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 25,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 818,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 819,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 821,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 28,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 820,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 27,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 822,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 29,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        821,
                        820,
                        822
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            812
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            816
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            817
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 16,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 804,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 804,
      "name": "AuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 805,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 5,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 806,
              "name": "new AuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 807,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 808,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 804,
                "name": "AuthError"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        },
        {
          "id": 809,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 2,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            805
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            809
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 1,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "Error",
          "package": "typescript",
          "name": "Error"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 811,
          "name": "AuthApiError"
        },
        {
          "type": "reference",
          "id": 824,
          "name": "AuthUnknownError"
        },
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 872,
      "name": "AuthImplicitGrantRedirectError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 873,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 80,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 874,
              "name": "new AuthImplicitGrantRedirectError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 875,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 876,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 877,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 879,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 80,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 878,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 80,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                879,
                                878
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 872,
                "name": "AuthImplicitGrantRedirectError"
              },
              "overwrites": {
                "type": "reference",
                "id": 834,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 833,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 880,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 79,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 881,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 883,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 79,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 882,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 79,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        883,
                        882
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 894,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 838,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 895,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 839,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 884,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 85,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 885,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 886,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 890,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 90,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 891,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 893,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 79,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 892,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 79,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    893,
                                    892
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 888,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 88,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 887,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 87,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 889,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 89,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        890,
                        888,
                        887,
                        889
                      ]
                    }
                  ]
                }
              },
              "overwrites": {
                "type": "reference",
                "id": 841,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 840,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            873
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            880,
            894,
            895
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            884
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 78,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 859,
      "name": "AuthInvalidCredentialsError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 860,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 73,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 861,
              "name": "new AuthInvalidCredentialsError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 862,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 859,
                "name": "AuthInvalidCredentialsError"
              },
              "overwrites": {
                "type": "reference",
                "id": 834,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 833,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 863,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 838,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 864,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 839,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 865,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 866,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 867,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 869,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 60,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 868,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 870,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        869,
                        868,
                        870
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 841,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 840,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            860
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            863,
            864
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            865
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 72,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 897,
      "name": "AuthPKCEGrantCodeExchangeError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 898,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 97,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 899,
              "name": "new AuthPKCEGrantCodeExchangeError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 900,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 901,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 902,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 904,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 97,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 903,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 97,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                904,
                                903
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 897,
                "name": "AuthPKCEGrantCodeExchangeError"
              },
              "overwrites": {
                "type": "reference",
                "id": 834,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 833,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 905,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 96,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 906,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 908,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 96,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 907,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 96,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        908,
                        907
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 919,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 838,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 920,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 839,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 909,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 102,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 910,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 911,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 915,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 107,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 916,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 918,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 96,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 917,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 96,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    918,
                                    917
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 913,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 105,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 912,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 104,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 914,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 106,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        915,
                        913,
                        912,
                        914
                      ]
                    }
                  ]
                }
              },
              "overwrites": {
                "type": "reference",
                "id": 841,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 840,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            898
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            905,
            919,
            920
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            909
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 95,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 922,
      "name": "AuthRetryableFetchError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 923,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 113,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 924,
              "name": "new AuthRetryableFetchError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 925,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 926,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 922,
                "name": "AuthRetryableFetchError"
              },
              "overwrites": {
                "type": "reference",
                "id": 834,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 833,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 927,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 838,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 928,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 839,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 929,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 930,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 931,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 933,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 60,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 932,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 934,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        933,
                        932,
                        934
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 841,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 840,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            923
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            927,
            928
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            929
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 112,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 847,
      "name": "AuthSessionMissingError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 848,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 67,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 849,
              "name": "new AuthSessionMissingError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 847,
                "name": "AuthSessionMissingError"
              },
              "overwrites": {
                "type": "reference",
                "id": 834,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 833,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 850,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 838,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 851,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 839,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 852,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 853,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 854,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 856,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 60,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 855,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 857,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        856,
                        855,
                        857
                      ]
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 841,
                "name": "CustomAuthError.toJSON"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 840,
            "name": "CustomAuthError.toJSON"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            848
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            850,
            851
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            852
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 66,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 832,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 824,
      "name": "AuthUnknownError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 825,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 41,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 826,
              "name": "new AuthUnknownError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 827,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 828,
                  "name": "originalError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 824,
                "name": "AuthUnknownError"
              },
              "overwrites": {
                "type": "reference",
                "id": 806,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 805,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 829,
          "name": "originalError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 39,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 830,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 2,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 809,
            "name": "AuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            825
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            829,
            830
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 38,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 804,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 832,
      "name": "CustomAuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 833,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 51,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 834,
              "name": "new CustomAuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 835,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 836,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 837,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 832,
                "name": "CustomAuthError"
              },
              "overwrites": {
                "type": "reference",
                "id": 806,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 805,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 838,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 49,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "AuthError.name"
          }
        },
        {
          "id": 839,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 50,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 809,
            "name": "AuthError.status"
          }
        },
        {
          "id": 840,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 841,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 842,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 844,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 60,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 843,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 59,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 845,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 61,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        844,
                        843,
                        845
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            833
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            838,
            839
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            840
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 48,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 804,
          "name": "AuthError"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 847,
          "name": "AuthSessionMissingError"
        },
        {
          "type": "reference",
          "id": 859,
          "name": "AuthInvalidCredentialsError"
        },
        {
          "type": "reference",
          "id": 872,
          "name": "AuthImplicitGrantRedirectError"
        },
        {
          "type": "reference",
          "id": 897,
          "name": "AuthPKCEGrantCodeExchangeError"
        },
        {
          "type": "reference",
          "id": 922,
          "name": "AuthRetryableFetchError"
        }
      ]
    },
    {
      "id": 1,
      "name": "GoTrueAdminApi",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 35,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new GoTrueAdminApi",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 4,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 5,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 11,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 44,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 12,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 13,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 14,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 15,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 41,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 6,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 40,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            11,
                            7,
                            6
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Contains all MFA administration methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 27,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 769,
            "name": "GoTrueAdminMFAApi",
            "dereferenced": {
              "id": 769,
              "name": "GoTrueAdminMFAApi",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "comment": {
                "shortText": "Contains the full multi-factor authentication administration API.",
                "tags": [
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "children": [
                {
                  "id": 773,
                  "name": "deleteFactor",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 774,
                      "name": "deleteFactor",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                        "tags": [
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#unenroll}\n"
                          },
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "parameters": [
                        {
                          "id": 775,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 753,
                            "name": "AuthMFAAdminDeleteFactorParams",
                            "dereferenced": {
                              "id": 753,
                              "name": "AuthMFAAdminDeleteFactorParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "comment": {
                                "tags": [
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 894,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 754,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 755,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the MFA factor to delete."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 896,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 756,
                                      "name": "userId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the user whose factor is being deleted."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 899,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        755,
                                        756
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 894,
                                      "character": 45
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 744,
                            "name": "AuthMFAAdminDeleteFactorResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 770,
                  "name": "listFactors",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 771,
                      "name": "listFactors",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Lists all factors associated to a user."
                      },
                      "parameters": [
                        {
                          "id": 772,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 766,
                            "name": "AuthMFAAdminListFactorsParams",
                            "dereferenced": {
                              "id": 766,
                              "name": "AuthMFAAdminListFactorsParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "comment": {
                                "tags": [
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 918,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 767,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 768,
                                      "name": "userId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 920,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        768
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 918,
                                      "character": 44
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 757,
                            "name": "AuthMFAAdminListFactorsResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    773,
                    770
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 928,
                  "character": 17
                }
              ]
            }
          }
        },
        {
          "id": 43,
          "name": "createUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 148,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 44,
              "name": "createUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 45,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 454,
                    "name": "AdminUserAttributes",
                    "dereferenced": {
                      "id": 454,
                      "name": "AdminUserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 456,
                          "name": "app_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 296,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 459,
                          "name": "ban_duration",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Determines how long a user is banned for.",
                            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 322,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 462,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 247,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.email"
                          }
                        },
                        {
                          "id": 457,
                          "name": "email_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's email address if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 303,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 461,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 264,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.nonce"
                          }
                        },
                        {
                          "id": 460,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 257,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.password"
                          }
                        },
                        {
                          "id": 463,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 252,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.phone"
                          }
                        },
                        {
                          "id": 458,
                          "name": "phone_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's phone number if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 310,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 455,
                          "name": "user_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 286,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            456,
                            459,
                            462,
                            457,
                            461,
                            460,
                            463,
                            458,
                            455
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 275,
                          "character": 17
                        }
                      ],
                      "extendedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 448,
                              "name": "UserAttributes"
                            },
                            {
                              "type": "literal",
                              "value": "data"
                            }
                          ],
                          "qualifiedName": "Omit",
                          "package": "typescript",
                          "name": "Omit"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 67,
          "name": "deleteUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 264,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 68,
              "name": "deleteUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Delete a user. Requires a `service_role` key."
              },
              "parameters": [
                {
                  "id": 69,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user id you want to remove."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 70,
                  "name": "shouldSoftDelete",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If true, then the user will be soft-deleted from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 40,
          "name": "generateLink",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 114,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 41,
              "name": "generateLink",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generates email links and OTPs to be sent via a custom email provider."
              },
              "parameters": [
                {
                  "id": 42,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 613,
                    "name": "GenerateLinkParams",
                    "dereferenced": {
                      "id": 613,
                      "name": "GenerateLinkParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 601,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "id": 588,
                            "name": "GenerateSignupLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 558,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 589,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 591,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 560,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 593,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 562,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 610,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "data"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ]
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 592,
                                    "name": "password",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 561,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 590,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 559,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "signup"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      591,
                                      593,
                                      592,
                                      590
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 558,
                                    "character": 39
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 594,
                            "name": "GenerateInviteOrMagiclinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 565,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 595,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 597,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 568,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 598,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 569,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 610,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "data"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ]
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 596,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 566,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "invite"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "magiclink"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      597,
                                      598,
                                      596
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 565,
                                    "character": 46
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 599,
                            "name": "GenerateRecoveryLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 572,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 600,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 602,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 575,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 603,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 576,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 610,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "redirectTo"
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 601,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 573,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "recovery"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      602,
                                      603,
                                      601
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 572,
                                    "character": 41
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 604,
                            "name": "GenerateEmailChangeLinkParams",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 579,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 605,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 607,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 582,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 608,
                                    "name": "newEmail",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 586,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 609,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 587,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 610,
                                          "name": "GenerateLinkOptions"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "redirectTo"
                                        }
                                      ],
                                      "qualifiedName": "Pick",
                                      "package": "typescript",
                                      "name": "Pick"
                                    }
                                  },
                                  {
                                    "id": 606,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 580,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "email_change_current"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email_change_new"
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [
                                      607,
                                      608,
                                      609,
                                      606
                                    ]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 579,
                                    "character": 44
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 614,
                    "name": "GenerateLinkResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 60,
          "name": "getUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 217,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 61,
              "name": "getUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get user by id."
              },
              "parameters": [
                {
                  "id": 62,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "inviteUserByEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 81,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "inviteUserByEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends an invite link to an email address."
              },
              "parameters": [
                {
                  "id": 35,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 36,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Additional options to be included when inviting.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 37,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 38,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 85,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 39,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 88,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            38,
                            39
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 46,
          "name": "listUsers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 170,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 47,
              "name": "listUsers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a list of users.",
                "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 48,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 794,
                    "name": "PageParams",
                    "dereferenced": {
                      "id": 794,
                      "name": "PageParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 976,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 795,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 796,
                              "name": "page",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The page number"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 978,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 797,
                              "name": "perPage",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Number of items returned per page"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 980,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                796,
                                797
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 976,
                              "character": 25
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 49,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 50,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 173,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 51,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 53,
                                          "name": "aud",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 173,
                                              "character": 31
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 52,
                                          "name": "users",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 173,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "array",
                                            "elementType": {
                                              "type": "reference",
                                              "id": 425,
                                              "name": "User"
                                            }
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            53,
                                            52
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "reference",
                                    "id": 787,
                                    "name": "Pagination"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 54,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 173,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                50,
                                54
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 55,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 56,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 174,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 57,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 58,
                                      "name": "users",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 174,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "tuple"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        58
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 59,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 174,
                                  "character": 29
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 804,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                56,
                                59
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 59,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 28,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Removes a logged-in session."
              },
              "parameters": [
                {
                  "id": 29,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A valid, logged-in JWT.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 30,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 31,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 59,
                              "character": 40
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 32,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 59,
                              "character": 52
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 804,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            31,
                            32
                          ]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 63,
          "name": "updateUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 239,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 64,
              "name": "updateUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates the user data."
              },
              "parameters": [
                {
                  "id": 65,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 66,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 454,
                    "name": "AdminUserAttributes",
                    "dereferenced": {
                      "id": 454,
                      "name": "AdminUserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 456,
                          "name": "app_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 296,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 459,
                          "name": "ban_duration",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Determines how long a user is banned for.",
                            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 322,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 462,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 247,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.email"
                          }
                        },
                        {
                          "id": 457,
                          "name": "email_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's email address if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 303,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 461,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 264,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.nonce"
                          }
                        },
                        {
                          "id": 460,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 257,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.password"
                          }
                        },
                        {
                          "id": 463,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 252,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "inheritedFrom": {
                            "type": "reference",
                            "name": "Omit.phone"
                          }
                        },
                        {
                          "id": 458,
                          "name": "phone_confirm",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Confirms the user's phone number if set to true.",
                            "text": "Only a service role can modify.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 310,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 455,
                          "name": "user_metadata",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 286,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            456,
                            459,
                            462,
                            457,
                            461,
                            460,
                            463,
                            458,
                            455
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 275,
                          "character": 17
                        }
                      ],
                      "extendedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 448,
                              "name": "UserAttributes"
                            },
                            {
                              "type": "literal",
                              "value": "data"
                            }
                          ],
                          "qualifiedName": "Omit",
                          "package": "typescript",
                          "name": "Omit"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            2
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            16
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            43,
            67,
            40,
            60,
            33,
            46,
            27,
            63
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueAdminApi.ts",
          "line": 25,
          "character": 21
        }
      ]
    },
    {
      "id": 77,
      "name": "GoTrueClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 78,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 145,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 79,
              "name": "new GoTrueClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Create a new client for use in the browser."
              },
              "parameters": [
                {
                  "id": 80,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 328,
                    "name": "GoTrueClientOptions",
                    "dereferenced": {
                      "id": 328,
                      "name": "GoTrueClientOptions",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 35,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 329,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 337,
                              "name": "autoRefreshToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 45,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 336,
                              "name": "detectSessionInUrl",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 43,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 340,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 51,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "Fetch"
                              }
                            },
                            {
                              "id": 341,
                              "name": "flowType",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 53,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 522,
                                "name": "AuthFlowType",
                                "dereferenced": {
                                  "id": 522,
                                  "name": "AuthFlowType",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 447,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "implicit"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "pkce"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              "id": 331,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 39,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 332,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 39,
                                      "character": 12
                                    }
                                  ],
                                  "indexSignature": {
                                    "id": 333,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 334,
                                        "name": "key",
                                        "kind": 32768,
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 338,
                              "name": "persistSession",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 47,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 339,
                              "name": "storage",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 49,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 776,
                                "name": "SupportedStorage",
                                "dereferenced": {
                                  "id": 776,
                                  "name": "SupportedStorage",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 955,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Storage",
                                            "package": "typescript",
                                            "name": "Storage"
                                          },
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "getItem"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "setItem"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "removeItem"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Pick",
                                        "package": "typescript",
                                        "name": "Pick"
                                      }
                                    ],
                                    "name": "PromisifyMethods"
                                  }
                                }
                              }
                            },
                            {
                              "id": 335,
                              "name": "storageKey",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 41,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 330,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 37,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                337,
                                336,
                                340,
                                341,
                                331,
                                338,
                                339,
                                335,
                                330
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 35,
                              "character": 34
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 77,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 81,
          "name": "admin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 98,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1,
            "name": "default",
            "dereferenced": {
              "id": 1,
              "name": "GoTrueAdminApi",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 2,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 35,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 3,
                      "name": "new GoTrueAdminApi",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 4,
                          "name": "__namedParameters",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 5,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 11,
                                  "name": "fetch",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 44,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 12,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "signatures": [
                                        {
                                          "id": 13,
                                          "name": "__type",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "parameters": [
                                            {
                                              "id": 14,
                                              "name": "input",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "RequestInfo",
                                                    "package": "typescript",
                                                    "name": "RequestInfo"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "URL",
                                                    "package": "typescript",
                                                    "name": "URL"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": 15,
                                              "name": "init",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "type": {
                                                "type": "reference",
                                                "qualifiedName": "RequestInit",
                                                "package": "typescript",
                                                "name": "RequestInit"
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "Response",
                                                "package": "typescript",
                                                "name": "Response"
                                              }
                                            ],
                                            "qualifiedName": "Promise",
                                            "package": "typescript",
                                            "name": "Promise"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 7,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 41,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 8,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "indexSignature": {
                                        "id": 9,
                                        "name": "__index",
                                        "kind": 8192,
                                        "kindString": "Index signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 10,
                                            "name": "key",
                                            "kind": 32768,
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 6,
                                  "name": "url",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 40,
                                      "character": 4
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    11,
                                    7,
                                    6
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1,
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 16,
                  "name": "mfa",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Contains all MFA administration methods."
                  },
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 27,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 769,
                    "name": "GoTrueAdminMFAApi",
                    "dereferenced": {
                      "id": 769,
                      "name": "GoTrueAdminMFAApi",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "comment": {
                        "shortText": "Contains the full multi-factor authentication administration API.",
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "children": [
                        {
                          "id": 773,
                          "name": "deleteFactor",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 774,
                              "name": "deleteFactor",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                                "tags": [
                                  {
                                    "tag": "see",
                                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                                  },
                                  {
                                    "tag": "expermental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "parameters": [
                                {
                                  "id": 775,
                                  "name": "params",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 753,
                                    "name": "AuthMFAAdminDeleteFactorParams",
                                    "dereferenced": {
                                      "id": 753,
                                      "name": "AuthMFAAdminDeleteFactorParams",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "tags": [
                                          {
                                            "tag": "expermental",
                                            "text": "\n"
                                          }
                                        ]
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 894,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 754,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 755,
                                              "name": "id",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the MFA factor to delete."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 896,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 756,
                                              "name": "userId",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the user whose factor is being deleted."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 899,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                755,
                                                756
                                              ]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 894,
                                              "character": 45
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 744,
                                    "name": "AuthMFAAdminDeleteFactorResponse"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        },
                        {
                          "id": 770,
                          "name": "listFactors",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 771,
                              "name": "listFactors",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Lists all factors associated to a user."
                              },
                              "parameters": [
                                {
                                  "id": 772,
                                  "name": "params",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 766,
                                    "name": "AuthMFAAdminListFactorsParams",
                                    "dereferenced": {
                                      "id": 766,
                                      "name": "AuthMFAAdminListFactorsParams",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "tags": [
                                          {
                                            "tag": "expermental",
                                            "text": "\n"
                                          }
                                        ]
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 918,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 767,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 768,
                                              "name": "userId",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "ID of the user."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 920,
                                                  "character": 2
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                768
                                              ]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 918,
                                              "character": 44
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 757,
                                    "name": "AuthMFAAdminListFactorsResponse"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [
                            773,
                            770
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 928,
                          "character": 17
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 43,
                  "name": "createUser",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 148,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 44,
                      "name": "createUser",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
                      },
                      "parameters": [
                        {
                          "id": 45,
                          "name": "attributes",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 454,
                            "name": "AdminUserAttributes",
                            "dereferenced": {
                              "id": 454,
                              "name": "AdminUserAttributes",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 456,
                                  "name": "app_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                    "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 296,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 459,
                                  "name": "ban_duration",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Determines how long a user is banned for.",
                                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 322,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 462,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's email."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 247,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.email"
                                  }
                                },
                                {
                                  "id": 457,
                                  "name": "email_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's email address if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 303,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 461,
                                  "name": "nonce",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                    "text": "Call reauthenticate() to obtain the nonce first.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 264,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.nonce"
                                  }
                                },
                                {
                                  "id": 460,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 257,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.password"
                                  }
                                },
                                {
                                  "id": 463,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's phone."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 252,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.phone"
                                  }
                                },
                                {
                                  "id": 458,
                                  "name": "phone_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's phone number if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 310,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 455,
                                  "name": "user_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                    "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 286,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    456,
                                    459,
                                    462,
                                    457,
                                    461,
                                    460,
                                    463,
                                    458,
                                    455
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 275,
                                  "character": 17
                                }
                              ],
                              "extendedTypes": [
                                {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "id": 448,
                                      "name": "UserAttributes"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "data"
                                    }
                                  ],
                                  "qualifiedName": "Omit",
                                  "package": "typescript",
                                  "name": "Omit"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 377,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 67,
                  "name": "deleteUser",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 264,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 68,
                      "name": "deleteUser",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Delete a user. Requires a `service_role` key."
                      },
                      "parameters": [
                        {
                          "id": 69,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The user id you want to remove."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 70,
                          "name": "shouldSoftDelete",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "If true, then the user will be soft-deleted from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 377,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 40,
                  "name": "generateLink",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 114,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 41,
                      "name": "generateLink",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Generates email links and OTPs to be sent via a custom email provider."
                      },
                      "parameters": [
                        {
                          "id": 42,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 613,
                            "name": "GenerateLinkParams",
                            "dereferenced": {
                              "id": 613,
                              "name": "GenerateLinkParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 601,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "id": 588,
                                    "name": "GenerateSignupLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 558,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 589,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 591,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 560,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 593,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 562,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 610,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "data"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 592,
                                            "name": "password",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 561,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 590,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 559,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "literal",
                                              "value": "signup"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              591,
                                              593,
                                              592,
                                              590
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 558,
                                            "character": 39
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 594,
                                    "name": "GenerateInviteOrMagiclinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 565,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 595,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 597,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 568,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 598,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 569,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 610,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "data"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 596,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 566,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "invite"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "magiclink"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              597,
                                              598,
                                              596
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 565,
                                            "character": 46
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 599,
                                    "name": "GenerateRecoveryLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 572,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 600,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 602,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 575,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 603,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 576,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 610,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 601,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 573,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "literal",
                                              "value": "recovery"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              602,
                                              603,
                                              601
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 572,
                                            "character": 41
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 604,
                                    "name": "GenerateEmailChangeLinkParams",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 579,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 605,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 607,
                                            "name": "email",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's email"
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 582,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 608,
                                            "name": "newEmail",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 586,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 609,
                                            "name": "options",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 587,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "reference",
                                              "typeArguments": [
                                                {
                                                  "type": "reference",
                                                  "id": 610,
                                                  "name": "GenerateLinkOptions"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ],
                                              "qualifiedName": "Pick",
                                              "package": "typescript",
                                              "name": "Pick"
                                            }
                                          },
                                          {
                                            "id": 606,
                                            "name": "type",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 580,
                                                "character": 2
                                              }
                                            ],
                                            "type": {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "email_change_current"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "email_change_new"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [
                                              607,
                                              608,
                                              609,
                                              606
                                            ]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 579,
                                            "character": 44
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 614,
                            "name": "GenerateLinkResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 60,
                  "name": "getUserById",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 217,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 61,
                      "name": "getUserById",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Get user by id."
                      },
                      "parameters": [
                        {
                          "id": 62,
                          "name": "uid",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 377,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 33,
                  "name": "inviteUserByEmail",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 81,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 34,
                      "name": "inviteUserByEmail",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Sends an invite link to an email address."
                      },
                      "parameters": [
                        {
                          "id": 35,
                          "name": "email",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The email address of the user."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 36,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "Additional options to be included when inviting.\n"
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 37,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 38,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 85,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 39,
                                  "name": "redirectTo",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 88,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    38,
                                    39
                                  ]
                                }
                              ]
                            }
                          },
                          "defaultValue": "{}"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 377,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 46,
                  "name": "listUsers",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 170,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 47,
                      "name": "listUsers",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Get a list of users.",
                        "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
                      },
                      "parameters": [
                        {
                          "id": 48,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 794,
                            "name": "PageParams",
                            "dereferenced": {
                              "id": 794,
                              "name": "PageParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 976,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 795,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 796,
                                      "name": "page",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The page number"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 978,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    },
                                    {
                                      "id": 797,
                                      "name": "perPage",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Number of items returned per page"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 980,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        796,
                                        797
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 976,
                                      "character": 25
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 49,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 50,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 173,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "intersection",
                                        "types": [
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 51,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 53,
                                                  "name": "aud",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/GoTrueAdminApi.ts",
                                                      "line": 173,
                                                      "character": 31
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                },
                                                {
                                                  "id": 52,
                                                  "name": "users",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/GoTrueAdminApi.ts",
                                                      "line": 173,
                                                      "character": 16
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "array",
                                                    "elementType": {
                                                      "type": "reference",
                                                      "id": 425,
                                                      "name": "User"
                                                    }
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [
                                                    53,
                                                    52
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "reference",
                                            "id": 787,
                                            "name": "Pagination"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 54,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 173,
                                          "character": 59
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        50,
                                        54
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 55,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 56,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 174,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 57,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 58,
                                              "name": "users",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/GoTrueAdminApi.ts",
                                                  "line": 174,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "tuple"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [
                                                58
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 59,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 174,
                                          "character": 29
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 804,
                                        "name": "AuthError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        56,
                                        59
                                      ]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 27,
                  "name": "signOut",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 59,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 28,
                      "name": "signOut",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Removes a logged-in session."
                      },
                      "parameters": [
                        {
                          "id": 29,
                          "name": "jwt",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A valid, logged-in JWT.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 30,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 31,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 59,
                                      "character": 40
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 32,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 59,
                                      "character": 52
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reference",
                                        "id": 804,
                                        "name": "AuthError"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    31,
                                    32
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 63,
                  "name": "updateUserById",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 239,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 64,
                      "name": "updateUserById",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Updates the user data."
                      },
                      "parameters": [
                        {
                          "id": 65,
                          "name": "uid",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 66,
                          "name": "attributes",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 454,
                            "name": "AdminUserAttributes",
                            "dereferenced": {
                              "id": 454,
                              "name": "AdminUserAttributes",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 456,
                                  "name": "app_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                    "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 296,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                },
                                {
                                  "id": 459,
                                  "name": "ban_duration",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Determines how long a user is banned for.",
                                    "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 322,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 462,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's email."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 247,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.email"
                                  }
                                },
                                {
                                  "id": 457,
                                  "name": "email_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's email address if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 303,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 461,
                                  "name": "nonce",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                    "text": "Call reauthenticate() to obtain the nonce first.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 264,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.nonce"
                                  }
                                },
                                {
                                  "id": 460,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 257,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.password"
                                  }
                                },
                                {
                                  "id": 463,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The user's phone."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 252,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  "inheritedFrom": {
                                    "type": "reference",
                                    "name": "Omit.phone"
                                  }
                                },
                                {
                                  "id": 458,
                                  "name": "phone_confirm",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Confirms the user's phone number if set to true.",
                                    "text": "Only a service role can modify.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 310,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 455,
                                  "name": "user_metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                    "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 286,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "object"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    456,
                                    459,
                                    462,
                                    457,
                                    461,
                                    460,
                                    463,
                                    458,
                                    455
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 275,
                                  "character": 17
                                }
                              ],
                              "extendedTypes": [
                                {
                                  "type": "reference",
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "id": 448,
                                      "name": "UserAttributes"
                                    },
                                    {
                                      "type": "literal",
                                      "value": "data"
                                    }
                                  ],
                                  "qualifiedName": "Omit",
                                  "package": "typescript",
                                  "name": "Omit"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 377,
                            "name": "UserResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [
                    2
                  ]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    16
                  ]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    43,
                    67,
                    40,
                    60,
                    33,
                    46,
                    27,
                    63
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 25,
                  "character": 21
                }
              ]
            }
          }
        },
        {
          "id": 82,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the MFA methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 102,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 724,
            "name": "GoTrueMFAApi",
            "dereferenced": {
              "id": 724,
              "name": "GoTrueMFAApi",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "comment": {
                "shortText": "Contains the full multi-factor authentication API."
              },
              "children": [
                {
                  "id": 728,
                  "name": "challenge",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 729,
                      "name": "challenge",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
                      },
                      "parameters": [
                        {
                          "id": 730,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 648,
                            "name": "MFAChallengeParams",
                            "dereferenced": {
                              "id": 648,
                              "name": "MFAChallengeParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 678,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 649,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 650,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor to be challenged. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 680,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        650
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 678,
                                      "character": 33
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 692,
                            "name": "AuthMFAChallengeResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 737,
                  "name": "challengeAndVerify",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 738,
                      "name": "challengeAndVerify",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                      },
                      "parameters": [
                        {
                          "id": 739,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 651,
                            "name": "MFAChallengeAndVerifyParams",
                            "dereferenced": {
                              "id": 651,
                              "name": "MFAChallengeAndVerifyParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 683,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 652,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 654,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Verification code provided by the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 687,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 653,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being verified. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 685,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        654,
                                        653
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 683,
                                      "character": 42
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 655,
                            "name": "AuthMFAVerifyResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 725,
                  "name": "enroll",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 726,
                      "name": "enroll",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                        "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
                      },
                      "parameters": [
                        {
                          "id": 727,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 635,
                            "name": "MFAEnrollParams",
                            "dereferenced": {
                              "id": 635,
                              "name": "MFAEnrollParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 653,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 636,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 637,
                                      "name": "factorType",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The type of factor being enrolled."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 655,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "totp"
                                      }
                                    },
                                    {
                                      "id": 639,
                                      "name": "friendlyName",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Human readable name assigned to the factor."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 659,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 638,
                                      "name": "issuer",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Domain which the user is enrolled with."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 657,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        637,
                                        639,
                                        638
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 653,
                                      "character": 30
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 668,
                            "name": "AuthMFAEnrollResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 742,
                  "name": "getAuthenticatorAssuranceLevel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 743,
                      "name": "getAuthenticatorAssuranceLevel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                        "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 713,
                            "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 740,
                  "name": "listFactors",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 741,
                      "name": "listFactors",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Returns the list of MFA factors enabled for this user.",
                        "tags": [
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#enroll}"
                          },
                          {
                            "tag": "see",
                            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                          },
                          {
                            "tag": "see",
                            "text": "{@link GoTrueClient#getUser}\n\n"
                          }
                        ]
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 702,
                            "name": "AuthMFAListFactorsResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 734,
                  "name": "unenroll",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 735,
                      "name": "unenroll",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
                      },
                      "parameters": [
                        {
                          "id": 736,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 640,
                            "name": "MFAUnenrollParams",
                            "dereferenced": {
                              "id": 640,
                              "name": "MFAUnenrollParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 662,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 641,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 642,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being unenrolled."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 664,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        642
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 662,
                                      "character": 32
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 683,
                            "name": "AuthMFAUnenrollResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 731,
                  "name": "verify",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 732,
                      "name": "verify",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                      },
                      "parameters": [
                        {
                          "id": 733,
                          "name": "params",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 643,
                            "name": "MFAVerifyParams",
                            "dereferenced": {
                              "id": 643,
                              "name": "MFAVerifyParams",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 667,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 644,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 646,
                                      "name": "challengeId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the challenge being verified. Returned in challenge()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 672,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 647,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Verification code provided by the user."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 675,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 645,
                                      "name": "factorId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "ID of the factor being verified. Returned in enroll()."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 669,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        646,
                                        647,
                                        645
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 667,
                                      "character": 30
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 655,
                            "name": "AuthMFAVerifyResponse"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    728,
                    737,
                    725,
                    742,
                    740,
                    734,
                    731
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 815,
                  "character": 17
                }
              ]
            }
          }
        },
        {
          "id": 121,
          "name": "exchangeCodeForSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 411,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 122,
              "name": "exchangeCodeForSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
              },
              "parameters": [
                {
                  "id": 123,
                  "name": "authCode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 141,
          "name": "getSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 693,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 142,
              "name": "getSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the session, refreshing it if necessary.\nThe session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 143,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 144,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 695,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 145,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 146,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 696,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "Session"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        146
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 147,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 698,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                144,
                                147
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 148,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 149,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 701,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 150,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 151,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 702,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        151
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 152,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 704,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 804,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                149,
                                152
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 153,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 154,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 707,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 155,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 156,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 708,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        156
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 157,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 710,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                154,
                                157
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 158,
          "name": "getUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 756,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 159,
              "name": "getUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets the current user details if there is an existing session."
              },
              "parameters": [
                {
                  "id": 160,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 108,
          "name": "initialize",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 197,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 109,
              "name": "initialize",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 777,
                    "name": "InitializeResult"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 208,
          "name": "onAuthStateChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1071,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 209,
              "name": "onAuthStateChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Receive a notification every time an auth event happens."
              },
              "parameters": [
                {
                  "id": 210,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A callback function to be invoked when an auth event happens.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 211,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 212,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 213,
                              "name": "event",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 327,
                                "name": "AuthChangeEvent"
                              }
                            },
                            {
                              "id": 214,
                              "name": "session",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 388,
                                    "name": "Session"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 215,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 216,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueClient.ts",
                          "line": 1072,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 217,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 218,
                              "name": "subscription",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1072,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 464,
                                "name": "Subscription",
                                "dereferenced": {
                                  "id": 464,
                                  "name": "Subscription",
                                  "kind": 256,
                                  "kindString": "Interface",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 465,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The subscriber UUID. This will be set by the client."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 329,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 466,
                                      "name": "callback",
                                      "kind": 2048,
                                      "kindString": "Method",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 333,
                                          "character": 2
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 467,
                                          "name": "callback",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
                                          },
                                          "parameters": [
                                            {
                                              "id": 468,
                                              "name": "event",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "reference",
                                                "id": 327,
                                                "name": "AuthChangeEvent",
                                                "dereferenced": {
                                                  "id": 327,
                                                  "name": "AuthChangeEvent",
                                                  "kind": 4194304,
                                                  "kindString": "Type alias",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 26,
                                                      "character": 12
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "literal",
                                                        "value": "INITIAL_SESSION"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "PASSWORD_RECOVERY"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "SIGNED_IN"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "SIGNED_OUT"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "TOKEN_REFRESHED"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "USER_UPDATED"
                                                      },
                                                      {
                                                        "id": 326,
                                                        "name": "AuthChangeEventMFA",
                                                        "kind": 4194304,
                                                        "kindString": "Type alias",
                                                        "flags": {},
                                                        "sources": [
                                                          {
                                                            "fileName": "src/lib/types.ts",
                                                            "line": 24,
                                                            "character": 12
                                                          }
                                                        ],
                                                        "type": {
                                                          "type": "literal",
                                                          "value": "MFA_CHALLENGE_VERIFIED"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "id": 469,
                                              "name": "session",
                                              "kind": 32768,
                                              "kindString": "Parameter",
                                              "flags": {},
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": null
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "id": 388,
                                                    "name": "Session"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "void"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": 470,
                                      "name": "unsubscribe",
                                      "kind": 2048,
                                      "kindString": "Method",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 337,
                                          "character": 2
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 471,
                                          "name": "unsubscribe",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Call this to remove the listener."
                                          },
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "void"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        465
                                      ]
                                    },
                                    {
                                      "title": "Methods",
                                      "kind": 2048,
                                      "children": [
                                        466,
                                        470
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 325,
                                      "character": 17
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                218
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        216
                      ]
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 136,
          "name": "reauthenticate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 626,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 137,
              "name": "reauthenticate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 180,
          "name": "refreshSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 902,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 181,
              "name": "refreshSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 182,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The current session. If passed in, it must contain a refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 183,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 184,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 902,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            184
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 138,
          "name": "resend",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 651,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 139,
              "name": "resend",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
              },
              "parameters": [
                {
                  "id": 140,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 562,
                    "name": "ResendParams",
                    "dereferenced": {
                      "id": 562,
                      "name": "ResendParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 516,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 563,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 565,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 519,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 566,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 520,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 567,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 568,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 522,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            568
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 520,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 564,
                                  "name": "type",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 518,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 561,
                                        "name": "EmailOtpType"
                                      },
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "signup"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "email_change"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "Extract",
                                    "package": "typescript",
                                    "name": "Extract"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    565,
                                    566,
                                    564
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 517,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 569,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 572,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 528,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 573,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 574,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 530,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            574
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 528,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 571,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 527,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 570,
                                  "name": "type",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 526,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 560,
                                        "name": "MobileOtpType"
                                      },
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "sms"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "phone_change"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "Extract",
                                    "package": "typescript",
                                    "name": "Extract"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    572,
                                    571,
                                    570
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 525,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 222,
          "name": "resetPasswordForEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1111,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 223,
              "name": "resetPasswordForEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a password reset request to an email address."
              },
              "parameters": [
                {
                  "id": 224,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 225,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 226,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 228,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1115,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 227,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL to send the user to after they click the password reset link."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1114,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            228,
                            227
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 229,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 230,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1119,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 231,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 232,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1120,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                230,
                                232
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 233,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 234,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1122,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 235,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1122,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 804,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                234,
                                235
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 174,
          "name": "setSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 838,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 175,
              "name": "setSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 176,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The current session that minimally contains an access token and refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 177,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 178,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 839,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 179,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 840,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            178,
                            179
                          ]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 124,
          "name": "signInWithIdToken",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 441,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 125,
              "name": "signInWithIdToken",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Allows signing in with an ID token issued by certain supported providers.\nThe ID token is verified for validity and a new session is established.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 126,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 535,
                    "name": "SignInWithIdTokenCredentials",
                    "dereferenced": {
                      "id": 535,
                      "name": "SignInWithIdTokenCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 463,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 536,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 539,
                              "name": "nonce",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If the ID token contains a `nonce`, then the hash of this value is compared to the value in the ID token."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 471,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 540,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 472,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 541,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 542,
                                      "name": "captchaToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Verification token received when the user completes the captcha on the site."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 474,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        542
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 472,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 537,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Only Apple and Google ID tokens are supported for use from within iOS or Android applications."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 467,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "google"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "apple"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 538,
                              "name": "token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID token issued by Apple or Google."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 469,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                539,
                                540,
                                537,
                                538
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 463,
                              "character": 43
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 118,
          "name": "signInWithOAuth",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 397,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 119,
              "name": "signInWithOAuth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user via a third-party provider."
              },
              "parameters": [
                {
                  "id": 120,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 523,
                    "name": "SignInWithOAuthCredentials",
                    "dereferenced": {
                      "id": 523,
                      "name": "SignInWithOAuthCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 448,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 524,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 526,
                              "name": "options",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 451,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 527,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 530,
                                      "name": "queryParams",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "An object of query params"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 457,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 531,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 457,
                                              "character": 18
                                            }
                                          ],
                                          "indexSignature": {
                                            "id": 532,
                                            "name": "__index",
                                            "kind": 8192,
                                            "kindString": "Index signature",
                                            "flags": {},
                                            "parameters": [
                                              {
                                                "id": 533,
                                                "name": "key",
                                                "kind": 32768,
                                                "flags": {},
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 528,
                                      "name": "redirectTo",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A URL to send the user to after they are confirmed."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 453,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 529,
                                      "name": "scopes",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 455,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 534,
                                      "name": "skipBrowserRedirect",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 459,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        530,
                                        528,
                                        529,
                                        534
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 451,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 525,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "One of the providers supported by GoTrue."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 450,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 325,
                                "name": "Provider",
                                "dereferenced": {
                                  "id": 325,
                                  "name": "Provider",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "One of the providers supported by GoTrue."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 5,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "apple"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "azure"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "bitbucket"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "discord"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "facebook"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "github"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "gitlab"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "google"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "keycloak"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "linkedin"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "notion"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "slack"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "spotify"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitch"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "twitter"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "workos"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "zoom"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                526,
                                525
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 448,
                              "character": 41
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 355,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 127,
          "name": "signInWithOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 489,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 128,
              "name": "signInWithOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user using magiclink or a one-time password (OTP).",
                "text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\n"
              },
              "parameters": [
                {
                  "id": 129,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 505,
                    "name": "SignInWithPasswordlessCredentials",
                    "dereferenced": {
                      "id": 505,
                      "name": "SignInWithPasswordlessCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 409,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 506,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 507,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 412,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 508,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 413,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 509,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 513,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 425,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 512,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 423,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 510,
                                          "name": "emailRedirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The redirect url embedded in the email link"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 415,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 511,
                                          "name": "shouldCreateUser",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 417,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            513,
                                            512,
                                            510,
                                            511
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 413,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    507,
                                    508
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 410,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 514,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 516,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 431,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 517,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 520,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 441,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 521,
                                          "name": "channel",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 443,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "whatsapp"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 519,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 439,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 518,
                                          "name": "shouldCreateUser",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 433,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            520,
                                            521,
                                            519,
                                            518
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 431,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 515,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 430,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    516,
                                    515
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 428,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 115,
          "name": "signInWithPassword",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 347,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 116,
              "name": "signInWithPassword",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user with an email and password or phone and password.",
                "text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
              },
              "parameters": [
                {
                  "id": 117,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 491,
                    "name": "SignInWithPasswordCredentials",
                    "dereferenced": {
                      "id": 491,
                      "name": "SignInWithPasswordCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 381,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 492,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 493,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 384,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 495,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 387,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 496,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 497,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 389,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            497
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 387,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 494,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 386,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    493,
                                    495,
                                    494
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 382,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 498,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 501,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 397,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 502,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 504,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 405,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 503,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 403,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            504,
                                            503
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 397,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 500,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 396,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 499,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 394,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    501,
                                    500,
                                    499
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 392,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 133,
          "name": "signInWithSSO",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 597,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 134,
              "name": "signInWithSSO",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
                "text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
              },
              "parameters": [
                {
                  "id": 135,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 575,
                    "name": "SignInWithSSO",
                    "dereferenced": {
                      "id": 575,
                      "name": "SignInWithSSO",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 534,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 576,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 578,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 539,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 579,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 581,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 543,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 580,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they have signed-in."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 541,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            581,
                                            580
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 539,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 577,
                                  "name": "providerId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "UUID of the SSO provider to invoke single-sign on to."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 537,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    578,
                                    577
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 535,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 582,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 583,
                                  "name": "domain",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Domain name of the organization for which to invoke single-sign on."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 548,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 584,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 550,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 585,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 587,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 554,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 586,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they have signed-in."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 552,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            587,
                                            586
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 550,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    583,
                                    584
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 546,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 368,
                    "name": "SSOResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 204,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1045,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 205,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session\nand log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
                "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 206,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 207,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1045,
                              "character": 29
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 804,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            207
                          ]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 112,
          "name": "signUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 268,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 113,
              "name": "signUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.",
                "text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\n",
                "returns": "A logged-in session if the server has \"autoconfirm\" ON"
              },
              "parameters": [
                {
                  "id": 114,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 474,
                    "name": "SignUpWithPasswordCredentials",
                    "dereferenced": {
                      "id": 474,
                      "name": "SignUpWithPasswordCredentials",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 344,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 475,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 476,
                                  "name": "email",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's email address."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 347,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 478,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 350,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 479,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 482,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 360,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 481,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 358,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        },
                                        {
                                          "id": 480,
                                          "name": "emailRedirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The redirect url embedded in the email link"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 352,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            482,
                                            481,
                                            480
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 350,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 477,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 349,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    476,
                                    478,
                                    477
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 345,
                                  "character": 4
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 483,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 486,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 368,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 487,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 489,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 376,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 490,
                                          "name": "channel",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 378,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "whatsapp"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 488,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 374,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [
                                            489,
                                            490,
                                            488
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 368,
                                          "character": 16
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 485,
                                  "name": "password",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's password."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 367,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 484,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The user's phone number."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 365,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    486,
                                    485,
                                    484
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 363,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 284,
          "name": "startAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1415,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 285,
              "name": "startAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
                "text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 286,
          "name": "stopAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1428,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 287,
              "name": "stopAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Stops an active auto refresh process running in the background (if any).",
                "text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 161,
          "name": "updateUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 785,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 162,
              "name": "updateUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates user data for a logged in user."
              },
              "parameters": [
                {
                  "id": 163,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 448,
                    "name": "UserAttributes",
                    "dereferenced": {
                      "id": 448,
                      "name": "UserAttributes",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 453,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 272,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 449,
                          "name": "email",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's email."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 247,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 452,
                          "name": "nonce",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                            "text": "Call reauthenticate() to obtain the nonce first.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 264,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 451,
                          "name": "password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's password."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 257,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 450,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The user's phone."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 252,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            453,
                            449,
                            452,
                            451,
                            450
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 243,
                          "character": 17
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 164,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 165,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 166,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 788,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            166
                          ]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 377,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 130,
          "name": "verifyOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 544,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 131,
              "name": "verifyOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user given a User supplied OTP received via mobile."
              },
              "parameters": [
                {
                  "id": 132,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 543,
                    "name": "VerifyOtpParams",
                    "dereferenced": {
                      "id": 543,
                      "name": "VerifyOtpParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 478,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "id": 544,
                            "name": "VerifyMobileOtpParams",
                            "kind": 256,
                            "kindString": "Interface",
                            "flags": {},
                            "children": [
                              {
                                "id": 548,
                                "name": "options",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 486,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 549,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 551,
                                        "name": "captchaToken",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Verification token received when the user completes the captcha on the site.",
                                          "tags": [
                                            {
                                              "tag": "deprecated",
                                              "text": "\n"
                                            }
                                          ]
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 495,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 550,
                                        "name": "redirectTo",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "A URL to send the user to after they are confirmed."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 488,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                          551,
                                          550
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 545,
                                "name": "phone",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's phone number."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 481,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 546,
                                "name": "token",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The otp sent to the user's phone number."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 483,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 547,
                                "name": "type",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's verification type."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 485,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 560,
                                  "name": "MobileOtpType",
                                  "dereferenced": {
                                    "id": 560,
                                    "name": "MobileOtpType",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 513,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "sms"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "phone_change"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [
                                  548,
                                  545,
                                  546,
                                  547
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 479,
                                "character": 17
                              }
                            ]
                          },
                          {
                            "id": 552,
                            "name": "VerifyEmailOtpParams",
                            "kind": 256,
                            "kindString": "Interface",
                            "flags": {},
                            "children": [
                              {
                                "id": 553,
                                "name": "email",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's email address."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 500,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 556,
                                "name": "options",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 505,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 557,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 559,
                                        "name": "captchaToken",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Verification token received when the user completes the captcha on the site."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 509,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 558,
                                        "name": "redirectTo",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "A URL to send the user to after they are confirmed."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 507,
                                            "character": 4
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [
                                          559,
                                          558
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 554,
                                "name": "token",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The otp sent to the user's email address."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 502,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 555,
                                "name": "type",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "comment": {
                                  "shortText": "The user's verification type."
                                },
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 504,
                                    "character": 2
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 561,
                                  "name": "EmailOtpType",
                                  "dereferenced": {
                                    "id": 561,
                                    "name": "EmailOtpType",
                                    "kind": 4194304,
                                    "kindString": "Type alias",
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 514,
                                        "character": 12
                                      }
                                    ],
                                    "type": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "literal",
                                          "value": "signup"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "invite"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "magiclink"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "recovery"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email_change"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "email"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [
                                  553,
                                  556,
                                  554,
                                  555
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 498,
                                "character": 17
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 342,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [
            78
          ]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            81,
            82
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            121,
            141,
            158,
            108,
            208,
            136,
            180,
            138,
            222,
            174,
            124,
            118,
            127,
            115,
            133,
            204,
            112,
            284,
            286,
            161,
            130
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueClient.ts",
          "line": 93,
          "character": 21
        }
      ]
    },
    {
      "id": 397,
      "name": "AMREntry",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "An authentication methord reference (AMR) entry.",
        "text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
          }
        ]
      },
      "children": [
        {
          "id": 398,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Authentication method name."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 161,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 399,
          "name": "timestamp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 167,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            398,
            399
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 159,
          "character": 17
        }
      ]
    },
    {
      "id": 454,
      "name": "AdminUserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 456,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 296,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 459,
          "name": "ban_duration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Determines how long a user is banned for.",
            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 322,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 462,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 247,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.email"
          }
        },
        {
          "id": 457,
          "name": "email_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's email address if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 303,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 461,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 264,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.nonce"
          }
        },
        {
          "id": 460,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 257,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.password"
          }
        },
        {
          "id": 463,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 252,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.phone"
          }
        },
        {
          "id": 458,
          "name": "phone_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's phone number if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 310,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 455,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 286,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            456,
            459,
            462,
            457,
            461,
            460,
            463,
            458,
            455
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 275,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 448,
              "name": "UserAttributes"
            },
            {
              "type": "literal",
              "value": "data"
            }
          ],
          "qualifiedName": "Omit",
          "package": "typescript",
          "name": "Omit"
        }
      ]
    },
    {
      "id": 411,
      "name": "Factor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "A MFA factor.",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#enroll}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#listFactors}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAAdminApi#listFactors}\n"
          }
        ]
      },
      "children": [
        {
          "id": 416,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 205,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 414,
          "name": "factor_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Type of factor. Only `totp` supported with this version but may change in\nfuture versions."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 200,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 413,
          "name": "friendly_name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 194,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 412,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "ID of the factor."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 191,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 415,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Factor's status."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 203,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "verified"
              },
              {
                "type": "literal",
                "value": "unverified"
              }
            ]
          }
        },
        {
          "id": 417,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 206,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            416,
            414,
            413,
            412,
            415,
            417
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 189,
          "character": 17
        }
      ]
    },
    {
      "id": 610,
      "name": "GenerateLinkOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 611,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 596,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 612,
          "name": "redirectTo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The URL which will be appended to the email link generated."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 598,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            611,
            612
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 590,
          "character": 17
        }
      ]
    },
    {
      "id": 769,
      "name": "GoTrueAdminMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication administration API.",
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "children": [
        {
          "id": 773,
          "name": "deleteFactor",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 774,
              "name": "deleteFactor",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                  },
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 775,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 753,
                    "name": "AuthMFAAdminDeleteFactorParams",
                    "dereferenced": {
                      "id": 753,
                      "name": "AuthMFAAdminDeleteFactorParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "comment": {
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 894,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 754,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 755,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the MFA factor to delete."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 896,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 756,
                              "name": "userId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the user whose factor is being deleted."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 899,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                755,
                                756
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 894,
                              "character": 45
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 744,
                    "name": "AuthMFAAdminDeleteFactorResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 770,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 771,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Lists all factors associated to a user."
              },
              "parameters": [
                {
                  "id": 772,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 766,
                    "name": "AuthMFAAdminListFactorsParams",
                    "dereferenced": {
                      "id": 766,
                      "name": "AuthMFAAdminListFactorsParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "comment": {
                        "tags": [
                          {
                            "tag": "expermental",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 918,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 767,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 768,
                              "name": "userId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 920,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                768
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 918,
                              "character": 44
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 757,
                    "name": "AuthMFAAdminListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            773,
            770
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 928,
          "character": 17
        }
      ]
    },
    {
      "id": 724,
      "name": "GoTrueMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication API."
      },
      "children": [
        {
          "id": 728,
          "name": "challenge",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 729,
              "name": "challenge",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
              },
              "parameters": [
                {
                  "id": 730,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 648,
                    "name": "MFAChallengeParams",
                    "dereferenced": {
                      "id": 648,
                      "name": "MFAChallengeParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 678,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 649,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 650,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor to be challenged. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 680,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                650
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 678,
                              "character": 33
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 692,
                    "name": "AuthMFAChallengeResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 737,
          "name": "challengeAndVerify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 738,
              "name": "challengeAndVerify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 739,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 651,
                    "name": "MFAChallengeAndVerifyParams",
                    "dereferenced": {
                      "id": 651,
                      "name": "MFAChallengeAndVerifyParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 683,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 652,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 654,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Verification code provided by the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 687,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 653,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being verified. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 685,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                654,
                                653
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 683,
                              "character": 42
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 655,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 725,
          "name": "enroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 726,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
              },
              "parameters": [
                {
                  "id": 727,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 635,
                    "name": "MFAEnrollParams",
                    "dereferenced": {
                      "id": 635,
                      "name": "MFAEnrollParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 653,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 636,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 637,
                              "name": "factorType",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "The type of factor being enrolled."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 655,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "totp"
                              }
                            },
                            {
                              "id": 639,
                              "name": "friendlyName",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Human readable name assigned to the factor."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 659,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 638,
                              "name": "issuer",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Domain which the user is enrolled with."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 657,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                637,
                                639,
                                638
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 653,
                              "character": 30
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 668,
                    "name": "AuthMFAEnrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 742,
          "name": "getAuthenticatorAssuranceLevel",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 743,
              "name": "getAuthenticatorAssuranceLevel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 713,
                    "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 740,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 741,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the list of MFA factors enabled for this user.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#enroll}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueClient#getUser}\n\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 702,
                    "name": "AuthMFAListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 734,
          "name": "unenroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 735,
              "name": "unenroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
              },
              "parameters": [
                {
                  "id": 736,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 640,
                    "name": "MFAUnenrollParams",
                    "dereferenced": {
                      "id": 640,
                      "name": "MFAUnenrollParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 662,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 641,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 642,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being unenrolled."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 664,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                642
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 662,
                              "character": 32
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 683,
                    "name": "AuthMFAUnenrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 731,
          "name": "verify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 732,
              "name": "verify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 733,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 643,
                    "name": "MFAVerifyParams",
                    "dereferenced": {
                      "id": 643,
                      "name": "MFAVerifyParams",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 667,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 644,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 646,
                              "name": "challengeId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the challenge being verified. Returned in challenge()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 672,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 647,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Verification code provided by the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 675,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 645,
                              "name": "factorId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor being verified. Returned in enroll()."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 669,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                646,
                                647,
                                645
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 667,
                              "character": 30
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 655,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            728,
            737,
            725,
            742,
            740,
            734,
            731
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 815,
          "character": 17
        }
      ]
    },
    {
      "id": 388,
      "name": "Session",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 391,
          "name": "access_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 134,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 394,
          "name": "expires_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 146,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 393,
          "name": "expires_in",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 142,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 390,
          "name": "provider_refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 130,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 389,
          "name": "provider_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 125,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 392,
          "name": "refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "A one-time used refresh token that never expires."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 138,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 395,
          "name": "token_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 147,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 396,
          "name": "user",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 148,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 425,
            "name": "User",
            "dereferenced": {
              "id": 425,
              "name": "User",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 436,
                  "name": "action_link",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 229,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 427,
                  "name": "app_metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 220,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 418,
                    "name": "UserAppMetadata",
                    "dereferenced": {
                      "id": 418,
                      "name": "UserAppMetadata",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 419,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 210,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            419
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 209,
                          "character": 17
                        }
                      ],
                      "indexSignature": {
                        "id": 420,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 421,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  }
                },
                {
                  "id": 429,
                  "name": "aud",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 222,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 430,
                  "name": "confirmation_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 223,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 440,
                  "name": "confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 233,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 439,
                  "name": "created_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 232,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 437,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 230,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 432,
                  "name": "email_change_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 225,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 441,
                  "name": "email_confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 234,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 447,
                  "name": "factors",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 240,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 411,
                      "name": "Factor"
                    }
                  }
                },
                {
                  "id": 426,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 219,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 446,
                  "name": "identities",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 239,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 400,
                      "name": "UserIdentity"
                    }
                  }
                },
                {
                  "id": 435,
                  "name": "invited_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 228,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 443,
                  "name": "last_sign_in_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 236,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 433,
                  "name": "new_email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 226,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 434,
                  "name": "new_phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 227,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 438,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 231,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 442,
                  "name": "phone_confirmed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 235,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 431,
                  "name": "recovery_sent_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 224,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 444,
                  "name": "role",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 237,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 445,
                  "name": "updated_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 238,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 428,
                  "name": "user_metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 221,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 422,
                    "name": "UserMetadata",
                    "dereferenced": {
                      "id": 422,
                      "name": "UserMetadata",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 214,
                          "character": 17
                        }
                      ],
                      "indexSignature": {
                        "id": 423,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 424,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    436,
                    427,
                    429,
                    430,
                    440,
                    439,
                    437,
                    432,
                    441,
                    447,
                    426,
                    446,
                    435,
                    443,
                    433,
                    434,
                    438,
                    442,
                    431,
                    444,
                    445,
                    428
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 218,
                  "character": 17
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            391,
            394,
            393,
            390,
            389,
            392,
            395,
            396
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 121,
          "character": 17
        }
      ]
    },
    {
      "id": 464,
      "name": "Subscription",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 465,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The subscriber UUID. This will be set by the client."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 329,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 466,
          "name": "callback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 333,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 467,
              "name": "callback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
              },
              "parameters": [
                {
                  "id": 468,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 327,
                    "name": "AuthChangeEvent",
                    "dereferenced": {
                      "id": 327,
                      "name": "AuthChangeEvent",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 26,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "INITIAL_SESSION"
                          },
                          {
                            "type": "literal",
                            "value": "PASSWORD_RECOVERY"
                          },
                          {
                            "type": "literal",
                            "value": "SIGNED_IN"
                          },
                          {
                            "type": "literal",
                            "value": "SIGNED_OUT"
                          },
                          {
                            "type": "literal",
                            "value": "TOKEN_REFRESHED"
                          },
                          {
                            "type": "literal",
                            "value": "USER_UPDATED"
                          },
                          {
                            "id": 326,
                            "name": "AuthChangeEventMFA",
                            "kind": 4194304,
                            "kindString": "Type alias",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 24,
                                "character": 12
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": "MFA_CHALLENGE_VERIFIED"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 469,
                  "name": "session",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 388,
                        "name": "Session"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 470,
          "name": "unsubscribe",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 337,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 471,
              "name": "unsubscribe",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call this to remove the listener."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            465
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            466,
            470
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 325,
          "character": 17
        }
      ]
    },
    {
      "id": 472,
      "name": "UpdatableFactorAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 473,
          "name": "friendlyName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 341,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            473
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 340,
          "character": 17
        }
      ]
    },
    {
      "id": 425,
      "name": "User",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 436,
          "name": "action_link",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 229,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 427,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 220,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 418,
            "name": "UserAppMetadata",
            "dereferenced": {
              "id": 418,
              "name": "UserAppMetadata",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 419,
                  "name": "provider",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 210,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    419
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 209,
                  "character": 17
                }
              ],
              "indexSignature": {
                "id": 420,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 421,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 429,
          "name": "aud",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 222,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 430,
          "name": "confirmation_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 223,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 440,
          "name": "confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 233,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 439,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 232,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 437,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 230,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 432,
          "name": "email_change_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 225,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 441,
          "name": "email_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 234,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 447,
          "name": "factors",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 240,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 411,
              "name": "Factor"
            }
          }
        },
        {
          "id": 426,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 219,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 446,
          "name": "identities",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 239,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 400,
              "name": "UserIdentity"
            }
          }
        },
        {
          "id": 435,
          "name": "invited_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 228,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 443,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 236,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 433,
          "name": "new_email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 226,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 434,
          "name": "new_phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 227,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 438,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 231,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 442,
          "name": "phone_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 235,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 431,
          "name": "recovery_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 224,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 444,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 237,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 445,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 238,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 428,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 221,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 422,
            "name": "UserMetadata",
            "dereferenced": {
              "id": 422,
              "name": "UserMetadata",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 214,
                  "character": 17
                }
              ],
              "indexSignature": {
                "id": 423,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 424,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            436,
            427,
            429,
            430,
            440,
            439,
            437,
            432,
            441,
            447,
            426,
            446,
            435,
            443,
            433,
            434,
            438,
            442,
            431,
            444,
            445,
            428
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 218,
          "character": 17
        }
      ]
    },
    {
      "id": 418,
      "name": "UserAppMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 419,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 210,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            419
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 209,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 420,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 421,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 448,
      "name": "UserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 453,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 272,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 449,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 247,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 452,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 264,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 451,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 257,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 450,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 252,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            453,
            449,
            452,
            451,
            450
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 243,
          "character": 17
        }
      ]
    },
    {
      "id": 400,
      "name": "UserIdentity",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 408,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 177,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 401,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 171,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 403,
          "name": "identity_data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 173,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 404,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 405,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 406,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 409,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 178,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 407,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 176,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 410,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 179,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 402,
          "name": "user_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 172,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            408,
            401,
            403,
            409,
            407,
            410,
            402
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 170,
          "character": 17
        }
      ]
    },
    {
      "id": 422,
      "name": "UserMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 214,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 423,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 424,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 552,
      "name": "VerifyEmailOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 553,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 500,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 556,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 505,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 557,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 559,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 509,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 558,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 507,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    559,
                    558
                  ]
                }
              ]
            }
          }
        },
        {
          "id": 554,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 502,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 555,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 504,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 561,
            "name": "EmailOtpType",
            "dereferenced": {
              "id": 561,
              "name": "EmailOtpType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 514,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "signup"
                  },
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  },
                  {
                    "type": "literal",
                    "value": "recovery"
                  },
                  {
                    "type": "literal",
                    "value": "email_change"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  }
                ]
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            553,
            556,
            554,
            555
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 498,
          "character": 17
        }
      ]
    },
    {
      "id": 544,
      "name": "VerifyMobileOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 548,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 486,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 549,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 551,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 495,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 550,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 488,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    551,
                    550
                  ]
                }
              ]
            }
          }
        },
        {
          "id": 545,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 481,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 546,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 483,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 547,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 485,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 560,
            "name": "MobileOtpType",
            "dereferenced": {
              "id": 560,
              "name": "MobileOtpType",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 513,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "sms"
                  },
                  {
                    "type": "literal",
                    "value": "phone_change"
                  }
                ]
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            548,
            545,
            546,
            547
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 479,
          "character": 17
        }
      ]
    },
    {
      "id": 327,
      "name": "AuthChangeEvent",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 26,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "INITIAL_SESSION"
          },
          {
            "type": "literal",
            "value": "PASSWORD_RECOVERY"
          },
          {
            "type": "literal",
            "value": "SIGNED_IN"
          },
          {
            "type": "literal",
            "value": "SIGNED_OUT"
          },
          {
            "type": "literal",
            "value": "TOKEN_REFRESHED"
          },
          {
            "type": "literal",
            "value": "USER_UPDATED"
          },
          {
            "id": 326,
            "name": "AuthChangeEventMFA",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 24,
                "character": 12
              }
            ],
            "type": {
              "type": "literal",
              "value": "MFA_CHALLENGE_VERIFIED"
            }
          }
        ]
      }
    },
    {
      "id": 326,
      "name": "AuthChangeEventMFA",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 24,
          "character": 12
        }
      ],
      "type": {
        "type": "literal",
        "value": "MFA_CHALLENGE_VERIFIED"
      }
    },
    {
      "id": 522,
      "name": "AuthFlowType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 447,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "implicit"
          },
          {
            "type": "literal",
            "value": "pkce"
          }
        ]
      }
    },
    {
      "id": 753,
      "name": "AuthMFAAdminDeleteFactorParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 894,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 754,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 755,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the MFA factor to delete."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 896,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 756,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user whose factor is being deleted."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 899,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                755,
                756
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 894,
              "character": 45
            }
          ]
        }
      }
    },
    {
      "id": 744,
      "name": "AuthMFAAdminDeleteFactorResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 881,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 745,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 746,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 883,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 747,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 748,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully deleted."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 885,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            748
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 883,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 749,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 887,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    746,
                    749
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 882,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 750,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 751,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 889,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 752,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 889,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    751,
                    752
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 889,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 766,
      "name": "AuthMFAAdminListFactorsParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 918,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 767,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 768,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 920,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                768
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 918,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 757,
      "name": "AuthMFAAdminListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 905,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 758,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 759,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 907,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 760,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 761,
                          "name": "factors",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All factors attached to the user."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 909,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 411,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            761
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 907,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 762,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 911,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    759,
                    762
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 906,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 763,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 764,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 913,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 765,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 913,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    764,
                    765
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 913,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 692,
      "name": "AuthMFAChallengeResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 758,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 693,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 694,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 760,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 695,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 697,
                          "name": "expires_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 765,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 696,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the newly created challenge."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 762,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            697,
                            696
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 760,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 698,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 767,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    694,
                    698
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 759,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 699,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 700,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 769,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 701,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 769,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    700,
                    701
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 769,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 668,
      "name": "AuthMFAEnrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 715,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 669,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 670,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 717,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 671,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 672,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 719,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 674,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "TOTP enrollment information."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 725,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 675,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 676,
                                  "name": "qr_code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 729,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 677,
                                  "name": "secret",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 734,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 678,
                                  "name": "uri",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 738,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    676,
                                    677,
                                    678
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 725,
                                  "character": 14
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 673,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of MFA factor. Only `totp` supported for now."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 722,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "totp"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            672,
                            674,
                            673
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 717,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 679,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 741,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    670,
                    679
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 716,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 680,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 681,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 744,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 682,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 745,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    681,
                    682
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 743,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 713,
      "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 786,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 714,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 715,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 788,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 716,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 719,
                          "name": "currentAuthenticationMethods",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 805,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 397,
                              "name": "AMREntry"
                            }
                          }
                        },
                        {
                          "id": 717,
                          "name": "currentLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Current AAL level of the session."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 790,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 712,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 718,
                          "name": "nextLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#challenge}\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 798,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 712,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            719,
                            717,
                            718
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 788,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 720,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 807,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    715,
                    720
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 787,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 721,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 722,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 809,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 723,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 809,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    722,
                    723
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 809,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 702,
      "name": "AuthMFAListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 771,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 703,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 704,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 773,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 705,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 706,
                          "name": "all",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All available factors (verified and unverified)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 775,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 411,
                              "name": "Factor"
                            }
                          }
                        },
                        {
                          "id": 707,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Only verified TOTP factors. (A subset of `all`.)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 778,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 411,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            706,
                            707
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 773,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 708,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 780,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    704,
                    708
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 772,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 709,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 710,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 782,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 711,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 782,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    710,
                    711
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 782,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 683,
      "name": "AuthMFAUnenrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 748,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 684,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 685,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 750,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 686,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 687,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully unenrolled."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 752,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            687
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 750,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 688,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 754,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    685,
                    688
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 749,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 689,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 690,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 756,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 691,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 756,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    690,
                    691
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 756,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 655,
      "name": "AuthMFAVerifyResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 690,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 656,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 657,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 692,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 658,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 659,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "New access token (JWT) after successful verification."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 694,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 661,
                          "name": "expires_in",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Number of seconds in which the access token will expire."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 700,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 662,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Refresh token you can use to obtain new access tokens when expired."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 703,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 660,
                          "name": "token_type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of token, typically `Bearer`."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 697,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 663,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Updated user profile."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 706,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 425,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            659,
                            661,
                            662,
                            660,
                            663
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 692,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 664,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 708,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    657,
                    664
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 691,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 665,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 666,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 711,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 667,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 712,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    666,
                    667
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 710,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 342,
      "name": "AuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 56,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 343,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 344,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 58,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 345,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 347,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 60,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 388,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 346,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 59,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 425,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            347,
                            346
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 58,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 348,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 62,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    344,
                    348
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 57,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 349,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 350,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 65,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 351,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 353,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 67,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 352,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 66,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            353,
                            352
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 65,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 354,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 69,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    350,
                    354
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 64,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 712,
      "name": "AuthenticatorAssuranceLevels",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 784,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "aal1"
          },
          {
            "type": "literal",
            "value": "aal2"
          }
        ]
      }
    },
    {
      "id": 780,
      "name": "CallRefreshTokenResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 959,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 781,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 783,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 962,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 782,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 961,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 388,
                    "name": "Session"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    783,
                    782
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 960,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 784,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 786,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 966,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                },
                {
                  "id": 785,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 965,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    786,
                    785
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 964,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 561,
      "name": "EmailOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 514,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change"
          },
          {
            "type": "literal",
            "value": "email"
          }
        ]
      }
    },
    {
      "id": 604,
      "name": "GenerateEmailChangeLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 579,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 605,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 607,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 582,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 608,
              "name": "newEmail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 586,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 609,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 587,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 610,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 606,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 580,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "email_change_current"
                  },
                  {
                    "type": "literal",
                    "value": "email_change_new"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                607,
                608,
                609,
                606
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 579,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 594,
      "name": "GenerateInviteOrMagiclinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 565,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 595,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 597,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 568,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 598,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 569,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 610,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 596,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 566,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                597,
                598,
                596
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 565,
              "character": 46
            }
          ]
        }
      }
    },
    {
      "id": 613,
      "name": "GenerateLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 601,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 588,
            "name": "GenerateSignupLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 558,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 589,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 591,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 560,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 593,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 562,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 610,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "data"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ]
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 592,
                    "name": "password",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 561,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 590,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 559,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "signup"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      591,
                      593,
                      592,
                      590
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 558,
                    "character": 39
                  }
                ]
              }
            }
          },
          {
            "id": 594,
            "name": "GenerateInviteOrMagiclinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 565,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 595,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 597,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 568,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 598,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 569,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 610,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "data"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ]
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 596,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 566,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "invite"
                        },
                        {
                          "type": "literal",
                          "value": "magiclink"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      597,
                      598,
                      596
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 565,
                    "character": 46
                  }
                ]
              }
            }
          },
          {
            "id": 599,
            "name": "GenerateRecoveryLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 572,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 600,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 602,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 575,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 603,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 576,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 610,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "literal",
                          "value": "redirectTo"
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 601,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 573,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "recovery"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      602,
                      603,
                      601
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 572,
                    "character": 41
                  }
                ]
              }
            }
          },
          {
            "id": 604,
            "name": "GenerateEmailChangeLinkParams",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 579,
                "character": 12
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 605,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 607,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 582,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 608,
                    "name": "newEmail",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 586,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 609,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 587,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 610,
                          "name": "GenerateLinkOptions"
                        },
                        {
                          "type": "literal",
                          "value": "redirectTo"
                        }
                      ],
                      "qualifiedName": "Pick",
                      "package": "typescript",
                      "name": "Pick"
                    }
                  },
                  {
                    "id": 606,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 580,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "email_change_current"
                        },
                        {
                          "type": "literal",
                          "value": "email_change_new"
                        }
                      ]
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      607,
                      608,
                      609,
                      606
                    ]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 579,
                    "character": 44
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "id": 627,
      "name": "GenerateLinkProperties",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "The properties related to the email link generated"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 624,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 628,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 629,
              "name": "action_link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 629,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 630,
              "name": "email_otp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 634,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 631,
              "name": "hashed_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The hashed token appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 638,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 632,
              "name": "redirect_to",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The URL appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 640,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 633,
              "name": "verification_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The verification type that the email link is associated to."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 642,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 634,
                "name": "GenerateLinkType",
                "dereferenced": {
                  "id": 634,
                  "name": "GenerateLinkType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 645,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "signup"
                      },
                      {
                        "type": "literal",
                        "value": "invite"
                      },
                      {
                        "type": "literal",
                        "value": "magiclink"
                      },
                      {
                        "type": "literal",
                        "value": "recovery"
                      },
                      {
                        "type": "literal",
                        "value": "email_change_current"
                      },
                      {
                        "type": "literal",
                        "value": "email_change_new"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                629,
                630,
                631,
                632,
                633
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 624,
              "character": 37
            }
          ]
        }
      }
    },
    {
      "id": 614,
      "name": "GenerateLinkResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 607,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 615,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 616,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 609,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 617,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 618,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 610,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 627,
                            "name": "GenerateLinkProperties"
                          }
                        },
                        {
                          "id": 619,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 611,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 425,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            618,
                            619
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 609,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 620,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 613,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    616,
                    620
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 608,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 621,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 622,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 616,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 623,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 624,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 617,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 625,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 618,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            624,
                            625
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 616,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 626,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 620,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    622,
                    626
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 615,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 634,
      "name": "GenerateLinkType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 645,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change_current"
          },
          {
            "type": "literal",
            "value": "email_change_new"
          }
        ]
      }
    },
    {
      "id": 599,
      "name": "GenerateRecoveryLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 572,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 600,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 602,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 575,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 603,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 576,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 610,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 601,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 573,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "recovery"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                602,
                603,
                601
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 572,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 588,
      "name": "GenerateSignupLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 558,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 589,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 591,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 560,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 593,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 562,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 610,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 592,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 561,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 590,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 559,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "signup"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                591,
                593,
                592,
                590
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 558,
              "character": 39
            }
          ]
        }
      }
    },
    {
      "id": 328,
      "name": "GoTrueClientOptions",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 35,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 329,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 337,
              "name": "autoRefreshToken",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 45,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 336,
              "name": "detectSessionInUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 43,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 340,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 51,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "name": "Fetch"
              }
            },
            {
              "id": 341,
              "name": "flowType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 53,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 522,
                "name": "AuthFlowType",
                "dereferenced": {
                  "id": 522,
                  "name": "AuthFlowType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 447,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "implicit"
                      },
                      {
                        "type": "literal",
                        "value": "pkce"
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 331,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 39,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 332,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 39,
                      "character": 12
                    }
                  ],
                  "indexSignature": {
                    "id": 333,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 334,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              }
            },
            {
              "id": 338,
              "name": "persistSession",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 47,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 339,
              "name": "storage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 49,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 776,
                "name": "SupportedStorage",
                "dereferenced": {
                  "id": 776,
                  "name": "SupportedStorage",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 955,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Storage",
                            "package": "typescript",
                            "name": "Storage"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "getItem"
                              },
                              {
                                "type": "literal",
                                "value": "setItem"
                              },
                              {
                                "type": "literal",
                                "value": "removeItem"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Pick",
                        "package": "typescript",
                        "name": "Pick"
                      }
                    ],
                    "name": "PromisifyMethods"
                  }
                }
              }
            },
            {
              "id": 335,
              "name": "storageKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 41,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 330,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 37,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                337,
                336,
                340,
                341,
                331,
                338,
                339,
                335,
                330
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 35,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 777,
      "name": "InitializeResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 957,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 778,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 779,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 957,
                  "character": 33
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                779
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 957,
              "character": 31
            }
          ]
        }
      }
    },
    {
      "id": 651,
      "name": "MFAChallengeAndVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 683,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 652,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 654,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 687,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 653,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 685,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                654,
                653
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 683,
              "character": 42
            }
          ]
        }
      }
    },
    {
      "id": 648,
      "name": "MFAChallengeParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 678,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 649,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 650,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor to be challenged. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 680,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                650
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 678,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 635,
      "name": "MFAEnrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 653,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 636,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 637,
              "name": "factorType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The type of factor being enrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 655,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "totp"
              }
            },
            {
              "id": 639,
              "name": "friendlyName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Human readable name assigned to the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 659,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 638,
              "name": "issuer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Domain which the user is enrolled with."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 657,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                637,
                639,
                638
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 653,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 640,
      "name": "MFAUnenrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 662,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 641,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 642,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being unenrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 664,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                642
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 662,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 643,
      "name": "MFAVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 667,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 644,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 646,
              "name": "challengeId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the challenge being verified. Returned in challenge()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 672,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 647,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 675,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 645,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 669,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                646,
                647,
                645
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 667,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 560,
      "name": "MobileOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 513,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "sms"
          },
          {
            "type": "literal",
            "value": "phone_change"
          }
        ]
      }
    },
    {
      "id": 355,
      "name": "OAuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 72,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 356,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 357,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 74,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 358,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 359,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 75,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 325,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 360,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 76,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            359,
                            360
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 74,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 361,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 78,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    357,
                    361
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 73,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 362,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 363,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 81,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 364,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 365,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 82,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 325,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 366,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 83,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            365,
                            366
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 81,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 367,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 85,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    363,
                    367
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 80,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 794,
      "name": "PageParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 976,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 795,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 796,
              "name": "page",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The page number"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 978,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 797,
              "name": "perPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Number of items returned per page"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 980,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                796,
                797
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 976,
              "character": 25
            }
          ]
        }
      }
    },
    {
      "id": 787,
      "name": "Pagination",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 969,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 788,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 790,
              "name": "lastPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 972,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 789,
              "name": "nextPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 971,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            },
            {
              "id": 791,
              "name": "total",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 973,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                790,
                789,
                791
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 969,
              "character": 25
            }
          ],
          "indexSignature": {
            "id": 792,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 793,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      }
    },
    {
      "id": 325,
      "name": "Provider",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "One of the providers supported by GoTrue."
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 5,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "apple"
          },
          {
            "type": "literal",
            "value": "azure"
          },
          {
            "type": "literal",
            "value": "bitbucket"
          },
          {
            "type": "literal",
            "value": "discord"
          },
          {
            "type": "literal",
            "value": "facebook"
          },
          {
            "type": "literal",
            "value": "github"
          },
          {
            "type": "literal",
            "value": "gitlab"
          },
          {
            "type": "literal",
            "value": "google"
          },
          {
            "type": "literal",
            "value": "keycloak"
          },
          {
            "type": "literal",
            "value": "linkedin"
          },
          {
            "type": "literal",
            "value": "notion"
          },
          {
            "type": "literal",
            "value": "slack"
          },
          {
            "type": "literal",
            "value": "spotify"
          },
          {
            "type": "literal",
            "value": "twitch"
          },
          {
            "type": "literal",
            "value": "twitter"
          },
          {
            "type": "literal",
            "value": "workos"
          },
          {
            "type": "literal",
            "value": "zoom"
          }
        ]
      }
    },
    {
      "id": 562,
      "name": "ResendParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 516,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 563,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 565,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 519,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 566,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 520,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 567,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 568,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 522,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            568
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 520,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 564,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 518,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 561,
                        "name": "EmailOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    565,
                    566,
                    564
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 517,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 569,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 572,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 528,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 573,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 574,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 530,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            574
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 528,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 571,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 527,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 570,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 526,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 560,
                        "name": "MobileOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "sms"
                          },
                          {
                            "type": "literal",
                            "value": "phone_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    572,
                    571,
                    570
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 525,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 368,
      "name": "SSOResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 88,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 369,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 370,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 90,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 371,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 372,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
                            "text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 98,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            372
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 90,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 373,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 100,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    370,
                    373
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 89,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 374,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 375,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 103,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 376,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 104,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    375,
                    376
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 102,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 535,
      "name": "SignInWithIdTokenCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 463,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 536,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 539,
              "name": "nonce",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "If the ID token contains a `nonce`, then the hash of this value is compared to the value in the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 471,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 540,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 472,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 541,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 542,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 474,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        542
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 472,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 537,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Only Apple and Google ID tokens are supported for use from within iOS or Android applications."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 467,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "google"
                  },
                  {
                    "type": "literal",
                    "value": "apple"
                  }
                ]
              }
            },
            {
              "id": 538,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID token issued by Apple or Google."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 469,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                539,
                540,
                537,
                538
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 463,
              "character": 43
            }
          ]
        }
      }
    },
    {
      "id": 523,
      "name": "SignInWithOAuthCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 448,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 524,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 526,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 451,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 527,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 530,
                      "name": "queryParams",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An object of query params"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 457,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 531,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 457,
                              "character": 18
                            }
                          ],
                          "indexSignature": {
                            "id": 532,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 533,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 528,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 453,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 529,
                      "name": "scopes",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 455,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 534,
                      "name": "skipBrowserRedirect",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 459,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        530,
                        528,
                        529,
                        534
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 451,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 525,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "One of the providers supported by GoTrue."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 450,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 325,
                "name": "Provider",
                "dereferenced": {
                  "id": 325,
                  "name": "Provider",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "comment": {
                    "shortText": "One of the providers supported by GoTrue."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 5,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "bitbucket"
                      },
                      {
                        "type": "literal",
                        "value": "discord"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "literal",
                        "value": "github"
                      },
                      {
                        "type": "literal",
                        "value": "gitlab"
                      },
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "keycloak"
                      },
                      {
                        "type": "literal",
                        "value": "linkedin"
                      },
                      {
                        "type": "literal",
                        "value": "notion"
                      },
                      {
                        "type": "literal",
                        "value": "slack"
                      },
                      {
                        "type": "literal",
                        "value": "spotify"
                      },
                      {
                        "type": "literal",
                        "value": "twitch"
                      },
                      {
                        "type": "literal",
                        "value": "twitter"
                      },
                      {
                        "type": "literal",
                        "value": "workos"
                      },
                      {
                        "type": "literal",
                        "value": "zoom"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                526,
                525
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 448,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 491,
      "name": "SignInWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 381,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 492,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 493,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 384,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 495,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 387,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 496,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 497,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 389,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            497
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 387,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 494,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 386,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    493,
                    495,
                    494
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 382,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 498,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 501,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 397,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 502,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 504,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 405,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 503,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 403,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            504,
                            503
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 397,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 500,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 396,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 499,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 394,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    501,
                    500,
                    499
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 392,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 505,
      "name": "SignInWithPasswordlessCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 409,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 506,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 507,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 412,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 508,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 413,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 509,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 513,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 425,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 512,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 423,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 510,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 415,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 511,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 417,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            513,
                            512,
                            510,
                            511
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 413,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    507,
                    508
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 410,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 514,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 516,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 431,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 517,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 520,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 441,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 521,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 443,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 519,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 439,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 518,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 433,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            520,
                            521,
                            519,
                            518
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 431,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 515,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 430,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    516,
                    515
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 428,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 575,
      "name": "SignInWithSSO",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 534,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 576,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 578,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 539,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 579,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 581,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 543,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 580,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 541,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            581,
                            580
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 539,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 577,
                  "name": "providerId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "UUID of the SSO provider to invoke single-sign on to."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 537,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    578,
                    577
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 535,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 582,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 583,
                  "name": "domain",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Domain name of the organization for which to invoke single-sign on."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 548,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 584,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 550,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 585,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 587,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 554,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 586,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 552,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            587,
                            586
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 550,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    583,
                    584
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 546,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 474,
      "name": "SignUpWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 344,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 475,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 476,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 347,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 478,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 350,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 479,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 482,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 360,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 481,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 358,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 480,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 352,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            482,
                            481,
                            480
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 350,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 477,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 349,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    476,
                    478,
                    477
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 345,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 483,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 486,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 368,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 487,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 489,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 376,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 490,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 378,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 488,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 374,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            489,
                            490,
                            488
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 368,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 485,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 367,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 484,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 365,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    486,
                    485,
                    484
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 363,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 776,
      "name": "SupportedStorage",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 955,
          "character": 12
        }
      ],
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "qualifiedName": "Storage",
                "package": "typescript",
                "name": "Storage"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "getItem"
                  },
                  {
                    "type": "literal",
                    "value": "setItem"
                  },
                  {
                    "type": "literal",
                    "value": "removeItem"
                  }
                ]
              }
            ],
            "qualifiedName": "Pick",
            "package": "typescript",
            "name": "Pick"
          }
        ],
        "name": "PromisifyMethods"
      }
    },
    {
      "id": 377,
      "name": "UserResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 107,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 378,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 379,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 109,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 380,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 381,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 110,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 425,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            381
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 109,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 382,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 112,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    379,
                    382
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 108,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 383,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 384,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 115,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 385,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 386,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 116,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [
                            386
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 115,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 387,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 118,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 804,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [
                    384,
                    387
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 114,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 543,
      "name": "VerifyOtpParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 478,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 544,
            "name": "VerifyMobileOtpParams",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 548,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 486,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 549,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 551,
                        "name": "captchaToken",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site.",
                          "tags": [
                            {
                              "tag": "deprecated",
                              "text": "\n"
                            }
                          ]
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 495,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 550,
                        "name": "redirectTo",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 488,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          551,
                          550
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "id": 545,
                "name": "phone",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's phone number."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 481,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 546,
                "name": "token",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The otp sent to the user's phone number."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 483,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 547,
                "name": "type",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's verification type."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 485,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 560,
                  "name": "MobileOtpType",
                  "dereferenced": {
                    "id": 560,
                    "name": "MobileOtpType",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 513,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "sms"
                        },
                        {
                          "type": "literal",
                          "value": "phone_change"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  548,
                  545,
                  546,
                  547
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 479,
                "character": 17
              }
            ]
          },
          {
            "id": 552,
            "name": "VerifyEmailOtpParams",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 553,
                "name": "email",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's email address."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 500,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 556,
                "name": "options",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isOptional": true
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 505,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 557,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 559,
                        "name": "captchaToken",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Verification token received when the user completes the captcha on the site."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 509,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 558,
                        "name": "redirectTo",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "A URL to send the user to after they are confirmed."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 507,
                            "character": 4
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          559,
                          558
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "id": 554,
                "name": "token",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The otp sent to the user's email address."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 502,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 555,
                "name": "type",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {
                  "shortText": "The user's verification type."
                },
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 504,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 561,
                  "name": "EmailOtpType",
                  "dereferenced": {
                    "id": 561,
                    "name": "EmailOtpType",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 514,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "signup"
                        },
                        {
                          "type": "literal",
                          "value": "invite"
                        },
                        {
                          "type": "literal",
                          "value": "magiclink"
                        },
                        {
                          "type": "literal",
                          "value": "recovery"
                        },
                        {
                          "type": "literal",
                          "value": "email_change"
                        },
                        {
                          "type": "literal",
                          "value": "email"
                        }
                      ]
                    }
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  553,
                  556,
                  554,
                  555
                ]
              }
            ],
            "sources": [
              {
                "fileName": "src/lib/types.ts",
                "line": 498,
                "character": 17
              }
            ]
          }
        ]
      }
    },
    {
      "id": 801,
      "name": "isAuthApiError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 34,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 802,
          "name": "isAuthApiError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 803,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 811,
              "name": "AuthApiError"
            }
          }
        }
      ]
    },
    {
      "id": 798,
      "name": "isAuthError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 12,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 799,
          "name": "isAuthError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 800,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 804,
              "name": "AuthError"
            }
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [
        811,
        804,
        872,
        859,
        897,
        922,
        847,
        824,
        832,
        1,
        77
      ]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [
        397,
        454,
        411,
        610,
        769,
        724,
        388,
        464,
        472,
        425,
        418,
        448,
        400,
        422,
        552,
        544
      ]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [
        327,
        326,
        522,
        753,
        744,
        766,
        757,
        692,
        668,
        713,
        702,
        683,
        655,
        342,
        712,
        780,
        561,
        604,
        594,
        613,
        627,
        614,
        634,
        599,
        588,
        328,
        777,
        651,
        648,
        635,
        640,
        643,
        560,
        355,
        794,
        787,
        325,
        562,
        368,
        535,
        523,
        491,
        505,
        575,
        474,
        776,
        377,
        543
      ]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [
        801,
        798
      ]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}