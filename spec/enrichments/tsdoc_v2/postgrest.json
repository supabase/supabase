{
	"id": 0,
	"name": "@supabase/postgrest-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 476,
			"name": "PostgrestBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 477,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 478,
							"name": "new PostgrestBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 479,
									"name": "Result",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 480,
									"name": "builder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 476,
										"typeArguments": [
											{
												"type": "reference",
												"id": 479,
												"name": "Result"
											}
										],
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 479,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 493,
					"name": "allowEmpty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 485,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 488,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 489,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 490,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 491,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 492,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					}
				},
				{
					"id": 483,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					}
				},
				{
					"id": 481,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GET"
							},
							{
								"type": "literal",
								"value": "HEAD"
							},
							{
								"type": "literal",
								"value": "POST"
							},
							{
								"type": "literal",
								"value": "PATCH"
							},
							{
								"type": "literal",
								"value": "DELETE"
							}
						]
					}
				},
				{
					"id": 484,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 486,
					"name": "shouldThrowOnError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 487,
					"name": "signal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AbortSignal",
						"package": "typescript",
						"name": "AbortSignal"
					}
				},
				{
					"id": 482,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "URL",
						"package": "typescript",
						"name": "URL"
					}
				},
				{
					"id": 496,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 497,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 498,
									"name": "TResult1",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 509,
										"typeArguments": [
											{
												"type": "reference",
												"id": 479,
												"name": "Result"
											}
										],
										"name": "PostgrestResponse"
									}
								},
								{
									"id": 499,
									"name": "TResult2",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 500,
									"name": "onfulfilled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 501,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 502,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 503,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 509,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 479,
																				"name": "Result"
																			}
																		],
																		"name": "PostgrestResponse"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 375,
																		"name": "TResult1"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 375,
																				"name": "TResult1"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 504,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 505,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 506,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 507,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 376,
																		"name": "TResult2"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 376,
																				"name": "TResult2"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 375,
												"name": "TResult1"
											},
											{
												"type": "reference",
												"id": 376,
												"name": "TResult2"
											}
										]
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"implementationOf": {
								"type": "reference",
								"name": "PromiseLike.then"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "PromiseLike.then"
					}
				},
				{
					"id": 494,
					"name": "throwOnError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 43,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 495,
							"name": "throwOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
								"text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
							},
							"type": {
								"type": "reference",
								"id": 476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 479,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						477
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						493,
						485,
						488,
						483,
						481,
						484,
						486,
						487,
						482
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						496,
						494
					]
				}
			],
			"sources": [
				{
					"fileName": "src/PostgrestBuilder.ts",
					"line": 5,
					"character": 30
				}
			],
			"typeParameter": [
				{
					"id": 508,
					"name": "Result",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 387,
					"name": "PostgrestTransformBuilder"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 509,
							"typeArguments": [
								{
									"type": "reference",
									"id": 479,
									"name": "Result"
								}
							],
							"name": "PostgrestResponse"
						}
					],
					"qualifiedName": "PromiseLike",
					"package": "typescript",
					"name": "PromiseLike"
				}
			]
		},
		{
			"id": 1,
			"name": "PostgrestClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 29,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new PostgrestClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a PostgREST client."
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "Database",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5,
									"name": "SchemaName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "conditional",
										"checkType": {
											"type": "literal",
											"value": "public"
										},
										"extendsType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"id": 4,
												"name": "Database"
											}
										},
										"trueType": {
											"type": "literal",
											"value": "public"
										},
										"falseType": {
											"type": "intersection",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"id": 4,
														"name": "Database"
													}
												}
											]
										}
									}
								},
								{
									"id": 6,
									"name": "Schema",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GenericSchema"
									},
									"default": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"id": 5,
												"name": "SchemaName"
											},
											"objectType": {
												"type": "reference",
												"id": 4,
												"name": "Database"
											}
										},
										"extendsType": {
											"type": "reference",
											"name": "GenericSchema"
										},
										"trueType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "intrinsic",
												"name": "any"
											},
											"objectType": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 7,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "URL of the PostgREST endpoint."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 12,
													"name": "fetch",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestClient.ts",
															"line": 38,
															"character": 6
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 13,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 14,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 15,
																			"name": "input",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInfo",
																				"package": "typescript",
																				"name": "RequestInfo"
																			}
																		},
																		{
																			"id": 16,
																			"name": "init",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInit",
																				"package": "typescript",
																				"name": "RequestInit"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"qualifiedName": "Response",
																				"package": "typescript",
																				"name": "Response"
																			}
																		],
																		"qualifiedName": "Promise",
																		"package": "typescript",
																		"name": "Promise"
																	}
																}
															]
														}
													}
												},
												{
													"id": 10,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestClient.ts",
															"line": 36,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 11,
													"name": "schema",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestClient.ts",
															"line": 37,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"id": 5,
														"name": "SchemaName"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														12,
														10,
														11
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"typeArguments": [
									{
										"type": "reference",
										"id": 4,
										"name": "Database"
									},
									{
										"type": "reference",
										"id": 5,
										"name": "SchemaName"
									},
									{
										"type": "reference",
										"id": 6,
										"name": "Schema"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 20,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 22,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 23,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 24,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					}
				},
				{
					"id": 18,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					}
				},
				{
					"id": 19,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"name": "SchemaName"
					}
				},
				{
					"id": 17,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 25,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 52,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Perform a table operation."
							},
							"typeParameter": [
								{
									"id": 27,
									"name": "TableName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28,
									"name": "Table",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GenericTable"
									}
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The table name to operate on.\n"
									},
									"type": {
										"type": "reference",
										"id": 27,
										"name": "TableName"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 45,
								"typeArguments": [
									{
										"type": "reference",
										"id": 28,
										"name": "Table"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 30,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 31,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 45,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 32,
					"name": "rpc",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestClient.ts",
							"line": 75,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 33,
							"name": "rpc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Perform a function call."
							},
							"typeParameter": [
								{
									"id": 34,
									"name": "FunctionName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35,
									"name": "Function_",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GenericFunction"
									}
								}
							],
							"parameters": [
								{
									"id": 36,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The function name to call."
									},
									"type": {
										"type": "reference",
										"id": 34,
										"name": "FunctionName"
									}
								},
								{
									"id": 37,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The parameters to pass to the function call."
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Args"
										},
										"objectType": {
											"type": "reference",
											"id": 35,
											"name": "Function_"
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 38,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Named parameters."
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 39,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 41,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Count algorithm to use to count rows in a table.\n"
													},
													"sources": [
														{
															"fileName": "src/PostgrestClient.ts",
															"line": 86,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												},
												{
													"id": 40,
													"name": "head",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "When set to true, no data will be returned."
													},
													"sources": [
														{
															"fileName": "src/PostgrestClient.ts",
															"line": 85,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														41,
														40
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "Returns"
											},
											"objectType": {
												"type": "reference",
												"id": 35,
												"name": "Function_"
											}
										},
										"extendsType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "intrinsic",
													"name": "number"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "any"
													},
													"objectType": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											},
											"extendsType": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											"trueType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "intrinsic",
													"name": "any"
												},
												"objectType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Returns"
										},
										"objectType": {
											"type": "reference",
											"id": 35,
											"name": "Function_"
										}
									}
								],
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						20,
						18,
						19,
						17
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						25,
						32
					]
				}
			],
			"sources": [
				{
					"fileName": "src/PostgrestClient.ts",
					"line": 7,
					"character": 21
				}
			],
			"typeParameter": [
				{
					"id": 42,
					"name": "Database",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 43,
					"name": "SchemaName",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 4,
									"name": "Database"
								}
							}
						]
					},
					"default": {
						"type": "conditional",
						"checkType": {
							"type": "literal",
							"value": "public"
						},
						"extendsType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 4,
								"name": "Database"
							}
						},
						"trueType": {
							"type": "literal",
							"value": "public"
						},
						"falseType": {
							"type": "intersection",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4,
										"name": "Database"
									}
								}
							]
						}
					}
				},
				{
					"id": 44,
					"name": "Schema",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "GenericSchema"
					},
					"default": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"id": 5,
								"name": "SchemaName"
							},
							"objectType": {
								"type": "reference",
								"id": 4,
								"name": "Database"
							}
						},
						"extendsType": {
							"type": "reference",
							"name": "GenericSchema"
						},
						"trueType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"id": 5,
								"name": "SchemaName"
							},
							"objectType": {
								"type": "reference",
								"id": 4,
								"name": "Database"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			]
		},
		{
			"id": 106,
			"name": "PostgrestFilterBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 107,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 108,
							"name": "new PostgrestFilterBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 109,
									"name": "Table",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 110,
									"name": "Result",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 111,
									"name": "builder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 476,
										"typeArguments": [
											{
												"type": "reference",
												"id": 110,
												"name": "Result"
											}
										],
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 389,
								"name": "default.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 388,
						"name": "default.constructor"
					}
				},
				{
					"id": 370,
					"name": "allowEmpty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 459,
						"name": "default.allowEmpty"
					}
				},
				{
					"id": 362,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 451,
						"name": "default.body"
					}
				},
				{
					"id": 365,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 366,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 367,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 368,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 369,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 454,
						"name": "default.fetch"
					}
				},
				{
					"id": 360,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 449,
						"name": "default.headers"
					}
				},
				{
					"id": 358,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GET"
							},
							{
								"type": "literal",
								"value": "HEAD"
							},
							{
								"type": "literal",
								"value": "POST"
							},
							{
								"type": "literal",
								"value": "PATCH"
							},
							{
								"type": "literal",
								"value": "DELETE"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 447,
						"name": "default.method"
					}
				},
				{
					"id": 361,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 450,
						"name": "default.schema"
					}
				},
				{
					"id": 363,
					"name": "shouldThrowOnError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"inheritedFrom": {
						"type": "reference",
						"id": 452,
						"name": "default.shouldThrowOnError"
					}
				},
				{
					"id": 364,
					"name": "signal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AbortSignal",
						"package": "typescript",
						"name": "AbortSignal"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 453,
						"name": "default.signal"
					}
				},
				{
					"id": 359,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "URL",
						"package": "typescript",
						"name": "URL"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 448,
						"name": "default.url"
					}
				},
				{
					"id": 338,
					"name": "abortSignal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 110,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "abortSignal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the AbortSignal for the fetch request."
							},
							"parameters": [
								{
									"id": 340,
									"name": "signal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 428,
								"name": "default.abortSignal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 427,
						"name": "default.abortSignal"
					}
				},
				{
					"id": 216,
					"name": "containedBy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 250,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "containedBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose json, array, or range value on the stated `column` is\ncontained by the specified `value`."
							},
							"typeParameter": [
								{
									"id": 218,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 219,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 218,
										"name": "ColumnName"
									}
								},
								{
									"id": 220,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											{
												"type": "array",
												"elementType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"id": 218,
														"name": "ColumnName"
													},
													"objectType": {
														"type": "reference",
														"id": 109,
														"name": "Table"
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 221,
							"name": "containedBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 222,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 223,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 208,
					"name": "contains",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 223,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose json, array, or range value on the stated `column`\ncontains the values specified in `value`."
							},
							"typeParameter": [
								{
									"id": 210,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 211,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 210,
										"name": "ColumnName"
									}
								},
								{
									"id": 212,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											{
												"type": "array",
												"elementType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"id": 210,
														"name": "ColumnName"
													},
													"objectType": {
														"type": "reference",
														"id": 109,
														"name": "Table"
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 213,
							"name": "contains",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 214,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 215,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 345,
					"name": "csv",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 138,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 346,
							"name": "csv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the response type to CSV."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 435,
								"name": "default.csv"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 434,
						"name": "default.csv"
					}
				},
				{
					"id": 128,
					"name": "eq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 72,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "eq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` exactly matches the\nspecified `value`."
							},
							"typeParameter": [
								{
									"id": 130,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 131,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 130,
										"name": "ColumnName"
									}
								},
								{
									"id": 132,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 130,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 133,
							"name": "eq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 134,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 135,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 349,
					"name": "explain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 160,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 350,
							"name": "explain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Obtains the EXPLAIN plan for this request."
							},
							"parameters": [
								{
									"id": 351,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 352,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 353,
													"name": "analyze",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 167,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 356,
													"name": "buffers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 170,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 355,
													"name": "settings",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 169,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 354,
													"name": "verbose",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 168,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 357,
													"name": "wal",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 171,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														353,
														356,
														355,
														354,
														357
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 509,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										],
										"name": "PostgrestResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 439,
								"name": "default.explain"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 438,
						"name": "default.explain"
					}
				},
				{
					"id": 288,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 406,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose `column` satisfies the filter."
							},
							"typeParameter": [
								{
									"id": 290,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 291,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 290,
										"name": "ColumnName"
									}
								},
								{
									"id": 292,
									"name": "operator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The operator to filter with."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "FilterOperator"
											},
											{
												"type": "literal",
												"value": "not.eq"
											},
											{
												"type": "literal",
												"value": "not.neq"
											},
											{
												"type": "literal",
												"value": "not.gt"
											},
											{
												"type": "literal",
												"value": "not.gte"
											},
											{
												"type": "literal",
												"value": "not.lt"
											},
											{
												"type": "literal",
												"value": "not.lte"
											},
											{
												"type": "literal",
												"value": "not.like"
											},
											{
												"type": "literal",
												"value": "not.ilike"
											},
											{
												"type": "literal",
												"value": "not.is"
											},
											{
												"type": "literal",
												"value": "not.in"
											},
											{
												"type": "literal",
												"value": "not.cs"
											},
											{
												"type": "literal",
												"value": "not.cd"
											},
											{
												"type": "literal",
												"value": "not.sl"
											},
											{
												"type": "literal",
												"value": "not.sr"
											},
											{
												"type": "literal",
												"value": "not.nxl"
											},
											{
												"type": "literal",
												"value": "not.nxr"
											},
											{
												"type": "literal",
												"value": "not.adj"
											},
											{
												"type": "literal",
												"value": "not.ov"
											},
											{
												"type": "literal",
												"value": "not.fts"
											},
											{
												"type": "literal",
												"value": "not.plfts"
											},
											{
												"type": "literal",
												"value": "not.phfts"
											},
											{
												"type": "literal",
												"value": "not.wfts"
											}
										]
									}
								},
								{
									"id": 293,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 294,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 295,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 296,
									"name": "operator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 297,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 347,
					"name": "geojson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 146,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 348,
							"name": "geojson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the response type to GeoJSON."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 437,
								"name": "default.geojson"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 436,
						"name": "default.geojson"
					}
				},
				{
					"id": 144,
					"name": "gt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 100,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "gt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` is greater than the\nspecified `value`."
							},
							"typeParameter": [
								{
									"id": 146,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 147,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 146,
										"name": "ColumnName"
									}
								},
								{
									"id": 148,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 146,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 149,
							"name": "gt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 150,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 151,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "gte",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 114,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "gte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` is greater than or\nequal to the specified `value`."
							},
							"typeParameter": [
								{
									"id": 154,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 155,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "ColumnName"
									}
								},
								{
									"id": 156,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 154,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 157,
							"name": "gte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 158,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 159,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 184,
					"name": "ilike",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 170,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "ilike",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case insensitive)."
							},
							"typeParameter": [
								{
									"id": 186,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 187,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 186,
										"name": "ColumnName"
									}
								},
								{
									"id": 188,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The pattern to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 189,
							"name": "ilike",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 190,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 191,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 200,
					"name": "in",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 201,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "in",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` is found on the\nspecified `values`."
							},
							"typeParameter": [
								{
									"id": 202,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 203,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 202,
										"name": "ColumnName"
									}
								},
								{
									"id": 204,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The values to filter with.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"id": 202,
												"name": "ColumnName"
											},
											"objectType": {
												"type": "reference",
												"id": 109,
												"name": "Table"
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 205,
							"name": "in",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 206,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 207,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 192,
					"name": "is",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 184,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "is",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A check for exact equality (null, true, false), finds all rows whose\nvalue on the stated `column` exactly match the specified `value`."
							},
							"typeParameter": [
								{
									"id": 194,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 195,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 194,
										"name": "ColumnName"
									}
								},
								{
									"id": 196,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"id": 194,
															"name": "ColumnName"
														},
														"objectType": {
															"type": "reference",
															"id": 109,
															"name": "Table"
														}
													},
													{
														"type": "literal",
														"value": null
													}
												]
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"id": 194,
															"name": "ColumnName"
														},
														"objectType": {
															"type": "reference",
															"id": 109,
															"name": "Table"
														}
													},
													{
														"type": "literal",
														"value": false
													}
												]
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"id": 194,
															"name": "ColumnName"
														},
														"objectType": {
															"type": "reference",
															"id": 109,
															"name": "Table"
														}
													},
													{
														"type": "literal",
														"value": true
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 197,
							"name": "is",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 198,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 199,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 176,
					"name": "like",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 156,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 177,
							"name": "like",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case sensitive)."
							},
							"typeParameter": [
								{
									"id": 178,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 179,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 178,
										"name": "ColumnName"
									}
								},
								{
									"id": 180,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The pattern to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 181,
							"name": "like",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 182,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 183,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 325,
					"name": "limit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 85,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 326,
							"name": "limit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Limits the result with the specified `count`."
							},
							"parameters": [
								{
									"id": 327,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The maximum no. of rows to limit to."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 328,
									"name": "foreignTable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The foreign table to use (for foreign columns).\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 330,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 85,
															"character": 43
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														330
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 415,
								"name": "default.limit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 414,
						"name": "default.limit"
					}
				},
				{
					"id": 160,
					"name": "lt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 128,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "lt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` is less than the\nspecified `value`."
							},
							"typeParameter": [
								{
									"id": 162,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 163,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 162,
										"name": "ColumnName"
									}
								},
								{
									"id": 164,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 162,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 165,
							"name": "lt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 166,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 167,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 168,
					"name": "lte",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 142,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "lte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` is less than or equal\nto the specified `value`."
							},
							"typeParameter": [
								{
									"id": 170,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 171,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 170,
										"name": "ColumnName"
									}
								},
								{
									"id": 172,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 170,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 173,
							"name": "lte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 174,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 175,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 298,
					"name": "match",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 423,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 299,
							"name": "match",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose columns match the specified `query` object."
							},
							"typeParameter": [
								{
									"id": 300,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 301,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The object to filter with, with column names as keys mapped\n              to their filter values.\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 300,
												"name": "ColumnName"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"id": 300,
													"name": "ColumnName"
												},
												"objectType": {
													"type": "reference",
													"id": 109,
													"name": "Table"
												}
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 302,
							"name": "match",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 303,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "maybeSingle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 129,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "maybeSingle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves at most one row from the result. Result must be at most one row\n(e.g. using `eq` on a UNIQUE column), otherwise this will result in an\nerror."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 110,
												"name": "Result"
											}
										],
										"name": "PostgrestMaybeSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 433,
								"name": "default.maybeSingle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 432,
						"name": "default.maybeSingle"
					}
				},
				{
					"id": 136,
					"name": "neq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 86,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 137,
							"name": "neq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose value on the stated `column` doesn't match the\nspecified `value`."
							},
							"typeParameter": [
								{
									"id": 138,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 139,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 138,
										"name": "ColumnName"
									}
								},
								{
									"id": 140,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 138,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 141,
							"name": "neq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 142,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 143,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "not",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 42,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "not",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows which doesn't satisfy the filter."
							},
							"typeParameter": [
								{
									"id": 114,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 114,
										"name": "ColumnName"
									}
								},
								{
									"id": 116,
									"name": "operator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The operator to filter with."
									},
									"type": {
										"type": "reference",
										"name": "FilterOperator"
									}
								},
								{
									"id": 117,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 114,
											"name": "ColumnName"
										},
										"objectType": {
											"type": "reference",
											"id": 109,
											"name": "Table"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 118,
							"name": "not",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 119,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 120,
									"name": "operator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 121,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 122,
					"name": "or",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 59,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "or",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows satisfying at least one of the filters."
							},
							"parameters": [
								{
									"id": 124,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The filters to use, separated by commas."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 125,
									"name": "foreignTable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The foreign table to use (if `column` is a foreign column).\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 126,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 127,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestFilterBuilder.ts",
															"line": 59,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														127
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 309,
					"name": "order",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "order",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Orders the result with the specified `column`."
							},
							"typeParameter": [
								{
									"id": 311,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 312,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to order on."
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "ColumnName"
									}
								},
								{
									"id": 313,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 314,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 315,
													"name": "ascending",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 317,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 59
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 316,
													"name": "nullsFirst",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														315,
														317,
														316
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 399,
								"name": "default.order"
							}
						},
						{
							"id": 318,
							"name": "order",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 319,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 320,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 321,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 322,
													"name": "ascending",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 324,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 59
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 323,
													"name": "nullsFirst",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														322,
														324,
														323
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 407,
								"name": "default.order"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 398,
						"name": "default.order"
					}
				},
				{
					"id": 264,
					"name": "overlaps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 346,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "overlaps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose array or range value on the stated `column` overlaps\n(has a value in common) with the specified `value`."
							},
							"typeParameter": [
								{
									"id": 266,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 267,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 266,
										"name": "ColumnName"
									}
								},
								{
									"id": 268,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to filter with.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"id": 266,
														"name": "ColumnName"
													},
													"objectType": {
														"type": "reference",
														"id": 109,
														"name": "Table"
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 269,
							"name": "overlaps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 270,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 271,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 331,
					"name": "range",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 98,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 332,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Limits the result to rows within the specified range, inclusive."
							},
							"parameters": [
								{
									"id": 333,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The starting index from which to limit the result, inclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 334,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The last index to which to limit the result, inclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 335,
									"name": "foreignTable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The foreign table to use (for foreign columns).\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 336,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 337,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 98,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														337
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 421,
								"name": "default.range"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 420,
						"name": "default.range"
					}
				},
				{
					"id": 256,
					"name": "rangeAdjacent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 332,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 257,
							"name": "rangeAdjacent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose range value on the stated `column` is adjacent to\nthe specified `range`."
							},
							"typeParameter": [
								{
									"id": 258,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 259,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 258,
										"name": "ColumnName"
									}
								},
								{
									"id": 260,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The range to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 261,
							"name": "rangeAdjacent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 262,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 263,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 232,
					"name": "rangeGt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 290,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "rangeGt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose range value on the stated `column` is strictly to\nthe right of the specified `range`."
							},
							"typeParameter": [
								{
									"id": 234,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 235,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 234,
										"name": "ColumnName"
									}
								},
								{
									"id": 236,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The range to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 237,
							"name": "rangeGt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 238,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 239,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "rangeGte",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 304,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "rangeGte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the left of the specified `range`."
							},
							"typeParameter": [
								{
									"id": 242,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 243,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 242,
										"name": "ColumnName"
									}
								},
								{
									"id": 244,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The range to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 245,
							"name": "rangeGte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 246,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 247,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 224,
					"name": "rangeLt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 276,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "rangeLt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose range value on the stated `column` is strictly to the\nleft of the specified `range`."
							},
							"typeParameter": [
								{
									"id": 226,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 227,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 226,
										"name": "ColumnName"
									}
								},
								{
									"id": 228,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The range to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 229,
							"name": "rangeLt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 230,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 231,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "rangeLte",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 318,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "rangeLte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the right of the specified `range`."
							},
							"typeParameter": [
								{
									"id": 250,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 251,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 250,
										"name": "ColumnName"
									}
								},
								{
									"id": 252,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The range to filter with.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 253,
							"name": "rangeLte",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 254,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 255,
									"name": "range",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 304,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs vertical filtering with SELECT."
							},
							"typeParameter": [
								{
									"id": 306,
									"name": "Query",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "literal",
										"value": "*"
									}
								},
								{
									"id": 307,
									"name": "NewResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 109,
												"name": "Table"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 306,
													"name": "Query"
												},
												"extendsType": {
													"type": "literal",
													"value": "*"
												},
												"trueType": {
													"type": "literal",
													"value": "*"
												},
												"falseType": {
													"type": "reference",
													"id": 306,
													"name": "Query"
												}
											}
										],
										"name": "GetResult"
									}
								}
							],
							"parameters": [
								{
									"id": 308,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The columns to retrieve, separated by commas.\n"
									},
									"type": {
										"type": "reference",
										"id": 306,
										"name": "Query"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 307,
										"name": "NewResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 394,
								"name": "default.select"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 393,
						"name": "default.select"
					}
				},
				{
					"id": 341,
					"name": "single",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 342,
							"name": "single",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "reference",
												"id": 110,
												"name": "Result"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 431,
								"name": "default.single"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 430,
						"name": "default.single"
					}
				},
				{
					"id": 272,
					"name": "textSearch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestFilterBuilder.ts",
							"line": 371,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "textSearch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Finds all rows whose text or tsvector value on the stated `column` matches\nthe tsquery in `query`."
							},
							"typeParameter": [
								{
									"id": 274,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 275,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to filter on."
									},
									"type": {
										"type": "reference",
										"id": 274,
										"name": "ColumnName"
									}
								},
								{
									"id": 276,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The Postgres tsquery string to filter with."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 277,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 278,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 279,
													"name": "config",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestFilterBuilder.ts",
															"line": 374,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 280,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestFilterBuilder.ts",
															"line": 374,
															"character": 33
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "plain"
															},
															{
																"type": "literal",
																"value": "phrase"
															},
															{
																"type": "literal",
																"value": "websearch"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														279,
														280
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 281,
							"name": "textSearch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 282,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 283,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 284,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 285,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 286,
													"name": "config",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestFilterBuilder.ts",
															"line": 379,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 287,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestFilterBuilder.ts",
															"line": 379,
															"character": 33
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "plain"
															},
															{
																"type": "literal",
																"value": "phrase"
															},
															{
																"type": "literal",
																"value": "websearch"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														286,
														287
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 375,
									"name": "TResult1",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 509,
										"typeArguments": [
											{
												"type": "reference",
												"id": 110,
												"name": "Result"
											}
										],
										"name": "PostgrestResponse"
									}
								},
								{
									"id": 376,
									"name": "TResult2",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 377,
									"name": "onfulfilled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 378,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 379,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 380,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 509,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 110,
																				"name": "Result"
																			}
																		],
																		"name": "PostgrestResponse"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 375,
																		"name": "TResult1"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 375,
																				"name": "TResult1"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 381,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 382,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 383,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 384,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 376,
																		"name": "TResult2"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 376,
																				"name": "TResult2"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 375,
												"name": "TResult1"
											},
											{
												"type": "reference",
												"id": 376,
												"name": "TResult2"
											}
										]
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 463,
								"name": "default.then"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 462,
						"name": "default.then"
					}
				},
				{
					"id": 371,
					"name": "throwOnError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 43,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "throwOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
								"text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
							},
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "reference",
										"id": 109,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 110,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 461,
								"name": "default.throwOnError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 460,
						"name": "default.throwOnError"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						107
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						370,
						362,
						365,
						360,
						358,
						361,
						363,
						364,
						359
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						338,
						216,
						208,
						345,
						128,
						349,
						288,
						347,
						144,
						152,
						184,
						200,
						192,
						176,
						325,
						160,
						168,
						298,
						343,
						136,
						112,
						122,
						309,
						264,
						331,
						256,
						232,
						240,
						224,
						248,
						304,
						341,
						272,
						373,
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "src/PostgrestFilterBuilder.ts",
					"line": 31,
					"character": 21
				}
			],
			"typeParameter": [
				{
					"id": 385,
					"name": "Table",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					}
				},
				{
					"id": 386,
					"name": "Result",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 387,
					"typeArguments": [
						{
							"type": "reference",
							"id": 109,
							"name": "Table"
						},
						{
							"type": "reference",
							"id": 110,
							"name": "Result"
						}
					],
					"name": "default"
				}
			]
		},
		{
			"id": 45,
			"name": "PostgrestQueryBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 46,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 13,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "new PostgrestQueryBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 48,
									"name": "Table",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GenericTable"
									}
								}
							],
							"parameters": [
								{
									"id": 49,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "URL",
										"package": "typescript",
										"name": "URL"
									}
								},
								{
									"id": 50,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 51,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 54,
													"name": "fetch",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 22,
															"character": 6
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 55,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 56,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 57,
																			"name": "input",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInfo",
																				"package": "typescript",
																				"name": "RequestInfo"
																			}
																		},
																		{
																			"id": 58,
																			"name": "init",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInit",
																				"package": "typescript",
																				"name": "RequestInit"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"qualifiedName": "Response",
																				"package": "typescript",
																				"name": "Response"
																			}
																		],
																		"qualifiedName": "Promise",
																		"package": "typescript",
																		"name": "Promise"
																	}
																}
															]
														}
													}
												},
												{
													"id": 52,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 20,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"qualifiedName": "Record",
														"package": "typescript",
														"name": "Record"
													}
												},
												{
													"id": 53,
													"name": "schema",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 21,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														54,
														52,
														53
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 45,
								"typeArguments": [
									{
										"type": "reference",
										"id": 48,
										"name": "Table"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 64,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 65,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 66,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 67,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					}
				},
				{
					"id": 60,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					}
				},
				{
					"id": 61,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 62,
					"name": "signal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AbortSignal",
						"package": "typescript",
						"name": "AbortSignal"
					}
				},
				{
					"id": 59,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "URL",
						"package": "typescript",
						"name": "URL"
					}
				},
				{
					"id": 100,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 213,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a DELETE on the table."
							},
							"parameters": [
								{
									"id": 102,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Count algorithm to use to count rows in a table.\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 103,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 104,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 216,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														104
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Row"
										},
										"objectType": {
											"type": "reference",
											"id": 48,
											"name": "Table"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "insert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 87,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "insert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an INSERT into the table."
							},
							"typeParameter": [
								{
									"id": 79,
									"name": "Row",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"parameters": [
								{
									"id": 80,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The values to insert."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 79,
												"name": "Row"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 79,
													"name": "Row"
												}
											}
										]
									}
								},
								{
									"id": 81,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Count algorithm to use to count rows in a table.\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 82,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 83,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 92,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														83
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Row"
										},
										"objectType": {
											"type": "reference",
											"id": 48,
											"name": "Table"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 38,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs vertical filtering with SELECT."
							},
							"typeParameter": [
								{
									"id": 70,
									"name": "Query",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "literal",
										"value": "*"
									}
								},
								{
									"id": 71,
									"name": "Result",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "Row"
												},
												"objectType": {
													"type": "reference",
													"id": 48,
													"name": "Table"
												}
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 70,
													"name": "Query"
												},
												"extendsType": {
													"type": "literal",
													"value": "*"
												},
												"trueType": {
													"type": "literal",
													"value": "*"
												},
												"falseType": {
													"type": "reference",
													"id": 70,
													"name": "Query"
												}
											}
										],
										"name": "GetResult"
									}
								}
							],
							"parameters": [
								{
									"id": 72,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The columns to retrieve, separated by commas."
									},
									"type": {
										"type": "reference",
										"id": 70,
										"name": "Query"
									}
								},
								{
									"id": 73,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 74,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 76,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 48,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												},
												{
													"id": 75,
													"name": "head",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 47,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														76,
														75
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Row"
										},
										"objectType": {
											"type": "reference",
											"id": 48,
											"name": "Table"
										}
									},
									{
										"type": "reference",
										"id": 71,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 178,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an UPDATE on the table."
							},
							"typeParameter": [
								{
									"id": 95,
									"name": "Row",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"parameters": [
								{
									"id": 96,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The values to update."
									},
									"type": {
										"type": "reference",
										"id": 95,
										"name": "Row"
									}
								},
								{
									"id": 97,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Count algorithm to use to count rows in a table.\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 98,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 99,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 183,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														99
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Row"
										},
										"objectType": {
											"type": "reference",
											"id": 48,
											"name": "Table"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "upsert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestQueryBuilder.ts",
							"line": 135,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "upsert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs an UPSERT into the table."
							},
							"typeParameter": [
								{
									"id": 86,
									"name": "Row",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The values to insert."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 86,
												"name": "Row"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 86,
													"name": "Row"
												}
											}
										]
									}
								},
								{
									"id": 88,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 89,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 91,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 143,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												},
												{
													"id": 92,
													"name": "ignoreDuplicates",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 144,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 90,
													"name": "onConflict",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestQueryBuilder.ts",
															"line": 142,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														91,
														92,
														90
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Row"
										},
										"objectType": {
											"type": "reference",
											"id": 48,
											"name": "Table"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						46
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						63,
						60,
						61,
						62,
						59
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						100,
						77,
						68,
						93,
						84
					]
				}
			],
			"sources": [
				{
					"fileName": "src/PostgrestQueryBuilder.ts",
					"line": 6,
					"character": 21
				}
			],
			"typeParameter": [
				{
					"id": 105,
					"name": "Table",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "GenericTable"
					}
				}
			]
		},
		{
			"id": 387,
			"name": "PostgrestTransformBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Post-filters (transforms)"
			},
			"children": [
				{
					"id": 388,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 389,
							"name": "new PostgrestTransformBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 390,
									"name": "Table",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"qualifiedName": "Record",
										"package": "typescript",
										"name": "Record"
									}
								},
								{
									"id": 391,
									"name": "Result",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 392,
									"name": "builder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 476,
										"typeArguments": [
											{
												"type": "reference",
												"id": 391,
												"name": "Result"
											}
										],
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 478,
								"name": "default.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 477,
						"name": "default.constructor"
					}
				},
				{
					"id": 459,
					"name": "allowEmpty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 493,
						"name": "default.allowEmpty"
					}
				},
				{
					"id": 451,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 485,
						"name": "default.body"
					}
				},
				{
					"id": 454,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 455,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 456,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 457,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 458,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 488,
						"name": "default.fetch"
					}
				},
				{
					"id": 449,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 483,
						"name": "default.headers"
					}
				},
				{
					"id": 447,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "GET"
							},
							{
								"type": "literal",
								"value": "HEAD"
							},
							{
								"type": "literal",
								"value": "POST"
							},
							{
								"type": "literal",
								"value": "PATCH"
							},
							{
								"type": "literal",
								"value": "DELETE"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 481,
						"name": "default.method"
					}
				},
				{
					"id": 450,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 484,
						"name": "default.schema"
					}
				},
				{
					"id": 452,
					"name": "shouldThrowOnError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"inheritedFrom": {
						"type": "reference",
						"id": 486,
						"name": "default.shouldThrowOnError"
					}
				},
				{
					"id": 453,
					"name": "signal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AbortSignal",
						"package": "typescript",
						"name": "AbortSignal"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 487,
						"name": "default.signal"
					}
				},
				{
					"id": 448,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "URL",
						"package": "typescript",
						"name": "URL"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 482,
						"name": "default.url"
					}
				},
				{
					"id": 427,
					"name": "abortSignal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 110,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "abortSignal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the AbortSignal for the fetch request."
							},
							"parameters": [
								{
									"id": 429,
									"name": "signal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "AbortSignal",
										"package": "typescript",
										"name": "AbortSignal"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 434,
					"name": "csv",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 138,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 435,
							"name": "csv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the response type to CSV."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "explain",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 160,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "explain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Obtains the EXPLAIN plan for this request."
							},
							"parameters": [
								{
									"id": 440,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 442,
													"name": "analyze",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 167,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 445,
													"name": "buffers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 170,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 444,
													"name": "settings",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 169,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 443,
													"name": "verbose",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 168,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 446,
													"name": "wal",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 171,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														442,
														445,
														444,
														443,
														446
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 509,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										],
										"name": "PostgrestResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							}
						}
					]
				},
				{
					"id": 436,
					"name": "geojson",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 146,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "geojson",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the response type to GeoJSON."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"qualifiedName": "Record",
												"package": "typescript",
												"name": "Record"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							}
						}
					]
				},
				{
					"id": 414,
					"name": "limit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 85,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 415,
							"name": "limit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Limits the result with the specified `count`."
							},
							"parameters": [
								{
									"id": 416,
									"name": "count",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The maximum no. of rows to limit to."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 417,
									"name": "foreignTable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The foreign table to use (for foreign columns).\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 418,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 419,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 85,
															"character": 43
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														419
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 432,
					"name": "maybeSingle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 129,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 433,
							"name": "maybeSingle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves at most one row from the result. Result must be at most one row\n(e.g. using `eq` on a UNIQUE column), otherwise this will result in an\nerror."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 513,
										"typeArguments": [
											{
												"type": "reference",
												"id": 391,
												"name": "Result"
											}
										],
										"name": "PostgrestMaybeSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							}
						}
					]
				},
				{
					"id": 398,
					"name": "order",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 399,
							"name": "order",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Orders the result with the specified `column`."
							},
							"typeParameter": [
								{
									"id": 400,
									"name": "ColumnName",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 401,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The column to order on."
									},
									"type": {
										"type": "reference",
										"id": 311,
										"name": "ColumnName"
									}
								},
								{
									"id": 402,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 404,
													"name": "ascending",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 406,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 59
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 405,
													"name": "nullsFirst",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 53,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														404,
														406,
														405
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 407,
							"name": "order",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 408,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 409,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 410,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 411,
													"name": "ascending",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 413,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 59
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 412,
													"name": "nullsFirst",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 57,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														411,
														413,
														412
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 420,
					"name": "range",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 98,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Limits the result to rows within the specified range, inclusive."
							},
							"parameters": [
								{
									"id": 422,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The starting index from which to limit the result, inclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 423,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The last index to which to limit the result, inclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 424,
									"name": "foreignTable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The foreign table to use (for foreign columns).\n"
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 425,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 426,
													"name": "foreignTable",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/PostgrestTransformBuilder.ts",
															"line": 98,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														426
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 393,
					"name": "select",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 394,
							"name": "select",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs vertical filtering with SELECT."
							},
							"typeParameter": [
								{
									"id": 395,
									"name": "Query",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "literal",
										"value": "*"
									}
								},
								{
									"id": 396,
									"name": "NewResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 390,
												"name": "Table"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"id": 306,
													"name": "Query"
												},
												"extendsType": {
													"type": "literal",
													"value": "*"
												},
												"trueType": {
													"type": "literal",
													"value": "*"
												},
												"falseType": {
													"type": "reference",
													"id": 306,
													"name": "Query"
												}
											}
										],
										"name": "GetResult"
									}
								}
							],
							"parameters": [
								{
									"id": 397,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The columns to retrieve, separated by commas.\n"
									},
									"type": {
										"type": "reference",
										"id": 306,
										"name": "Query"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 307,
										"name": "NewResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 430,
					"name": "single",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestTransformBuilder.ts",
							"line": 119,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "single",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 511,
										"typeArguments": [
											{
												"type": "reference",
												"id": 391,
												"name": "Result"
											}
										],
										"name": "PostgrestSingleResponse"
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							}
						}
					]
				},
				{
					"id": 462,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 48,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 463,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 464,
									"name": "TResult1",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"id": 509,
										"typeArguments": [
											{
												"type": "reference",
												"id": 391,
												"name": "Result"
											}
										],
										"name": "PostgrestResponse"
									}
								},
								{
									"id": 465,
									"name": "TResult2",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 466,
									"name": "onfulfilled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 467,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 468,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 469,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 509,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 391,
																				"name": "Result"
																			}
																		],
																		"name": "PostgrestResponse"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 375,
																		"name": "TResult1"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 375,
																				"name": "TResult1"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 470,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 471,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 472,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 473,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"id": 376,
																		"name": "TResult2"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 376,
																				"name": "TResult2"
																			}
																		],
																		"qualifiedName": "PromiseLike",
																		"package": "typescript",
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 375,
												"name": "TResult1"
											},
											{
												"type": "reference",
												"id": 376,
												"name": "TResult2"
											}
										]
									}
								],
								"qualifiedName": "PromiseLike",
								"package": "typescript",
								"name": "PromiseLike"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 497,
								"name": "default.then"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 496,
						"name": "default.then"
					}
				},
				{
					"id": 460,
					"name": "throwOnError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/PostgrestBuilder.ts",
							"line": 43,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "throwOnError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
								"text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
							},
							"type": {
								"type": "reference",
								"id": 387,
								"typeArguments": [
									{
										"type": "reference",
										"id": 390,
										"name": "Table"
									},
									{
										"type": "reference",
										"id": 391,
										"name": "Result"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 495,
								"name": "default.throwOnError"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 494,
						"name": "default.throwOnError"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						388
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						459,
						451,
						454,
						449,
						447,
						450,
						452,
						453,
						448
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						427,
						434,
						438,
						436,
						414,
						432,
						398,
						420,
						393,
						430,
						462,
						460
					]
				}
			],
			"sources": [
				{
					"fileName": "src/PostgrestTransformBuilder.ts",
					"line": 9,
					"character": 21
				}
			],
			"typeParameter": [
				{
					"id": 474,
					"name": "Table",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"qualifiedName": "Record",
						"package": "typescript",
						"name": "Record"
					}
				},
				{
					"id": 475,
					"name": "Result",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 476,
					"typeArguments": [
						{
							"type": "reference",
							"id": 391,
							"name": "Result"
						}
					],
					"name": "default"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 106,
					"name": "PostgrestFilterBuilder"
				}
			]
		},
		{
			"id": 515,
			"name": "PostgrestError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Error format",
				"text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
			},
			"sources": [
				{
					"fileName": "src/types.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 516,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 520,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 518,
							"name": "details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 519,
							"name": "hint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 517,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								520,
								518,
								519,
								517
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types.ts",
							"line": 8,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 513,
			"name": "PostgrestMaybeSingleResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 514,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"id": 511,
				"typeArguments": [
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 514,
								"name": "T"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				],
				"name": "PostgrestSingleResponse"
			}
		},
		{
			"id": 509,
			"name": "PostgrestResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types.ts",
					"line": 35,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 510,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 510,
								"name": "T"
							}
						],
						"name": "PostgrestResponseSuccess"
					},
					{
						"type": "reference",
						"name": "PostgrestResponseFailure"
					}
				]
			}
		},
		{
			"id": 511,
			"name": "PostgrestSingleResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 512,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 512,
								"name": "T"
							}
						],
						"name": "PostgrestSingleResponseSuccess"
					},
					{
						"type": "reference",
						"name": "PostgrestResponseFailure"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				476,
				1,
				106,
				45,
				387
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				515,
				513,
				509,
				511
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}