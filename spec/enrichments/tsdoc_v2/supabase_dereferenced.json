{
  "id": 0,
  "name": "@supabase/supabase-js",
  "kind": 1,
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "index",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 202,
          "name": "SupabaseClientOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {},
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 20,
              "character": 14
            }
          ],
          "target": 61
        },
        {
          "id": 106,
          "name": "SupabaseClient",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Supabase Client.",
            "text": "An isomorphic Javascript client for interacting with Postgres.\n"
          },
          "children": [
            {
              "id": 107,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 83,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 108,
                  "name": "new SupabaseClient",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Create a new client for use in the browser."
                  },
                  "typeParameter": [
                    {
                      "id": 109,
                      "name": "Database",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 110,
                      "name": "SchemaName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 109,
                            "name": "Database"
                          }
                        },
                        "trueType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "falseType": {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 109,
                                "name": "Database"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 111,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 99,
                        "name": "GenericSchema"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 110,
                            "name": "SchemaName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 109,
                            "name": "Database"
                          }
                        },
                        "extendsType": {
                          "type": "reference",
                          "id": 99,
                          "name": "GenericSchema"
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 112,
                      "name": "supabaseUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The unique Supabase URL which is supplied when you create a new project in your project dashboard."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 113,
                      "name": "supabaseKey",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The unique Supabase Key which is supplied when you create a new project in your project dashboard."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 114,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 61,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 110,
                            "name": "SchemaName"
                          }
                        ],
                        "name": "SupabaseClientOptions",
                        "dereferenced": {
                          "id": 61,
                          "name": "SupabaseClientOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 10,
                              "character": 12
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 80,
                              "name": "SchemaName",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 62,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 66,
                                  "name": "auth",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 18,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 67,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 68,
                                          "name": "autoRefreshToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 22,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 74,
                                          "name": "debug",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 46,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 71,
                                          "name": "detectSessionInUrl",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 34,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 73,
                                          "name": "flowType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 42,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "flowType"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 59,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 70,
                                          "name": "persistSession",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 30,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 72,
                                          "name": "storage",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A storage provider. Used to store the logged-in session."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 38,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "storage"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 59,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 69,
                                          "name": "storageKey",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional key name used for storing tokens in local storage."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 26,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [68, 74, 71, 73, 70, 72, 69]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 18,
                                          "character": 9
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 63,
                                  "name": "db",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 14,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 64,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 65,
                                          "name": "schema",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 15,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 80,
                                            "name": "SchemaName",
                                            "dereferenced": {}
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [65]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 14,
                                          "character": 7
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 76,
                                  "name": "global",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 52,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 77,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 78,
                                          "name": "fetch",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom `fetch` implementation."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 56,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 60,
                                            "name": "Fetch",
                                            "dereferenced": {
                                              "id": 60,
                                              "name": "Fetch",
                                              "kind": 4194304,
                                              "kindString": "Type alias",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 8,
                                                  "character": 12
                                                }
                                              ],
                                              "type": {
                                                "type": "query",
                                                "queryType": {
                                                  "type": "reference",
                                                  "id": 18,
                                                  "qualifiedName": "fetch",
                                                  "package": "typescript",
                                                  "name": "fetch"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 79,
                                          "name": "headers",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional headers for initializing the client."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 60,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ],
                                            "qualifiedName": "Record",
                                            "package": "typescript",
                                            "name": "Record"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [78, 79]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 52,
                                          "character": 11
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 75,
                                  "name": "realtime",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Options passed to the realtime-js instance"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 51,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RealtimeClientOptions",
                                    "package": "@supabase/realtime-js",
                                    "name": "RealtimeClientOptions"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [66, 63, 76, 75]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 10,
                                  "character": 48
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 106,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 109,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 110,
                        "name": "SchemaName"
                      },
                      {
                        "type": "reference",
                        "id": 111,
                        "name": "Schema"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 115,
              "name": "auth",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies."
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 55,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "name": "SupabaseAuthClient"
              }
            },
            {
              "id": 118,
              "name": "authUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 59,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 128,
              "name": "changedAccessToken",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 65,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 123,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 64,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 124,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 125,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 126,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 127,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 120,
              "name": "functionsUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 61,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 129,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 67,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 130,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": {
                    "id": 131,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 132,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              }
            },
            {
              "id": 116,
              "name": "realtime",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "RealtimeClient",
                "package": "@supabase/realtime-js",
                "name": "default"
              }
            },
            {
              "id": 117,
              "name": "realtimeUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 58,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 121,
              "name": "rest",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 62,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 109,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 110,
                    "name": "SchemaName"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 110,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 109,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "qualifiedName": "GenericSchema",
                      "package": "@supabase/postgrest-js",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "qualifiedName": "PostgrestClient",
                "package": "@supabase/postgrest-js",
                "name": "default"
              }
            },
            {
              "id": 122,
              "name": "storageKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 63,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 119,
              "name": "storageUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 60,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 134,
              "name": "supabaseKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 133,
              "name": "supabaseUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 135,
              "name": "functions",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 132,
                  "character": 6
                }
              ],
              "getSignature": [
                {
                  "id": 136,
                  "name": "functions",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Supabase Functions allows you to deploy and invoke edge functions."
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "FunctionsClient",
                    "package": "@supabase/functions-js",
                    "name": "FunctionsClient"
                  }
                }
              ]
            },
            {
              "id": 137,
              "name": "storage",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 142,
                  "character": 6
                }
              ],
              "getSignature": [
                {
                  "id": 138,
                  "name": "storage",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Supabase Storage allows you to manage user-generated content, such as photos or videos."
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "StorageClient",
                    "package": "@supabase/storage-js",
                    "name": "StorageClient"
                  }
                }
              ]
            },
            {
              "id": 177,
              "name": "_getAccessToken",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 259,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 178,
                  "name": "_getAccessToken",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 194,
              "name": "_handleTokenChanged",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 310,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 195,
                  "name": "_handleTokenChanged",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 196,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "AuthChangeEvent",
                        "package": "@supabase/gotrue-js",
                        "name": "AuthChangeEvent"
                      }
                    },
                    {
                      "id": 197,
                      "name": "source",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "CLIENT"
                          },
                          {
                            "type": "literal",
                            "value": "STORAGE"
                          }
                        ]
                      }
                    },
                    {
                      "id": 198,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 188,
              "name": "_initRealtimeClient",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 296,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 189,
                  "name": "_initRealtimeClient",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 190,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeClientOptions",
                        "package": "@supabase/realtime-js",
                        "name": "RealtimeClientOptions"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "RealtimeClient",
                    "package": "@supabase/realtime-js",
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 179,
              "name": "_initSupabaseAuthClient",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 265,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 180,
                  "name": "_initSupabaseAuthClient",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 181,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 59,
                        "name": "SupabaseAuthClientOptions",
                        "dereferenced": {
                          "id": 59,
                          "name": "SupabaseAuthClientOptions",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 6,
                              "character": 17
                            }
                          ],
                          "extendedTypes": [
                            {
                              "type": "reference",
                              "name": "GoTrueClientOptions"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 182,
                      "name": "headers",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 183,
                      "name": "fetch",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 184,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 185,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 186,
                                  "name": "input",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "URL",
                                        "package": "typescript",
                                        "name": "URL"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 187,
                                  "name": "init",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RequestInit",
                                    "package": "typescript",
                                    "name": "RequestInit"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "Response",
                                    "package": "typescript",
                                    "name": "Response"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "SupabaseAuthClient"
                  }
                }
              ]
            },
            {
              "id": 191,
              "name": "_listenForAuthEvents",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 303,
                  "character": 10
                }
              ],
              "signatures": [
                {
                  "id": 192,
                  "name": "_listenForAuthEvents",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 193,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                }
              ]
            },
            {
              "id": 166,
              "name": "channel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 231,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 167,
                  "name": "channel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a Realtime channel with Broadcast, Presence, and Postgres Changes."
                  },
                  "parameters": [
                    {
                      "id": 168,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The name of the Realtime channel."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 169,
                      "name": "opts",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The options to pass to the Realtime channel.\n\n"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeChannelOptions",
                        "package": "@supabase/realtime-js",
                        "name": "RealtimeChannelOptions"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 139,
              "name": "from",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 146,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 140,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a table or a view."
                  },
                  "typeParameter": [
                    {
                      "id": 141,
                      "name": "TableName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 142,
                      "name": "Table",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 81,
                        "name": "GenericTable"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 143,
                      "name": "relation",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The table or view name to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 141,
                        "name": "TableName",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 111,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 142,
                        "name": "Table"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 142,
                          "name": "Table"
                        },
                        "extendsType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 144,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {}
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "qualifiedName": "R",
                          "package": "@supabase/postgrest-js",
                          "name": "R"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ],
                    "qualifiedName": "PostgrestQueryBuilder",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                },
                {
                  "id": 145,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a table or a view."
                  },
                  "typeParameter": [
                    {
                      "id": 146,
                      "name": "ViewName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 147,
                      "name": "View",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 94,
                        "name": "GenericView"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 148,
                      "name": "relation",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The table or view name to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 146,
                        "name": "ViewName",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 111,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 147,
                        "name": "View"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 147,
                          "name": "View"
                        },
                        "extendsType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 149,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {}
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "qualifiedName": "R",
                          "package": "@supabase/postgrest-js",
                          "name": "R"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ],
                    "qualifiedName": "PostgrestQueryBuilder",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                },
                {
                  "id": 150,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a table or a view."
                  },
                  "parameters": [
                    {
                      "id": 151,
                      "name": "relation",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The table or view name to query\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 111,
                        "name": "Schema"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "PostgrestQueryBuilder",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 170,
              "name": "getChannels",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 238,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 171,
                  "name": "getChannels",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns all Realtime channels."
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "qualifiedName": "RealtimeChannel",
                      "package": "@supabase/realtime-js",
                      "name": "default"
                    }
                  }
                }
              ]
            },
            {
              "id": 175,
              "name": "removeAllChannels",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 255,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 176,
                  "name": "removeAllChannels",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Unsubscribes and removes all Realtime channels from Realtime client."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "error"
                            },
                            {
                              "type": "literal",
                              "value": "ok"
                            },
                            {
                              "type": "literal",
                              "value": "timed out"
                            }
                          ]
                        }
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 172,
              "name": "removeChannel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 248,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 173,
                  "name": "removeChannel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Unsubscribes and removes Realtime channel from Realtime client."
                  },
                  "parameters": [
                    {
                      "id": 174,
                      "name": "channel",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The name of the Realtime channel.\n\n"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeChannel",
                        "package": "@supabase/realtime-js",
                        "name": "default"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "error"
                          },
                          {
                            "type": "literal",
                            "value": "ok"
                          },
                          {
                            "type": "literal",
                            "value": "timed out"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 156,
              "name": "rpc",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 202,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 157,
                  "name": "rpc",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a function call."
                  },
                  "typeParameter": [
                    {
                      "id": 158,
                      "name": "FunctionName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 159,
                      "name": "Function_",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 95,
                        "name": "GenericFunction"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 160,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The function name to call"
                      },
                      "type": {
                        "type": "reference",
                        "id": 158,
                        "name": "FunctionName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 161,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The arguments to pass to the function call"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Args"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 159,
                          "name": "Function_"
                        }
                      },
                      "defaultValue": "{}"
                    },
                    {
                      "id": 162,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 163,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 165,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/SupabaseClient.ts",
                                  "line": 210,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 164,
                              "name": "head",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count."
                              },
                              "sources": [
                                {
                                  "fileName": "src/SupabaseClient.ts",
                                  "line": 209,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [165, 164]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 111,
                        "name": "Schema"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "literal",
                            "value": "Returns"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 159,
                            "name": "Function_"
                          }
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "trueType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "objectType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "intrinsic",
                                "name": "any"
                              },
                              "objectType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          },
                          "extendsType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          },
                          "trueType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "intrinsic",
                              "name": "any"
                            },
                            "objectType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Returns"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 159,
                          "name": "Function_"
                        }
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "PostgrestFilterBuilder",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 152,
              "name": "schema",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 171,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 153,
                  "name": "schema",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a schema distinct from the default schema supplied via\nthe `options.db.schema` constructor parameter.",
                    "text": "The schema needs to be on the list of exposed schemas inside Supabase.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 154,
                      "name": "DynamicSchema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 155,
                      "name": "schema",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The name of the schema to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 154,
                        "name": "DynamicSchema",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 109,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "DynamicSchema"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 154,
                            "name": "DynamicSchema"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 109,
                            "name": "Database"
                          }
                        },
                        "extendsType": {
                          "type": "reference",
                          "id": 99,
                          "name": "GenericSchema"
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    ],
                    "qualifiedName": "PostgrestClient",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [107]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [115, 118, 128, 123, 120, 129, 116, 117, 121, 122, 119, 134, 133]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [135, 137]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [177, 194, 188, 179, 191, 166, 139, 170, 175, 172, 156, 152]
            }
          ],
          "sources": [
            {
              "fileName": "src/SupabaseClient.ts",
              "line": 43,
              "character": 21
            }
          ],
          "typeParameter": [
            {
              "id": 199,
              "name": "Database",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 200,
              "name": "SchemaName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 109,
                      "name": "Database"
                    }
                  }
                ]
              },
              "default": {
                "type": "conditional",
                "checkType": {
                  "type": "literal",
                  "value": "public"
                },
                "extendsType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 109,
                    "name": "Database"
                  }
                },
                "trueType": {
                  "type": "literal",
                  "value": "public"
                },
                "falseType": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 109,
                        "name": "Database"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 201,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 99,
                "name": "GenericSchema"
              },
              "default": {
                "type": "conditional",
                "checkType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "id": 110,
                    "name": "SchemaName"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 109,
                    "name": "Database"
                  }
                },
                "extendsType": {
                  "type": "reference",
                  "id": 99,
                  "name": "GenericSchema"
                },
                "trueType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "id": 110,
                    "name": "SchemaName"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 109,
                    "name": "Database"
                  }
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          ]
        },
        {
          "id": 2,
          "name": "createClient",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 25,
              "character": 13
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "createClient",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new Supabase Client."
              },
              "typeParameter": [
                {
                  "id": 4,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 5,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 4,
                        "name": "Database"
                      }
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 4,
                            "name": "Database"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 6,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 99,
                    "name": "GenericSchema"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 5,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 4,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "id": 99,
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 7,
                  "name": "supabaseUrl",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 8,
                  "name": "supabaseKey",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 9,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 61,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 5,
                        "name": "SchemaName"
                      }
                    ],
                    "name": "SupabaseClientOptions",
                    "dereferenced": {
                      "id": 61,
                      "name": "SupabaseClientOptions",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 10,
                          "character": 12
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 80,
                          "name": "SchemaName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 62,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 66,
                              "name": "auth",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 18,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 67,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 68,
                                      "name": "autoRefreshToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 22,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 74,
                                      "name": "debug",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 46,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 71,
                                      "name": "detectSessionInUrl",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 34,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 73,
                                      "name": "flowType",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 42,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "flowType"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 70,
                                      "name": "persistSession",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 30,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 72,
                                      "name": "storage",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A storage provider. Used to store the logged-in session."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 38,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "storage"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 69,
                                      "name": "storageKey",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional key name used for storing tokens in local storage."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 26,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [68, 74, 71, 73, 70, 72, 69]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 18,
                                      "character": 9
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 63,
                              "name": "db",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 14,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 64,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 65,
                                      "name": "schema",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 80,
                                        "name": "SchemaName",
                                        "dereferenced": {}
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [65]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 14,
                                      "character": 7
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 76,
                              "name": "global",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 52,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 77,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 78,
                                      "name": "fetch",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom `fetch` implementation."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 56,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 60,
                                        "name": "Fetch",
                                        "dereferenced": {
                                          "id": 60,
                                          "name": "Fetch",
                                          "kind": 4194304,
                                          "kindString": "Type alias",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 8,
                                              "character": 12
                                            }
                                          ],
                                          "type": {
                                            "type": "query",
                                            "queryType": {
                                              "type": "reference",
                                              "id": 18,
                                              "qualifiedName": "fetch",
                                              "package": "typescript",
                                              "name": "fetch"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 79,
                                      "name": "headers",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional headers for initializing the client."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 60,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ],
                                        "qualifiedName": "Record",
                                        "package": "typescript",
                                        "name": "Record"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [78, 79]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 52,
                                      "character": 11
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 75,
                              "name": "realtime",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Options passed to the realtime-js instance"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 51,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RealtimeClientOptions",
                                "package": "@supabase/realtime-js",
                                "name": "RealtimeClientOptions"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [66, 63, 76, 75]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 10,
                              "character": 48
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 106,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 4,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 5,
                    "name": "SchemaName"
                  },
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [202]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [106]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [2]
        }
      ],
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 10,
      "name": "lib/constants",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 11,
          "name": "DEFAULT_HEADERS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/lib/constants.ts",
              "line": 3,
              "character": 13
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 12,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 13,
                  "name": "X-Client-Info",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/constants.ts",
                      "line": 3,
                      "character": 33
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "..."
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [13]
                }
              ]
            }
          },
          "defaultValue": "..."
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [11]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/constants.ts",
          "line": 2,
          "character": 0
        }
      ]
    },
    {
      "id": 14,
      "name": "lib/fetch",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 29,
          "name": "fetchWithAuth",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/fetch.ts",
              "line": 25,
              "character": 13
            }
          ],
          "signatures": [
            {
              "id": 30,
              "name": "fetchWithAuth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 31,
                  "name": "supabaseKey",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 32,
                  "name": "getAccessToken",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 33,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 34,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 35,
                  "name": "customFetch",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 36,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 37,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 38,
                              "name": "input",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "RequestInfo",
                                    "package": "typescript",
                                    "name": "RequestInfo"
                                  },
                                  {
                                    "type": "reference",
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 39,
                              "name": "init",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RequestInit",
                                "package": "typescript",
                                "name": "RequestInit"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Response",
                                "package": "typescript",
                                "name": "Response"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 40,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 41,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 42,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 43,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 15,
          "name": "resolveFetch",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/fetch.ts",
              "line": 5,
              "character": 13
            }
          ],
          "signatures": [
            {
              "id": 16,
              "name": "resolveFetch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 17,
                  "name": "customFetch",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 18,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 19,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 20,
                              "name": "input",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "RequestInfo",
                                    "package": "typescript",
                                    "name": "RequestInfo"
                                  },
                                  {
                                    "type": "reference",
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 21,
                              "name": "init",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RequestInit",
                                "package": "typescript",
                                "name": "RequestInit"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Response",
                                "package": "typescript",
                                "name": "Response"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 22,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 23,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 24,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 25,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 26,
          "name": "resolveHeadersConstructor",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/fetch.ts",
              "line": 17,
              "character": 13
            }
          ],
          "signatures": [
            {
              "id": 27,
              "name": "resolveHeadersConstructor",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 28,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [29, 15, 26]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/fetch.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 44,
      "name": "lib/helpers",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 50,
          "name": "applySettingDefaults",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/helpers.ts",
              "line": 18,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 51,
              "name": "applySettingDefaults",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 52,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 53,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 52,
                        "name": "Database"
                      }
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 52,
                            "name": "Database"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 54,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 61,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 53,
                        "name": "SchemaName"
                      }
                    ],
                    "name": "SupabaseClientOptions",
                    "dereferenced": {
                      "id": 61,
                      "name": "SupabaseClientOptions",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 10,
                          "character": 12
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 80,
                          "name": "SchemaName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 62,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 66,
                              "name": "auth",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 18,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 67,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 68,
                                      "name": "autoRefreshToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 22,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 74,
                                      "name": "debug",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 46,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 71,
                                      "name": "detectSessionInUrl",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 34,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 73,
                                      "name": "flowType",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 42,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "flowType"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 70,
                                      "name": "persistSession",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 30,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 72,
                                      "name": "storage",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A storage provider. Used to store the logged-in session."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 38,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "storage"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 69,
                                      "name": "storageKey",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional key name used for storing tokens in local storage."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 26,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [68, 74, 71, 73, 70, 72, 69]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 18,
                                      "character": 9
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 63,
                              "name": "db",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 14,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 64,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 65,
                                      "name": "schema",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 80,
                                        "name": "SchemaName",
                                        "dereferenced": {}
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [65]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 14,
                                      "character": 7
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 76,
                              "name": "global",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 52,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 77,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 78,
                                      "name": "fetch",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom `fetch` implementation."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 56,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 60,
                                        "name": "Fetch",
                                        "dereferenced": {
                                          "id": 60,
                                          "name": "Fetch",
                                          "kind": 4194304,
                                          "kindString": "Type alias",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 8,
                                              "character": 12
                                            }
                                          ],
                                          "type": {
                                            "type": "query",
                                            "queryType": {
                                              "type": "reference",
                                              "id": 18,
                                              "qualifiedName": "fetch",
                                              "package": "typescript",
                                              "name": "fetch"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 79,
                                      "name": "headers",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional headers for initializing the client."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 60,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ],
                                        "qualifiedName": "Record",
                                        "package": "typescript",
                                        "name": "Record"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [78, 79]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 52,
                                      "character": 11
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 75,
                              "name": "realtime",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Options passed to the realtime-js instance"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 51,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RealtimeClientOptions",
                                "package": "@supabase/realtime-js",
                                "name": "RealtimeClientOptions"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [66, 63, 76, 75]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 10,
                              "character": 48
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "id": 55,
                  "name": "defaults",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 61,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "SupabaseClientOptions",
                    "dereferenced": {
                      "id": 61,
                      "name": "SupabaseClientOptions",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 10,
                          "character": 12
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 80,
                          "name": "SchemaName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 62,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 66,
                              "name": "auth",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 18,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 67,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 68,
                                      "name": "autoRefreshToken",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 22,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 74,
                                      "name": "debug",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 46,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 71,
                                      "name": "detectSessionInUrl",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 34,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 73,
                                      "name": "flowType",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 42,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "flowType"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 70,
                                      "name": "persistSession",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 30,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 72,
                                      "name": "storage",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A storage provider. Used to store the logged-in session."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 38,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "indexedAccess",
                                        "indexType": {
                                          "type": "literal",
                                          "value": "storage"
                                        },
                                        "objectType": {
                                          "type": "reference",
                                          "id": 59,
                                          "name": "SupabaseAuthClientOptions"
                                        }
                                      }
                                    },
                                    {
                                      "id": 69,
                                      "name": "storageKey",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional key name used for storing tokens in local storage."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 26,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [68, 74, 71, 73, 70, 72, 69]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 18,
                                      "character": 9
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 63,
                              "name": "db",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 14,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 64,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 65,
                                      "name": "schema",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 80,
                                        "name": "SchemaName",
                                        "dereferenced": {}
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [65]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 14,
                                      "character": 7
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 76,
                              "name": "global",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 52,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 77,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 78,
                                      "name": "fetch",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom `fetch` implementation."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 56,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 60,
                                        "name": "Fetch",
                                        "dereferenced": {
                                          "id": 60,
                                          "name": "Fetch",
                                          "kind": 4194304,
                                          "kindString": "Type alias",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 8,
                                              "character": 12
                                            }
                                          ],
                                          "type": {
                                            "type": "query",
                                            "queryType": {
                                              "type": "reference",
                                              "id": 18,
                                              "qualifiedName": "fetch",
                                              "package": "typescript",
                                              "name": "fetch"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 79,
                                      "name": "headers",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Optional headers for initializing the client."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 60,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ],
                                        "qualifiedName": "Record",
                                        "package": "typescript",
                                        "name": "Record"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [78, 79]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 52,
                                      "character": 11
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 75,
                              "name": "realtime",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Options passed to the realtime-js instance"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 51,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RealtimeClientOptions",
                                "package": "@supabase/realtime-js",
                                "name": "RealtimeClientOptions"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [66, 63, 76, 75]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 10,
                              "character": 48
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 61,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 53,
                    "name": "SchemaName"
                  }
                ],
                "name": "SupabaseClientOptions"
              }
            }
          ]
        },
        {
          "id": 56,
          "name": "isBrowser",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/helpers.ts",
              "line": 16,
              "character": 13
            }
          ],
          "signatures": [
            {
              "id": 57,
              "name": "isBrowser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 47,
          "name": "stripTrailingSlash",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/helpers.ts",
              "line": 12,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 48,
              "name": "stripTrailingSlash",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 49,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 45,
          "name": "uuid",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/helpers.ts",
              "line": 4,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 46,
              "name": "uuid",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [50, 56, 47, 45]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/helpers.ts",
          "line": 2,
          "character": 0
        }
      ]
    },
    {
      "id": 58,
      "name": "lib/types",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 59,
          "name": "SupabaseAuthClientOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 6,
              "character": 17
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "GoTrueClientOptions"
            }
          ]
        },
        {
          "id": 60,
          "name": "Fetch",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 8,
              "character": 12
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "id": 18,
              "qualifiedName": "fetch",
              "package": "typescript",
              "name": "fetch"
            }
          }
        },
        {
          "id": 95,
          "name": "GenericFunction",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 82,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 96,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 97,
                  "name": "Args",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 83,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 98,
                  "name": "Returns",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 84,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [97, 98]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 82,
                  "character": 30
                }
              ]
            }
          }
        },
        {
          "id": 91,
          "name": "GenericNonUpdatableView",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 76,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 92,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 93,
                  "name": "Row",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 77,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [93]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 76,
                  "character": 38
                }
              ]
            }
          }
        },
        {
          "id": 99,
          "name": "GenericSchema",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 87,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 100,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 103,
                  "name": "Functions",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 90,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 95,
                        "name": "GenericFunction"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 101,
                  "name": "Tables",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 88,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 81,
                        "name": "GenericTable"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 102,
                  "name": "Views",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 89,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "id": 94,
                        "name": "GenericView"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [103, 101, 102]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 87,
                  "character": 28
                }
              ]
            }
          }
        },
        {
          "id": 81,
          "name": "GenericTable",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 64,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 82,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 84,
                  "name": "Insert",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 66,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 83,
                  "name": "Row",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 65,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 85,
                  "name": "Update",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 67,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [84, 83, 85]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 64,
                  "character": 27
                }
              ]
            }
          }
        },
        {
          "id": 86,
          "name": "GenericUpdatableView",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 70,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 87,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 89,
                  "name": "Insert",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 72,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 88,
                  "name": "Row",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 71,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 90,
                  "name": "Update",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 73,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [89, 88, 90]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 70,
                  "character": 35
                }
              ]
            }
          }
        },
        {
          "id": 94,
          "name": "GenericView",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 80,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 86,
                "name": "GenericUpdatableView",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 70,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 87,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 89,
                        "name": "Insert",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 72,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      },
                      {
                        "id": 88,
                        "name": "Row",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 71,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      },
                      {
                        "id": 90,
                        "name": "Update",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 73,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [89, 88, 90]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 70,
                        "character": 35
                      }
                    ]
                  }
                }
              },
              {
                "id": 91,
                "name": "GenericNonUpdatableView",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 76,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 92,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 93,
                        "name": "Row",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 77,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [93]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 76,
                        "character": 38
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 61,
          "name": "SupabaseClientOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 10,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 80,
              "name": "SchemaName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 62,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 66,
                  "name": "auth",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 18,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 67,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 68,
                          "name": "autoRefreshToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 22,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 74,
                          "name": "debug",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 46,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 71,
                          "name": "detectSessionInUrl",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 34,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 73,
                          "name": "flowType",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 42,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "flowType"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 59,
                              "name": "SupabaseAuthClientOptions"
                            }
                          }
                        },
                        {
                          "id": 70,
                          "name": "persistSession",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 30,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 72,
                          "name": "storage",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A storage provider. Used to store the logged-in session."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 38,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "storage"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 59,
                              "name": "SupabaseAuthClientOptions"
                            }
                          }
                        },
                        {
                          "id": 69,
                          "name": "storageKey",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Optional key name used for storing tokens in local storage."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 26,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [68, 74, 71, 73, 70, 72, 69]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 18,
                          "character": 9
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 63,
                  "name": "db",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 14,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 64,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 65,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 15,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 80,
                            "name": "SchemaName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [65]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 14,
                          "character": 7
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 76,
                  "name": "global",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 52,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 77,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 78,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom `fetch` implementation."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 56,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 60,
                            "name": "Fetch",
                            "dereferenced": {
                              "id": 60,
                              "name": "Fetch",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 8,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "query",
                                "queryType": {
                                  "type": "reference",
                                  "id": 18,
                                  "qualifiedName": "fetch",
                                  "package": "typescript",
                                  "name": "fetch"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 79,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Optional headers for initializing the client."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 60,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [78, 79]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 52,
                          "character": 11
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 75,
                  "name": "realtime",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Options passed to the realtime-js instance"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 51,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "RealtimeClientOptions",
                    "package": "@supabase/realtime-js",
                    "name": "RealtimeClientOptions"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [66, 63, 76, 75]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 10,
                  "character": 48
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [59]
        },
        {
          "title": "Type Aliases",
          "kind": 4194304,
          "children": [60, 95, 91, 99, 81, 86, 94, 61]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 104,
      "name": "lib/version",
      "kind": 2,
      "kindString": "Module",
      "flags": {},
      "children": [
        {
          "id": 105,
          "name": "version",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/lib/version.ts",
              "line": 1,
              "character": 13
            }
          ],
          "type": {
            "type": "literal",
            "value": "0.0.0-automated"
          },
          "defaultValue": "'0.0.0-automated'"
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [105]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/version.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 2,
      "children": [1, 10, 14, 44, 58, 104]
    }
  ]
}
