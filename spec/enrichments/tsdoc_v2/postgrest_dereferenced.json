{
  "id": 0,
  "name": "@supabase/postgrest-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 498,
      "name": "PostgrestBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {
        "isAbstract": true
      },
      "children": [
        {
          "id": 499,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 18,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 500,
              "name": "new PostgrestBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 501,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 502,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 498,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 501,
                        "name": "Result"
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 498,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": "[Circular ~.children.0.children]",
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [499]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [515, 507, 510, 505, 503, 506, 508, 509, 504]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [518, 516]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 5,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 530,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 401,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 531,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 501,
                                  "name": "Result"
                                }
                              ],
                              "name": "PostgrestResponse"
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 498,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 501,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 515,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 507,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 12,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 510,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 511,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 512,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 513,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 514,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 505,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 10,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 503,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 8,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          }
        },
        {
          "id": 506,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 11,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 508,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false"
        },
        {
          "id": 509,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          }
        },
        {
          "id": 504,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          }
        },
        {
          "id": 518,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 519,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 520,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 531,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 501,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 521,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 522,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 523,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 524,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 525,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 531,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 501,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 388,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 526,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 527,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 528,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 529,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 389,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 389,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 388,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 389,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "implementationOf": {
                "type": "reference",
                "name": "PromiseLike.then"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "name": "PromiseLike.then"
          }
        },
        {
          "id": 516,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 43,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 517,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "reference",
                "id": 498,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 501,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [499]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [515, 507, 510, 505, 503, 506, 508, 509, 504]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [518, 516]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestBuilder.ts",
          "line": 5,
          "character": 30
        }
      ],
      "typeParameter": [
        {
          "id": 530,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 401,
          "name": "PostgrestTransformBuilder"
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 531,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 501,
                  "name": "Result"
                }
              ],
              "name": "PostgrestResponse"
            }
          ],
          "qualifiedName": "PromiseLike",
          "package": "typescript",
          "name": "PromiseLike"
        }
      ]
    },
    {
      "id": 1,
      "name": "PostgrestClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "shortText": "PostgREST client."
      },
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 41,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new PostgrestClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a PostgREST client."
              },
              "typeParameter": [
                {
                  "id": 4,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 5,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 4,
                        "name": "Database"
                      }
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 4,
                            "name": "Database"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 6,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 5,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 4,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 7,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "URL of the PostgREST endpoint"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 8,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 9,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 12,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 50,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 13,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 14,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Custom fetch\n"
                                  },
                                  "parameters": [
                                    {
                                      "id": 15,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 16,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 10,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Custom headers"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 48,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 11,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Postgres schema to switch to"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 49,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 5,
                            "name": "SchemaName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [12, 10, 11]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 4,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 5,
                    "name": "SchemaName"
                  },
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 20,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 29,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 21,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 22,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 23,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 24,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 18,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 27,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 19,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 28,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 5,
            "name": "SchemaName",
            "dereferenced": {}
          }
        },
        {
          "id": 17,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 26,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 25,
          "name": "from",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 26,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a query on a table or a view."
              },
              "typeParameter": [
                {
                  "id": 27,
                  "name": "TableName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 28,
                  "name": "Table",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericTable"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 29,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table or view name to query\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 27,
                    "name": "TableName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 49,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 28,
                    "name": "Table"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 30,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a query on a table or a view."
              },
              "typeParameter": [
                {
                  "id": 31,
                  "name": "ViewName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 32,
                  "name": "View",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericView"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 33,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table or view name to query\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 31,
                    "name": "ViewName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 49,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 32,
                    "name": "View"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 34,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a query on a table or a view."
              },
              "parameters": [
                {
                  "id": 35,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table or view name to query\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 49,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 36,
          "name": "rpc",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 102,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 37,
              "name": "rpc",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a function call."
              },
              "typeParameter": [
                {
                  "id": 38,
                  "name": "FunctionName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 39,
                  "name": "Function_",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericFunction"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 40,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The function name to call"
                  },
                  "type": {
                    "type": "reference",
                    "id": 38,
                    "name": "FunctionName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 41,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The arguments to pass to the function call"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Args"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 39,
                      "name": "Function_"
                    }
                  },
                  "defaultValue": "{}"
                },
                {
                  "id": 42,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 43,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 45,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 113,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 44,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 112,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [45, 44]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 6,
                    "name": "Schema"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "Returns"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 39,
                        "name": "Function_"
                      }
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "objectType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      },
                      "extendsType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      "trueType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        "objectType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Returns"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 39,
                      "name": "Function_"
                    }
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [2]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [20, 18, 19, 17]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [25, 36]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestClient.ts",
          "line": 17,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 46,
          "name": "Database",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Types for the schema from the [type\ngenerator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n"
          },
          "default": {
            "type": "intrinsic",
            "name": "any"
          }
        },
        {
          "id": 47,
          "name": "SchemaName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Postgres schema to switch to. Must be a string\nliteral, the same one passed to the constructor. If the schema is not\n`\"public\"`, this must be supplied manually.\n"
          },
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "id": 4,
                  "name": "Database"
                }
              }
            ]
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "literal",
              "value": "public"
            },
            "extendsType": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "id": 4,
                "name": "Database"
              }
            },
            "trueType": {
              "type": "literal",
              "value": "public"
            },
            "falseType": {
              "type": "intersection",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 4,
                    "name": "Database"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 48,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 5,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "id": 4,
                "name": "Database"
              }
            },
            "extendsType": {
              "type": "reference",
              "name": "GenericSchema"
            },
            "trueType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 5,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "id": 4,
                "name": "Database"
              }
            },
            "falseType": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      ]
    },
    {
      "id": 112,
      "name": "PostgrestFilterBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 113,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 114,
              "name": "new PostgrestFilterBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 115,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 116,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 117,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 118,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 498,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 117,
                        "name": "Result"
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 498,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": [
                        {
                          "id": 499,
                          "name": "constructor",
                          "kind": 512,
                          "kindString": "Constructor",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 18,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 500,
                              "name": "new PostgrestBuilder",
                              "kind": 16384,
                              "kindString": "Constructor signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 501,
                                  "name": "Result",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 502,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 498,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 501,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "default",
                                    "dereferenced": "[Circular ~.children.2.children.0.signatures.0.parameters.0.type.dereferenced]"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 498,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 501,
                                    "name": "Result"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 515,
                          "name": "allowEmpty",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 16,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 507,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 12,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 510,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 511,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 512,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 513,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 514,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 505,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 10,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 503,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 8,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 506,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 11,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 508,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 13,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        },
                        {
                          "id": 509,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 14,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript",
                            "name": "AbortSignal"
                          }
                        },
                        {
                          "id": 504,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 9,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        },
                        {
                          "id": 518,
                          "name": "then",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 48,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 519,
                              "name": "then",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 520,
                                  "name": "TResult1",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "reference",
                                    "id": 531,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 501,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                },
                                {
                                  "id": 521,
                                  "name": "TResult2",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "intrinsic",
                                    "name": "never"
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 522,
                                  "name": "onfulfilled",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 523,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 524,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 525,
                                                  "name": "value",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "reference",
                                                    "id": 531,
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 501,
                                                        "name": "Result"
                                                      }
                                                    ],
                                                    "name": "PostgrestResponse"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 388,
                                                    "name": "TResult1"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 388,
                                                        "name": "TResult1"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 526,
                                  "name": "onrejected",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 527,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 528,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 529,
                                                  "name": "reason",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 389,
                                                    "name": "TResult2"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 389,
                                                        "name": "TResult2"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 389,
                                        "name": "TResult2"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "PromiseLike",
                                "package": "typescript",
                                "name": "PromiseLike"
                              },
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            }
                          ],
                          "implementationOf": {
                            "type": "reference",
                            "name": "PromiseLike.then"
                          }
                        },
                        {
                          "id": 516,
                          "name": "throwOnError",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 43,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 517,
                              "name": "throwOnError",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                              },
                              "type": {
                                "type": "reference",
                                "id": 498,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 501,
                                    "name": "Result"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [499]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [515, 507, 510, 505, 503, 506, 508, 509, 504]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [518, 516]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 5,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 530,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 401,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 531,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 501,
                                  "name": "Result"
                                }
                              ],
                              "name": "PostgrestResponse"
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 403,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 402,
            "name": "default.constructor"
          }
        },
        {
          "id": 383,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 480,
            "name": "default.allowEmpty"
          }
        },
        {
          "id": 375,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 12,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 472,
            "name": "default.body"
          }
        },
        {
          "id": 378,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 379,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 380,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 381,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 382,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 475,
            "name": "default.fetch"
          }
        },
        {
          "id": 373,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 10,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 470,
            "name": "default.headers"
          }
        },
        {
          "id": 371,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 8,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 468,
            "name": "default.method"
          }
        },
        {
          "id": 374,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 11,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 471,
            "name": "default.schema"
          }
        },
        {
          "id": 376,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 473,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 377,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 474,
            "name": "default.signal"
          }
        },
        {
          "id": 372,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 469,
            "name": "default.url"
          }
        },
        {
          "id": 345,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 130,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 346,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the AbortSignal for the fetch request."
              },
              "parameters": [
                {
                  "id": 347,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The AbortSignal to use for the fetch request\n"
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 443,
                "name": "default.abortSignal"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 442,
            "name": "default.abortSignal"
          }
        },
        {
          "id": 207,
          "name": "containedBy",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 209,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 208,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
              },
              "typeParameter": [
                {
                  "id": 209,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 210,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 209,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 211,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 209,
                            "name": "ColumnName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 116,
                            "name": "Row"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 212,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
              },
              "parameters": [
                {
                  "id": 213,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 214,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 199,
          "name": "contains",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 182,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 200,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
              },
              "typeParameter": [
                {
                  "id": 201,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 202,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 201,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 203,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 201,
                            "name": "ColumnName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 116,
                            "name": "Row"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 204,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
              },
              "parameters": [
                {
                  "id": 205,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 206,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 352,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 161,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 353,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a string in CSV format."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 450,
                "name": "default.csv"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 449,
            "name": "default.csv"
          }
        },
        {
          "id": 119,
          "name": "eq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 33,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 120,
              "name": "eq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is equal to `value`.",
                "text": "To check if the value of `column` is NULL, you should use `.is()` instead.\n"
              },
              "typeParameter": [
                {
                  "id": 121,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 122,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 121,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 123,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 121,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 124,
              "name": "eq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is equal to `value`.",
                "text": "To check if the value of `column` is NULL, you should use `.is()` instead.\n"
              },
              "parameters": [
                {
                  "id": 125,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 126,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 356,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 195,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 357,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as the EXPLAIN plan for the query."
              },
              "parameters": [
                {
                  "id": 358,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 359,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 360,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 203,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 363,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on buffer usage\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 206,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 365,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 208,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 362,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 205,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 361,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 204,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 364,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on WAL record generation\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 207,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [360, 363, 365, 362, 361, 364]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "PostgrestSingleResponse"
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 531,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        ],
                        "name": "PostgrestResponse"
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 454,
                "name": "default.explain"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 453,
            "name": "default.explain"
          }
        },
        {
          "id": 301,
          "name": "filter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 428,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 302,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "typeParameter": [
                {
                  "id": 303,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 304,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 303,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 305,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with, following PostgREST syntax"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "FilterOperator"
                      },
                      {
                        "type": "literal",
                        "value": "not.eq"
                      },
                      {
                        "type": "literal",
                        "value": "not.neq"
                      },
                      {
                        "type": "literal",
                        "value": "not.gt"
                      },
                      {
                        "type": "literal",
                        "value": "not.gte"
                      },
                      {
                        "type": "literal",
                        "value": "not.lt"
                      },
                      {
                        "type": "literal",
                        "value": "not.lte"
                      },
                      {
                        "type": "literal",
                        "value": "not.like"
                      },
                      {
                        "type": "literal",
                        "value": "not.ilike"
                      },
                      {
                        "type": "literal",
                        "value": "not.is"
                      },
                      {
                        "type": "literal",
                        "value": "not.in"
                      },
                      {
                        "type": "literal",
                        "value": "not.cs"
                      },
                      {
                        "type": "literal",
                        "value": "not.cd"
                      },
                      {
                        "type": "literal",
                        "value": "not.sl"
                      },
                      {
                        "type": "literal",
                        "value": "not.sr"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxl"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxr"
                      },
                      {
                        "type": "literal",
                        "value": "not.adj"
                      },
                      {
                        "type": "literal",
                        "value": "not.ov"
                      },
                      {
                        "type": "literal",
                        "value": "not.fts"
                      },
                      {
                        "type": "literal",
                        "value": "not.plfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.phfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.wfts"
                      }
                    ]
                  }
                },
                {
                  "id": 306,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 307,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "parameters": [
                {
                  "id": 308,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 309,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with, following PostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 310,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 354,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 169,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 355,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 452,
                "name": "default.geojson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 451,
            "name": "default.geojson"
          }
        },
        {
          "id": 135,
          "name": "gt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 61,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 136,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than `value`."
              },
              "typeParameter": [
                {
                  "id": 137,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 138,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 137,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 139,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 137,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 140,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than `value`."
              },
              "parameters": [
                {
                  "id": 141,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 142,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 143,
          "name": "gte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 74,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 144,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than or equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 145,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 146,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 145,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 147,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 145,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 148,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than or equal to `value`."
              },
              "parameters": [
                {
                  "id": 149,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 150,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 175,
          "name": "ilike",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 126,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 176,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
              },
              "typeParameter": [
                {
                  "id": 177,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 178,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 179,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 180,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
              },
              "parameters": [
                {
                  "id": 181,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 182,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 191,
          "name": "in",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 161,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 192,
              "name": "in",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is included in the `values` array."
              },
              "typeParameter": [
                {
                  "id": 193,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 194,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 193,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 195,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values array to filter with\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 193,
                        "name": "ColumnName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 116,
                        "name": "Row"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 196,
              "name": "in",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is included in the `values` array."
              },
              "parameters": [
                {
                  "id": 197,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 198,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values array to filter with\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 183,
          "name": "is",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 139,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 184,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` IS `value`.",
                "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
              },
              "typeParameter": [
                {
                  "id": 185,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 186,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 185,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 187,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 185,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 116,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ]
                      },
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 185,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 116,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ]
                      },
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 185,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 116,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": true
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 188,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` IS `value`.",
                "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
              },
              "parameters": [
                {
                  "id": 189,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 190,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 167,
          "name": "like",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 113,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 168,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
              },
              "typeParameter": [
                {
                  "id": 169,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 170,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 169,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 171,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 172,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
              },
              "parameters": [
                {
                  "id": 173,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 174,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 332,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 101,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 333,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `count`."
              },
              "parameters": [
                {
                  "id": 334,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The maximum number of rows to return"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 335,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 336,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 337,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of foreign tables\ninstead of the current table\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 101,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [337]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 430,
                "name": "default.limit"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 429,
            "name": "default.limit"
          }
        },
        {
          "id": 151,
          "name": "lt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 87,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 152,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than `value`."
              },
              "typeParameter": [
                {
                  "id": 153,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 154,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 153,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 155,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 153,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 156,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than `value`."
              },
              "parameters": [
                {
                  "id": 157,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 158,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 159,
          "name": "lte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 100,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 160,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than or equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 161,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 162,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 161,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 163,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 161,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 164,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than or equal to `value`."
              },
              "parameters": [
                {
                  "id": 165,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 166,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 279,
          "name": "match",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 369,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 280,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
              },
              "typeParameter": [
                {
                  "id": 281,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 282,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 281,
                        "name": "ColumnName"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 281,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 116,
                          "name": "Row"
                        }
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 283,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
              },
              "parameters": [
                {
                  "id": 284,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 350,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 152,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 351,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 535,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 117,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestMaybeSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 448,
                "name": "default.maybeSingle"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 447,
            "name": "default.maybeSingle"
          }
        },
        {
          "id": 127,
          "name": "neq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 128,
              "name": "neq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is not equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 129,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 130,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 129,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 131,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 129,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 132,
              "name": "neq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is not equal to `value`."
              },
              "parameters": [
                {
                  "id": 133,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 134,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 285,
          "name": "not",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 385,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 286,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which doesn't satisfy the filter.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "typeParameter": [
                {
                  "id": 287,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 288,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 287,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 289,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                  },
                  "type": {
                    "type": "reference",
                    "name": "FilterOperator"
                  }
                },
                {
                  "id": 290,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 287,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 116,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 291,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which doesn't satisfy the filter.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "parameters": [
                {
                  "id": 292,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 293,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 294,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 295,
          "name": "or",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 422,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 296,
              "name": "or",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy at least one of the filters.",
                "text": "Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure it's properly sanitized.\n\nIt's currently not possible to do an `.or()` filter across multiple tables.\n"
              },
              "parameters": [
                {
                  "id": 297,
                  "name": "filters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The filters to use, following PostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 298,
                  "name": "foreignTable",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Set this to filter on foreign tables instead of the\ncurrent table\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 299,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 300,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 422,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [300]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 316,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 49,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 317,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order foreign tables, but it doesn't affect the ordering of the\ncurrent table.\n"
              },
              "typeParameter": [
                {
                  "id": 318,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 319,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 318,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 320,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 321,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 322,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 324,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a foreign table by foreign\ncolumns\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 323,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [322, 324, 323]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 414,
                "name": "default.order"
              }
            },
            {
              "id": 325,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order foreign tables, but it doesn't affect the ordering of the\ncurrent table.\n"
              },
              "parameters": [
                {
                  "id": 326,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 327,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 328,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 329,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 331,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Set this to order a foreign table by foreign\ncolumns\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 330,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [329, 331, 330]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 422,
                "name": "default.order"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 413,
            "name": "default.order"
          }
        },
        {
          "id": 255,
          "name": "overlaps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 308,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 256,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
              },
              "typeParameter": [
                {
                  "id": 257,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 258,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 257,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 259,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 257,
                            "name": "ColumnName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 116,
                            "name": "Row"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 260,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
              },
              "parameters": [
                {
                  "id": 261,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 262,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 338,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 116,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 339,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `from` and `to` inclusively."
              },
              "parameters": [
                {
                  "id": 340,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The starting index from which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 341,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The last index to which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 342,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 343,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 344,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of foreign tables\ninstead of the current table\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 116,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [344]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 436,
                "name": "default.range"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 435,
            "name": "default.range"
          }
        },
        {
          "id": 247,
          "name": "rangeAdjacent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 293,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 248,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
              },
              "typeParameter": [
                {
                  "id": 249,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 250,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 249,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 251,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 252,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
              },
              "parameters": [
                {
                  "id": 253,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 254,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 215,
          "name": "rangeGt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 235,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 216,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
              },
              "typeParameter": [
                {
                  "id": 217,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 218,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 217,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 219,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 220,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
              },
              "parameters": [
                {
                  "id": 221,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 222,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 223,
          "name": "rangeGte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 249,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 224,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
              },
              "typeParameter": [
                {
                  "id": 225,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 226,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 225,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 227,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 228,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
              },
              "parameters": [
                {
                  "id": 229,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 230,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 231,
          "name": "rangeLt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 264,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 232,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
              },
              "typeParameter": [
                {
                  "id": 233,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 234,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 233,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 235,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 236,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
              },
              "parameters": [
                {
                  "id": 237,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 238,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 239,
          "name": "rangeLte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 278,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 240,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
              },
              "typeParameter": [
                {
                  "id": 241,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 242,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 241,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 243,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 244,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
              },
              "parameters": [
                {
                  "id": 245,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 246,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 368,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 249,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 369,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Override the type of the returned `data`."
              },
              "typeParameter": [
                {
                  "id": 370,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The new result type to override with\n"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 370,
                    "name": "NewResult"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 466,
                "name": "default.returns"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 465,
            "name": "default.returns"
          }
        },
        {
          "id": 366,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 235,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 367,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Rollback the query.",
                "text": "`data` will still be returned, but the query is not committed.\n"
              },
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 464,
                "name": "default.rollback"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 463,
            "name": "default.rollback"
          }
        },
        {
          "id": 311,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 24,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 312,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT on the query result.",
                "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
              },
              "typeParameter": [
                {
                  "id": 313,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 314,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 115,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 116,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 313,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 315,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 313,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 314,
                    "name": "NewResult"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 409,
                "name": "default.select"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 408,
            "name": "default.select"
          }
        },
        {
          "id": 348,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 141,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 349,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 117,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 446,
                "name": "default.single"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 445,
            "name": "default.single"
          }
        },
        {
          "id": 263,
          "name": "textSearch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 331,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 264,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
              },
              "typeParameter": [
                {
                  "id": 265,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 266,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text or tsvector column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 265,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 267,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The query text to match with"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 268,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 269,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 270,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The text search configuration to use"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 334,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 271,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Change how the `query` text is interpreted\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 334,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [270, 271]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 272,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
              },
              "parameters": [
                {
                  "id": 273,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text or tsvector column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 274,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The query text to match with"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 275,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 276,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 277,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The text search configuration to use"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 339,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 278,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Change how the `query` text is interpreted\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 339,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [277, 278]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 386,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 387,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 388,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 531,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 117,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 389,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 390,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 391,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 392,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 393,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 531,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 117,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 388,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 394,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 395,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 396,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 397,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 389,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 389,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 388,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 389,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 484,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 483,
            "name": "default.then"
          }
        },
        {
          "id": 384,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 43,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 385,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 115,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 116,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 117,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 482,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 481,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [113]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [383, 375, 378, 373, 371, 374, 376, 377, 372]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            345, 207, 199, 352, 119, 356, 301, 354, 135, 143, 175, 191, 183, 167, 332, 151, 159,
            279, 350, 127, 285, 295, 316, 255, 338, 247, 215, 223, 231, 239, 368, 366, 311, 348,
            263, 386, 384
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestFilterBuilder.ts",
          "line": 28,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 398,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 399,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 400,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 401,
          "typeArguments": [
            {
              "type": "reference",
              "id": 115,
              "name": "Schema"
            },
            {
              "type": "reference",
              "id": 116,
              "name": "Row"
            },
            {
              "type": "reference",
              "id": 117,
              "name": "Result"
            }
          ],
          "name": "default"
        }
      ]
    },
    {
      "id": 49,
      "name": "PostgrestQueryBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 50,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 16,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 51,
              "name": "new PostgrestQueryBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 52,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 53,
                  "name": "Relation",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "GenericTable"
                      },
                      {
                        "type": "reference",
                        "name": "GenericView"
                      }
                    ]
                  }
                }
              ],
              "parameters": [
                {
                  "id": 54,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "qualifiedName": "URL",
                    "package": "typescript",
                    "name": "URL"
                  }
                },
                {
                  "id": 55,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 56,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 59,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 25,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 60,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 61,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 62,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 63,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 57,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 23,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 58,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 24,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [59, 57, 58]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 49,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 53,
                    "name": "Relation"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 68,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 69,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 70,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 71,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 72,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 65,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 66,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 67,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 13,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          }
        },
        {
          "id": 64,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 10,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          }
        },
        {
          "id": 105,
          "name": "delete",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 296,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 106,
              "name": "delete",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a DELETE on the table or view.",
                "text": "By default, deleted rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
              },
              "parameters": [
                {
                  "id": 107,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 108,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 109,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count deleted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 299,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [109]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 82,
          "name": "insert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 117,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 83,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an INSERT into the table or view.",
                "text": "By default, inserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 84,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 85,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 84,
                        "name": "Row"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 84,
                          "name": "Row"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 86,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 87,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 88,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count inserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 122,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [88]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 73,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 74,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT query on the table or view."
              },
              "typeParameter": [
                {
                  "id": 75,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 76,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 52,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 53,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 75,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 77,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 75,
                    "name": "Query",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 78,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 79,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 81,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count rows in the table or view.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 62,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 80,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 61,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [81, 80]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 98,
          "name": "update",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 247,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 99,
              "name": "update",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an UPDATE on the table or view.",
                "text": "By default, updated rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
              },
              "typeParameter": [
                {
                  "id": 100,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 101,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to update with\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 100,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 102,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 103,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 104,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count updated rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 252,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [104]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 89,
          "name": "upsert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 189,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 90,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto `onConflict`, `.upsert()` allows you to perform the equivalent of\n`.insert()` if a row with the corresponding `onConflict` columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n`ignoreDuplicates`.",
                "text": "By default, upserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 91,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 92,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 91,
                        "name": "Row"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 91,
                          "name": "Row"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 93,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 94,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 97,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count upserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 198,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 96,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, duplicate rows are ignored. If\n`false`, duplicate rows are merged with existing rows.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 197,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 95,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n`onConflict` columns are equal.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 196,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [97, 96, 95]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 112,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [50]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [68, 65, 66, 67, 64]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [105, 82, 73, 98, 89]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestQueryBuilder.ts",
          "line": 6,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 110,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 111,
          "name": "Relation",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "GenericTable"
              },
              {
                "type": "reference",
                "name": "GenericView"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 401,
      "name": "PostgrestTransformBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 402,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 403,
              "name": "new PostgrestTransformBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 404,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 405,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 406,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 407,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 498,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 406,
                        "name": "Result"
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 498,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": [
                        {
                          "id": 499,
                          "name": "constructor",
                          "kind": 512,
                          "kindString": "Constructor",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 18,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 500,
                              "name": "new PostgrestBuilder",
                              "kind": 16384,
                              "kindString": "Constructor signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 501,
                                  "name": "Result",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 502,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 498,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 501,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "default",
                                    "dereferenced": "[Circular ~.children.4.children.0.signatures.0.parameters.0.type.dereferenced]"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 498,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 501,
                                    "name": "Result"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 515,
                          "name": "allowEmpty",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 16,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 507,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 12,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 510,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 511,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 512,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 513,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 514,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 505,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 10,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 503,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 8,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 506,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 11,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 508,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 13,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        },
                        {
                          "id": 509,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 14,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript",
                            "name": "AbortSignal"
                          }
                        },
                        {
                          "id": 504,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 9,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        },
                        {
                          "id": 518,
                          "name": "then",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 48,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 519,
                              "name": "then",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 520,
                                  "name": "TResult1",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "reference",
                                    "id": 531,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 501,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                },
                                {
                                  "id": 521,
                                  "name": "TResult2",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "intrinsic",
                                    "name": "never"
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 522,
                                  "name": "onfulfilled",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 523,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 524,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 525,
                                                  "name": "value",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "reference",
                                                    "id": 531,
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 501,
                                                        "name": "Result"
                                                      }
                                                    ],
                                                    "name": "PostgrestResponse"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 388,
                                                    "name": "TResult1"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 388,
                                                        "name": "TResult1"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 526,
                                  "name": "onrejected",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 527,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 528,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 529,
                                                  "name": "reason",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 389,
                                                    "name": "TResult2"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 389,
                                                        "name": "TResult2"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 389,
                                        "name": "TResult2"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "PromiseLike",
                                "package": "typescript",
                                "name": "PromiseLike"
                              },
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            }
                          ],
                          "implementationOf": {
                            "type": "reference",
                            "name": "PromiseLike.then"
                          }
                        },
                        {
                          "id": 516,
                          "name": "throwOnError",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 43,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 517,
                              "name": "throwOnError",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                              },
                              "type": {
                                "type": "reference",
                                "id": 498,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 501,
                                    "name": "Result"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [499]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [515, 507, 510, 505, 503, 506, 508, 509, 504]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [518, 516]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 5,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 530,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 401,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 531,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 501,
                                  "name": "Result"
                                }
                              ],
                              "name": "PostgrestResponse"
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 500,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 499,
            "name": "default.constructor"
          }
        },
        {
          "id": 480,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 515,
            "name": "default.allowEmpty"
          }
        },
        {
          "id": 472,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 12,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 507,
            "name": "default.body"
          }
        },
        {
          "id": 475,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 476,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 477,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 478,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 479,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 510,
            "name": "default.fetch"
          }
        },
        {
          "id": 470,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 10,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 505,
            "name": "default.headers"
          }
        },
        {
          "id": 468,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 8,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 503,
            "name": "default.method"
          }
        },
        {
          "id": 471,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 11,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 506,
            "name": "default.schema"
          }
        },
        {
          "id": 473,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 508,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 474,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 509,
            "name": "default.signal"
          }
        },
        {
          "id": 469,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 9,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 504,
            "name": "default.url"
          }
        },
        {
          "id": 442,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 130,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 443,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the AbortSignal for the fetch request."
              },
              "parameters": [
                {
                  "id": 444,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The AbortSignal to use for the fetch request\n"
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 449,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 161,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 450,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a string in CSV format."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              }
            }
          ]
        },
        {
          "id": 453,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 195,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 454,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as the EXPLAIN plan for the query."
              },
              "parameters": [
                {
                  "id": 455,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 456,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 457,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 203,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 460,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on buffer usage\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 206,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 462,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 208,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 459,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 205,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 458,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 204,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 461,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on WAL record generation\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 207,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [457, 460, 462, 459, 458, 461]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "PostgrestSingleResponse"
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 531,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        ],
                        "name": "PostgrestResponse"
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 451,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 169,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 452,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              }
            }
          ]
        },
        {
          "id": 429,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 101,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 430,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `count`."
              },
              "parameters": [
                {
                  "id": 431,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The maximum number of rows to return"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 432,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 433,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 434,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of foreign tables\ninstead of the current table\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 101,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [434]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 447,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 152,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 448,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 535,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 406,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestMaybeSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              }
            }
          ]
        },
        {
          "id": 413,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 49,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 414,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order foreign tables, but it doesn't affect the ordering of the\ncurrent table.\n"
              },
              "typeParameter": [
                {
                  "id": 415,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 416,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 318,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 417,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 418,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 419,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 421,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a foreign table by foreign\ncolumns\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 420,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 51,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [419, 421, 420]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 422,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order foreign tables, but it doesn't affect the ordering of the\ncurrent table.\n"
              },
              "parameters": [
                {
                  "id": 423,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 424,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 425,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 426,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 428,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Set this to order a foreign table by foreign\ncolumns\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 427,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 55,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [426, 428, 427]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 435,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 116,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 436,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `from` and `to` inclusively."
              },
              "parameters": [
                {
                  "id": 437,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The starting index from which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 438,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The last index to which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 439,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 440,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 441,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of foreign tables\ninstead of the current table\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 116,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [441]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 465,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 249,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 466,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Override the type of the returned `data`."
              },
              "typeParameter": [
                {
                  "id": 467,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The new result type to override with\n"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 370,
                    "name": "NewResult"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 463,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 235,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 464,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Rollback the query.",
                "text": "`data` will still be returned, but the query is not committed.\n"
              },
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 408,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 24,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 409,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT on the query result.",
                "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
              },
              "typeParameter": [
                {
                  "id": 410,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 411,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 404,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 405,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 313,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 412,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 313,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 314,
                    "name": "NewResult"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 445,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 141,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 446,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 406,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              }
            }
          ]
        },
        {
          "id": 483,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 484,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 485,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 531,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 406,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 486,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 487,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 488,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 489,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 490,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 531,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 406,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 388,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 388,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 491,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 492,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 493,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 494,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 389,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 389,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 388,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 389,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 519,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 518,
            "name": "default.then"
          }
        },
        {
          "id": 481,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 43,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 482,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "reference",
                "id": 401,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 404,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 405,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 406,
                    "name": "Result"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 517,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 516,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [402]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [480, 472, 475, 470, 468, 471, 473, 474, 469]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [442, 449, 453, 451, 429, 447, 413, 435, 465, 463, 408, 445, 483, 481]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestTransformBuilder.ts",
          "line": 10,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 495,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 496,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 497,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 498,
          "typeArguments": [
            {
              "type": "reference",
              "id": 406,
              "name": "Result"
            }
          ],
          "name": "default"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 112,
          "name": "PostgrestFilterBuilder"
        }
      ]
    },
    {
      "id": 537,
      "name": "PostgrestError",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "Error format",
        "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
      },
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 8,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 538,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 542,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 12,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 540,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 10,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 541,
              "name": "hint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 539,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 9,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [542, 540, 541, 539]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 8,
              "character": 29
            }
          ]
        }
      }
    },
    {
      "id": 535,
      "name": "PostgrestMaybeSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 45,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 536,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 533,
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 536,
                "name": "T"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 531,
      "name": "PostgrestResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 35,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 532,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [null, null]
      }
    },
    {
      "id": 533,
      "name": "PostgrestSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 42,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 534,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [null, null]
      }
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [498, 1, 112, 49, 401]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [537, 535, 531, 533]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
