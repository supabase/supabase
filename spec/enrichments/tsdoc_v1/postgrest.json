{
  "id": 0,
  "name": "@supabase/postgrest-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 46,
      "name": "PostgrestBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {
        "isAbstract": true
      },
      "children": [
        {
          "id": 47,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 62,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 48,
              "name": "new PostgrestBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 49,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 50,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 46,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 49,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestBuilder"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 46,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 49,
                    "name": "T"
                  }
                ],
                "name": "PostgrestBuilder"
              }
            }
          ]
        },
        {
          "id": 66,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 60,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 58,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 56,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 49,
                    "name": "T"
                  }
                ],
                "qualifiedName": "Partial",
                "package": "typescript",
                "name": "Partial"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 49,
                      "name": "T"
                    }
                  ],
                  "qualifiedName": "Partial",
                  "package": "typescript",
                  "name": "Partial"
                }
              }
            ]
          }
        },
        {
          "id": 61,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 59,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 62,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 63,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 64,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInfo",
                        "package": "typescript",
                        "name": "RequestInfo"
                      }
                    },
                    {
                      "id": 65,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 53,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 54,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 54,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 55,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 56,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          }
        },
        {
          "id": 51,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 52,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          }
        },
        {
          "id": 57,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 55,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 59,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 57,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 60,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 58,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          }
        },
        {
          "id": 52,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 53,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          }
        },
        {
          "id": 70,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 91,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 71,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 72,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 425,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 49,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 73,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 74,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 75,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 76,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 77,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 425,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 49,
                                        "name": "T"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 72,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 72,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 78,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 79,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 80,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 81,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 73,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 73,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 73,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "implementationOf": {
                "type": "reference",
                "name": "PromiseLike.then"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "name": "PromiseLike.then"
          }
        },
        {
          "id": 67,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 83,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 68,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "parameters": [
                {
                  "id": 69,
                  "name": "throwOnError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 46,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 49,
                    "name": "T"
                  }
                ],
                "name": "PostgrestBuilder"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [47]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [66, 58, 61, 53, 51, 57, 59, 60, 52]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [70, 67]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 51,
          "character": 22
        }
      ],
      "typeParameter": [
        {
          "id": 82,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 83,
          "name": "PostgrestQueryBuilder"
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 425,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 49,
                  "name": "T"
                }
              ],
              "name": "PostgrestResponse"
            }
          ],
          "qualifiedName": "PromiseLike",
          "package": "typescript",
          "name": "PromiseLike"
        }
      ]
    },
    {
      "id": 1,
      "name": "PostgrestClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 21,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new PostgrestClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a PostgREST client."
              },
              "parameters": [
                {
                  "id": 4,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "URL of the PostgREST endpoint."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 5,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 6,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 12,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 31,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 13,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 14,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 15,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      }
                                    },
                                    {
                                      "id": 16,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 29,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 11,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 30,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 17,
                          "name": "throwOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 32,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [12, 7, 11, 17]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 24,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 25,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 26,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 27,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInfo",
                        "package": "typescript",
                        "name": "RequestInfo"
                      }
                    },
                    {
                      "id": 28,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 19,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 9,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 20,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 21,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 22,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          }
        },
        {
          "id": 23,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 10,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 29,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 18,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 8,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 30,
          "name": "auth",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 47,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 31,
              "name": "auth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Authenticates the request with JWT."
              },
              "parameters": [
                {
                  "id": 32,
                  "name": "token",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The JWT token to use.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 33,
          "name": "from",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a table operation."
              },
              "typeParameter": [
                {
                  "id": 35,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 36,
                  "name": "table",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table name to operate on.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 83,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 35,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 37,
          "name": "rpc",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 75,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 38,
              "name": "rpc",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a function call."
              },
              "typeParameter": [
                {
                  "id": 39,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 40,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The function name to call."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 41,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The parameters to pass to the function call."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 42,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 43,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 45,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 83,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 44,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 82,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [45, 44]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 39,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [2]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [24, 19, 23, 29, 18]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [30, 33, 37]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestClient.ts",
          "line": 7,
          "character": 21
        }
      ]
    },
    {
      "id": 177,
      "name": "PostgrestFilterBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 178,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 179,
              "name": "new PostgrestFilterBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 180,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 181,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 46,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestBuilder"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder<T>.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder<T>.constructor"
          }
        },
        {
          "id": 291,
          "name": "adj",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 328,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 292,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 293,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is adjacent to\nthe specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 294,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 295,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 408,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 60,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.allowEmpty"
          }
        },
        {
          "id": 400,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 56,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "qualifiedName": "Partial",
                "package": "typescript",
                "name": "Partial"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  ],
                  "qualifiedName": "Partial",
                  "package": "typescript",
                  "name": "Partial"
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.body"
          }
        },
        {
          "id": 246,
          "name": "cd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 253,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 247,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 248,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose json, array, or range value on the stated `column` is\ncontained by the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 249,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 250,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "object"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "reference",
                                  "id": 180,
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 180,
                                "name": "T"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 237,
          "name": "cs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 229,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 238,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 239,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose json, array, or range value on the stated `column`\ncontains the values specified in `value`."
                  },
                  "parameters": [
                    {
                      "id": 240,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 241,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "object"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "reference",
                                  "id": 180,
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 180,
                                "name": "T"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 403,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 59,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 404,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 405,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 406,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInfo",
                        "package": "typescript",
                        "name": "RequestInfo"
                      }
                    },
                    {
                      "id": 407,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.fetch"
          }
        },
        {
          "id": 395,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 54,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 396,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 397,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 398,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.headers"
          }
        },
        {
          "id": 393,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 52,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.method"
          }
        },
        {
          "id": 273,
          "name": "nxl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 298,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 274,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 275,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the left of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 276,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 277,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 282,
          "name": "nxr",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 313,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 283,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 284,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the right of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 285,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 286,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 300,
          "name": "ov",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 349,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 301,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 302,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose array or range value on the stated `column` overlaps\n(has a value in common) with the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 303,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 304,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "reference",
                                  "id": 180,
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 180,
                                "name": "T"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 399,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 55,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.schema"
          }
        },
        {
          "id": 401,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 57,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.shouldThrowOnError"
          }
        },
        {
          "id": 402,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 58,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.signal"
          }
        },
        {
          "id": 255,
          "name": "sl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 268,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 256,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 257,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is strictly to the\nleft of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 258,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 259,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 264,
          "name": "sr",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 283,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 265,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 266,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is strictly to\nthe right of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 267,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 268,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 177,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 394,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 53,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.url"
          }
        },
        {
          "id": 373,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 91,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 374,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sets the AbortSignal for the fetch request."
              },
              "parameters": [
                {
                  "id": 375,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.abortSignal"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.abortSignal"
          }
        },
        {
          "id": 242,
          "name": "containedBy",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 238,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 243,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose json, array, or range value on the stated `column` is\ncontained by the specified `value`."
              },
              "parameters": [
                {
                  "id": 244,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 245,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "object"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 180,
                              "name": "T"
                            }
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 180,
                            "name": "T"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 233,
          "name": "contains",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 213,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 234,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose json, array, or range value on the stated `column`\ncontains the values specified in `value`."
              },
              "parameters": [
                {
                  "id": 235,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 236,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "object"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 180,
                              "name": "T"
                            }
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 180,
                            "name": "T"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 380,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 119,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 381,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the response type to CSV."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 427,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.csv"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.csv"
          }
        },
        {
          "id": 193,
          "name": "eq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 85,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 194,
              "name": "eq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` exactly matches the\nspecified `value`."
              },
              "parameters": [
                {
                  "id": 195,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 196,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 384,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 141,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 385,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Obtains the EXPLAIN plan for this request."
              },
              "parameters": [
                {
                  "id": 386,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 387,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 388,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 148,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 391,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 151,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 390,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 150,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 389,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 149,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 392,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 152,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [388, 391, 390, 389, 392]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 425,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.explain"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.explain"
          }
        },
        {
          "id": 341,
          "name": "filter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 452,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 342,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose `column` satisfies the filter."
              },
              "parameters": [
                {
                  "id": 343,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 344,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with."
                  },
                  "type": {
                    "type": "reference",
                    "name": "FilterOperator"
                  }
                },
                {
                  "id": 345,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 313,
          "name": "fts",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 391,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 314,
              "name": "fts",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nto_tsquery(`query`).",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `textSearch()` instead.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 315,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 316,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The Postgres tsquery string to filter with."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 317,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text search configuration to use.\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 318,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 319,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 391,
                              "character": 52
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [319]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 382,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 127,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 383,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the response type to GeoJSON."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 427,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.geojson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.geojson"
          }
        },
        {
          "id": 201,
          "name": "gt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 109,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 202,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` is greater than the\nspecified `value`."
              },
              "parameters": [
                {
                  "id": 203,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 204,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 205,
          "name": "gte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 121,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 206,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` is greater than or\nequal to the specified `value`."
              },
              "parameters": [
                {
                  "id": 207,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 208,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 221,
          "name": "ilike",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 169,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 222,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case insensitive)."
              },
              "parameters": [
                {
                  "id": 223,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 224,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 229,
          "name": "in",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 193,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 230,
              "name": "in",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` is found on the\nspecified `values`."
              },
              "parameters": [
                {
                  "id": 231,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 232,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to filter with.\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 180,
                          "name": "T"
                        }
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 225,
          "name": "is",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 181,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 226,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "A check for exact equality (null, true, false), finds all rows whose\nvalue on the stated `column` exactly match the specified `value`."
              },
              "parameters": [
                {
                  "id": 227,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 228,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 217,
          "name": "like",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 157,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 218,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case sensitive)."
              },
              "parameters": [
                {
                  "id": 219,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 220,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 360,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 66,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 361,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limits the result with the specified `count`."
              },
              "parameters": [
                {
                  "id": 362,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The maximum no. of rows to limit to."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 363,
                  "name": "foreignTable",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The foreign table to use (for foreign columns).\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 364,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 365,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 66,
                              "character": 43
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [365]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.limit"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.limit"
          }
        },
        {
          "id": 209,
          "name": "lt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 133,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 210,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` is less than the\nspecified `value`."
              },
              "parameters": [
                {
                  "id": 211,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 212,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 213,
          "name": "lte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 145,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 214,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` is less than or equal\nto the specified `value`."
              },
              "parameters": [
                {
                  "id": 215,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 216,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 346,
          "name": "match",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 463,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 347,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose columns match the specified `query` object."
              },
              "parameters": [
                {
                  "id": 348,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The object to filter with, with column names as keys mapped\n              to their filter values.\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 378,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 110,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 379,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Retrieves at most one row from the result. Result must be at most one row\n(e.g. using `eq` on a UNIQUE column), otherwise this will result in an\nerror."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 427,
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 180,
                            "name": "T"
                          }
                        ]
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.maybeSingle"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.maybeSingle"
          }
        },
        {
          "id": 197,
          "name": "neq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 97,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 198,
              "name": "neq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose value on the stated `column` doesn't match the\nspecified `value`."
              },
              "parameters": [
                {
                  "id": 199,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 200,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 182,
          "name": "not",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 61,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 183,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows which doesn't satisfy the filter."
              },
              "parameters": [
                {
                  "id": 184,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 185,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with."
                  },
                  "type": {
                    "type": "reference",
                    "name": "FilterOperator"
                  }
                },
                {
                  "id": 186,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 187,
          "name": "or",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 72,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 188,
              "name": "or",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows satisfying at least one of the filters."
              },
              "parameters": [
                {
                  "id": 189,
                  "name": "filters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The filters to use, separated by commas."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 190,
                  "name": "foreignTable",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The foreign table to use (if `column` is a foreign column).\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 191,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 192,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 72,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [192]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 352,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 40,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 353,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Orders the result with the specified `column`."
              },
              "parameters": [
                {
                  "id": 354,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 355,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 356,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 357,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 46,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 359,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 46,
                              "character": 52
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 358,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 46,
                              "character": 30
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [357, 359, 358]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.order"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.order"
          }
        },
        {
          "id": 296,
          "name": "overlaps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 337,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 297,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose array or range value on the stated `column` overlaps\n(has a value in common) with the specified `value`."
              },
              "parameters": [
                {
                  "id": 298,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 299,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "id": 180,
                              "name": "T"
                            }
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 180,
                            "name": "T"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 327,
          "name": "phfts",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 423,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 328,
              "name": "phfts",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nphraseto_tsquery(`query`).",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `textSearch()` with `type: 'phrase'` instead.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 329,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 330,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The Postgres tsquery string to filter with."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 331,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text search configuration to use.\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 332,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 333,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 423,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [333]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 320,
          "name": "plfts",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 407,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 321,
              "name": "plfts",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nplainto_tsquery(`query`).",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `textSearch()` with `type: 'plain'` instead.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 322,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 323,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The Postgres tsquery string to filter with."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 324,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text search configuration to use.\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 325,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 326,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 407,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [326]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 366,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 79,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 367,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limits the result to rows within the specified range, inclusive."
              },
              "parameters": [
                {
                  "id": 368,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The starting index from which to limit the result, inclusive."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 369,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The last index to which to limit the result, inclusive."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 370,
                  "name": "foreignTable",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The foreign table to use (for foreign columns).\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 371,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 372,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestTransformBuilder.ts",
                              "line": 79,
                              "character": 54
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [372]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.range"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.range"
          }
        },
        {
          "id": 287,
          "name": "rangeAdjacent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 322,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 288,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose range value on the stated `column` is adjacent to\nthe specified `range`."
              },
              "parameters": [
                {
                  "id": 289,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 290,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 260,
          "name": "rangeGt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 277,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 261,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose range value on the stated `column` is strictly to\nthe right of the specified `range`."
              },
              "parameters": [
                {
                  "id": 262,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 263,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 269,
          "name": "rangeGte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 292,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 270,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the left of the specified `range`."
              },
              "parameters": [
                {
                  "id": 271,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 272,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 251,
          "name": "rangeLt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 262,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 252,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose range value on the stated `column` is strictly to the\nleft of the specified `range`."
              },
              "parameters": [
                {
                  "id": 253,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 254,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 278,
          "name": "rangeLte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 307,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 279,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the right of the specified `range`."
              },
              "parameters": [
                {
                  "id": 280,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 281,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 349,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 13,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 350,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs vertical filtering with SELECT."
              },
              "parameters": [
                {
                  "id": 351,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "'*'"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.select"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.select"
          }
        },
        {
          "id": 376,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestTransformBuilder.ts",
              "line": 100,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 377,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 427,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.single"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.single"
          }
        },
        {
          "id": 305,
          "name": "textSearch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 360,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 306,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose text or tsvector value on the stated `column` matches\nthe tsquery in `query`."
              },
              "parameters": [
                {
                  "id": 307,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 308,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The Postgres tsquery string to filter with."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 309,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 310,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 311,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 366,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 312,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 366,
                              "character": 26
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [311, 312]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 412,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 91,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 413,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 414,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 425,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 180,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 415,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 416,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 417,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 418,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 419,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 425,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 180,
                                        "name": "T"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 72,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 72,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 420,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 421,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 422,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 423,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 73,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 73,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 73,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.then"
          }
        },
        {
          "id": 409,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 83,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 410,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "parameters": [
                {
                  "id": 411,
                  "name": "throwOnError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestTransformBuilder.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestTransformBuilder.throwOnError"
          }
        },
        {
          "id": 334,
          "name": "wfts",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestFilterBuilder.ts",
              "line": 439,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 335,
              "name": "wfts",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nwebsearch_to_tsquery(`query`).",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `textSearch()` with `type: 'websearch'` instead.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 336,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on."
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 180,
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 337,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The Postgres tsquery string to filter with."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 338,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text search configuration to use.\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 339,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 340,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestFilterBuilder.ts",
                              "line": 439,
                              "character": 53
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [340]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 180,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [178]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            291, 408, 400, 246, 237, 403, 395, 393, 273, 282, 300, 399, 401, 402, 255, 264, 394
          ]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            373, 242, 233, 380, 193, 384, 341, 313, 382, 201, 205, 221, 229, 225, 217, 360, 209,
            213, 346, 378, 197, 182, 187, 352, 296, 327, 320, 366, 287, 260, 269, 251, 278, 349,
            376, 305, 412, 409, 334
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/PostgrestFilterBuilder.ts",
          "line": 53,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 424,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 180,
              "name": "T"
            }
          ],
          "name": "default"
        }
      ]
    },
    {
      "id": 83,
      "name": "PostgrestQueryBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 84,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 5,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 85,
              "name": "new PostgrestQueryBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 86,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 87,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 88,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 89,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 95,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 15,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 96,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 97,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 98,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      }
                                    },
                                    {
                                      "id": 99,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 90,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 13,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 91,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 92,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 93,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 94,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 14,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 100,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 16,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [95, 90, 94, 100]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 83,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "overwrites": {
                "type": "reference",
                "id": 48,
                "name": "PostgrestBuilder.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 47,
            "name": "PostgrestBuilder.constructor"
          }
        },
        {
          "id": 160,
          "name": "allowEmpty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 60,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 66,
            "name": "PostgrestBuilder.allowEmpty"
          }
        },
        {
          "id": 152,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 56,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "qualifiedName": "Partial",
                "package": "typescript",
                "name": "Partial"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 86,
                      "name": "T"
                    }
                  ],
                  "qualifiedName": "Partial",
                  "package": "typescript",
                  "name": "Partial"
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 58,
            "name": "PostgrestBuilder.body"
          }
        },
        {
          "id": 155,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 59,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 156,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 157,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 158,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInfo",
                        "package": "typescript",
                        "name": "RequestInfo"
                      }
                    },
                    {
                      "id": 159,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 61,
            "name": "PostgrestBuilder.fetch"
          }
        },
        {
          "id": 147,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 54,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 148,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 149,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 150,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 53,
            "name": "PostgrestBuilder.headers"
          }
        },
        {
          "id": 145,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 52,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 51,
            "name": "PostgrestBuilder.method"
          }
        },
        {
          "id": 151,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 55,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 57,
            "name": "PostgrestBuilder.schema"
          }
        },
        {
          "id": 153,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 57,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 59,
            "name": "PostgrestBuilder.shouldThrowOnError"
          }
        },
        {
          "id": 154,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 58,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 60,
            "name": "PostgrestBuilder.signal"
          }
        },
        {
          "id": 146,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 53,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 52,
            "name": "PostgrestBuilder.url"
          }
        },
        {
          "id": 139,
          "name": "delete",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 212,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 140,
              "name": "delete",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs a DELETE on the table."
              },
              "parameters": [
                {
                  "id": 141,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 142,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 144,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 217,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 143,
                          "name": "returning",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 216,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "minimal"
                              },
                              {
                                "type": "literal",
                                "value": "representation"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [144, 143]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 108,
          "name": "insert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 74,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 109,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs an INSERT into the table."
              },
              "parameters": [
                {
                  "id": 110,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to insert."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 86,
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "Partial",
                        "package": "typescript",
                        "name": "Partial"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 86,
                              "name": "T"
                            }
                          ],
                          "qualifiedName": "Partial",
                          "package": "typescript",
                          "name": "Partial"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 111,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 112,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 114,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 78,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 113,
                          "name": "returning",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 77,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "minimal"
                              },
                              {
                                "type": "literal",
                                "value": "representation"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [114, 113]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 115,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `upsert()` instead.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 116,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 86,
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "Partial",
                        "package": "typescript",
                        "name": "Partial"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 86,
                              "name": "T"
                            }
                          ],
                          "qualifiedName": "Partial",
                          "package": "typescript",
                          "name": "Partial"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 117,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 118,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 122,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 90,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 120,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 88,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 121,
                          "name": "returning",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 89,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "minimal"
                              },
                              {
                                "type": "literal",
                                "value": "representation"
                              }
                            ]
                          }
                        },
                        {
                          "id": 119,
                          "name": "upsert",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 87,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [122, 120, 121, 119]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 101,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 32,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 102,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs vertical filtering with SELECT."
              },
              "parameters": [
                {
                  "id": 103,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "'*'"
                },
                {
                  "id": 104,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 105,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 107,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 39,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 106,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 38,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [107, 106]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 164,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 91,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 165,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 166,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 425,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 86,
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestResponse"
                  }
                },
                {
                  "id": 167,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 168,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 169,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 170,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 171,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 425,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 86,
                                        "name": "T"
                                      }
                                    ],
                                    "name": "PostgrestResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 72,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 72,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 172,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 173,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 174,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 175,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 73,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 73,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 73,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 71,
                "name": "PostgrestBuilder.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 70,
            "name": "PostgrestBuilder.then"
          }
        },
        {
          "id": 161,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 83,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 162,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "parameters": [
                {
                  "id": 163,
                  "name": "throwOnError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 83,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 68,
                "name": "PostgrestBuilder.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 67,
            "name": "PostgrestBuilder.throwOnError"
          }
        },
        {
          "id": 132,
          "name": "update",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 183,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 133,
              "name": "update",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs an UPDATE on the table."
              },
              "parameters": [
                {
                  "id": 134,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to update."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 86,
                        "name": "T"
                      }
                    ],
                    "qualifiedName": "Partial",
                    "package": "typescript",
                    "name": "Partial"
                  }
                },
                {
                  "id": 135,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 136,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 138,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 190,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 137,
                          "name": "returning",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 189,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "minimal"
                              },
                              {
                                "type": "literal",
                                "value": "representation"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [138, 137]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 123,
          "name": "upsert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/PostgrestQueryBuilder.ts",
              "line": 142,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 124,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Performs an UPSERT into the table."
              },
              "parameters": [
                {
                  "id": 125,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to insert."
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 86,
                            "name": "T"
                          }
                        ],
                        "qualifiedName": "Partial",
                        "package": "typescript",
                        "name": "Partial"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 86,
                              "name": "T"
                            }
                          ],
                          "qualifiedName": "Partial",
                          "package": "typescript",
                          "name": "Partial"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 126,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 127,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 130,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 152,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 131,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 153,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 128,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 150,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 129,
                          "name": "returning",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/PostgrestQueryBuilder.ts",
                              "line": 151,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "minimal"
                              },
                              {
                                "type": "literal",
                                "value": "representation"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [130, 131, 128, 129]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 177,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 86,
                    "name": "T"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [84]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [160, 152, 155, 147, 145, 151, 153, 154, 146]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [139, 108, 101, 164, 161, 132, 123]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/PostgrestQueryBuilder.ts",
          "line": 4,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 176,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 46,
          "typeArguments": [
            {
              "type": "reference",
              "id": 86,
              "name": "T"
            }
          ],
          "name": "PostgrestBuilder"
        }
      ]
    },
    {
      "id": 431,
      "name": "PostgrestError",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "Error format",
        "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 8,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 432,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 436,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 12,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 434,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 10,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 435,
              "name": "hint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 433,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 9,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [436, 434, 435, 433]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 8,
              "character": 29
            }
          ]
        }
      }
    },
    {
      "id": 429,
      "name": "PostgrestMaybeSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 49,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 430,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 427,
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 430,
                "name": "T"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 425,
      "name": "PostgrestResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 38,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 426,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 426,
                "name": "T"
              }
            ],
            "name": "PostgrestResponseSuccess"
          },
          {
            "type": "reference",
            "name": "PostgrestResponseFailure"
          }
        ]
      }
    },
    {
      "id": 427,
      "name": "PostgrestSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 46,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 428,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 428,
                "name": "T"
              }
            ],
            "name": "PostgrestSingleResponseSuccess"
          },
          {
            "type": "reference",
            "name": "PostgrestResponseFailure"
          }
        ]
      }
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [46, 1, 177, 83]
    },
    {
      "title": "Type aliases",
      "kind": 4194304,
      "children": [431, 429, 425, 427]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
