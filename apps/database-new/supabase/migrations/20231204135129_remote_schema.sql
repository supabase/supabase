alter table "public"."threads" drop constraint "threads_pkey";

drop index if exists "public"."threads_pkey";

create table "public"."messages_user" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "modified_at" timestamp with time zone,
    "message_id" text,
    "thread_id" text,
    "text" text,
    "run_id" text not null,
    "user_id" uuid
);


alter table "public"."messages_user" enable row level security;

create table "public"."responses_ai" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "modified_at" timestamp with time zone default now(),
    "run_id" text,
    "thread_id" text,
    "text" text,
    "user_id" uuid,
    "message_id" text not null
);


alter table "public"."responses_ai" enable row level security;

CREATE UNIQUE INDEX messages_user_pkey ON public.messages_user USING btree (id);

CREATE UNIQUE INDEX responses_message_id_key ON public.responses_ai USING btree (message_id);

CREATE UNIQUE INDEX responses_pkey ON public.responses_ai USING btree (id);

CREATE UNIQUE INDEX threads_thread_id_key ON public.threads USING btree (thread_id);

CREATE UNIQUE INDEX threads_pkey ON public.threads USING btree (id, thread_id);

alter table "public"."messages_user" add constraint "messages_user_pkey" PRIMARY KEY using index "messages_user_pkey";

alter table "public"."responses_ai" add constraint "responses_pkey" PRIMARY KEY using index "responses_pkey";

alter table "public"."threads" add constraint "threads_pkey" PRIMARY KEY using index "threads_pkey";

alter table "public"."messages_user" add constraint "messages_user_thread_id_fkey" FOREIGN KEY (thread_id) REFERENCES threads(thread_id) ON DELETE CASCADE not valid;

alter table "public"."messages_user" validate constraint "messages_user_thread_id_fkey";

alter table "public"."messages_user" add constraint "messages_user_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."messages_user" validate constraint "messages_user_user_id_fkey";

alter table "public"."responses_ai" add constraint "responses_ai_thread_id_fkey" FOREIGN KEY (thread_id) REFERENCES threads(thread_id) not valid;

alter table "public"."responses_ai" validate constraint "responses_ai_thread_id_fkey";

alter table "public"."responses_ai" add constraint "responses_ai_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."responses_ai" validate constraint "responses_ai_user_id_fkey";

alter table "public"."responses_ai" add constraint "responses_message_id_key" UNIQUE using index "responses_message_id_key";

alter table "public"."threads" add constraint "threads_thread_id_key" UNIQUE using index "threads_thread_id_key";

create policy "Enable insert for users based on user_id"
on "public"."messages_user"
as permissive
for insert
to authenticated
with check ((auth.uid() = user_id));


create policy "Enable insert for users based on user_id"
on "public"."responses_ai"
as permissive
for insert
to authenticated
with check ((auth.uid() = user_id));



