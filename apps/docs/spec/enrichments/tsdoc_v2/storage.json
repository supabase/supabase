{
	"id": 0,
	"name": "@supabase/storage-js",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 449,
					"name": "StorageApiError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 450,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 451,
									"name": "new StorageApiError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 452,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 453,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 449,
										"name": "StorageApiError"
									},
									"overwrites": {
										"type": "reference",
										"id": 446,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 445,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 454,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 455,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 23,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 456,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 457,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 459,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 26,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 458,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 25,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 460,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 27,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														459,
														458,
														460
													]
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								450
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								454
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								455
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 444,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 304,
					"name": "StorageClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 305,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 6,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 306,
									"name": "new StorageClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 307,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 308,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 309,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 310,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 311,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 312,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 313,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 314,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 315,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 316,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 304,
										"name": "StorageClient"
									},
									"overwrites": {
										"type": "reference",
										"id": 5,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 4,
								"name": "default.constructor"
							}
						},
						{
							"id": 347,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 85,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 348,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 349,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 350,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 351,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 354,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 90,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 353,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 89,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 352,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 88,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																354,
																353,
																352
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 355,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 356,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 96,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 399,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 357,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 97,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		356,
																		357
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 358,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 359,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 100,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 360,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 101,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		359,
																		360
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 44,
										"name": "default.createBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 43,
								"name": "default.createBucket"
							}
						},
						{
							"id": 388,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 219,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 389,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 390,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 391,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 392,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 223,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 393,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 394,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 223,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						394
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 395,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 224,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		392,
																		395
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 396,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 397,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 398,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		397,
																		398
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 85,
										"name": "default.deleteBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 84,
								"name": "default.deleteBucket"
							}
						},
						{
							"id": 377,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 184,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 378,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 379,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 380,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 381,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 382,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 383,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 188,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						383
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 384,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		381,
																		384
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 385,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 386,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 387,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 193,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		386,
																		387
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 74,
										"name": "default.emptyBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 73,
								"name": "default.emptyBucket"
							}
						},
						{
							"id": 317,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 318,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform file operation in a bucket."
									},
									"parameters": [
										{
											"id": 319,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The bucket id to operate on.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 96,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 338,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 339,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 340,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 341,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 342,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 52,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 399,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 343,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 53,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		342,
																		343
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 344,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 345,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 56,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 346,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 57,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		345,
																		346
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "default.getBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "default.getBucket"
							}
						},
						{
							"id": 330,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 331,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 332,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 333,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 399,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 334,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		333,
																		334
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 335,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 336,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 337,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		336,
																		337
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 27,
										"name": "default.listBuckets"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 26,
								"name": "default.listBuckets"
							}
						},
						{
							"id": 361,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 362,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 363,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 364,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 365,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 368,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 144,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 367,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 143,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 366,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 142,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																368,
																367,
																366
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 369,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 370,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 148,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 371,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 372,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 148,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						372
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 373,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 149,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		370,
																		373
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 374,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 375,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 152,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 376,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 153,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		375,
																		376
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 58,
										"name": "default.updateBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 57,
								"name": "default.updateBucket"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								305
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								347,
								388,
								377,
								317,
								338,
								330,
								361
							]
						}
					],
					"sources": [
						{
							"fileName": "src/StorageClient.ts",
							"line": 5,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3,
							"name": "default"
						}
					]
				},
				{
					"id": 444,
					"name": "StorageError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 445,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 4,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 446,
									"name": "new StorageError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 447,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 444,
										"name": "StorageError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								445
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 1,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 449,
							"name": "StorageApiError"
						},
						{
							"type": "reference",
							"id": 462,
							"name": "StorageUnknownError"
						}
					]
				},
				{
					"id": 462,
					"name": "StorageUnknownError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 463,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 35,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 464,
									"name": "new StorageUnknownError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 465,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 466,
											"name": "originalError",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 462,
										"name": "StorageUnknownError"
									},
									"overwrites": {
										"type": "reference",
										"id": 446,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 445,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 467,
							"name": "originalError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								463
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								467
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 32,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 444,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 399,
					"name": "Bucket",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 404,
							"name": "allowed_mime_types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 405,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 403,
							"name": "file_size_limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 400,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 401,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 402,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 407,
							"name": "public",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 406,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								404,
								405,
								403,
								400,
								401,
								402,
								407,
								406
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1,
							"character": 17
						}
					]
				},
				{
					"id": 431,
					"name": "FetchParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 432,
							"name": "signal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in an AbortController's signal to cancel the request."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AbortSignal",
								"package": "typescript",
								"name": "AbortSignal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								432
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 70,
							"character": 17
						}
					]
				},
				{
					"id": 408,
					"name": "FileObject",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 410,
							"name": "bucket_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 417,
							"name": "buckets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 399,
								"name": "Bucket"
							}
						},
						{
							"id": 414,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 412,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 415,
							"name": "last_accessed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 416,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 409,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 411,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 413,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								410,
								417,
								414,
								412,
								415,
								416,
								409,
								411,
								413
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 12,
							"character": 17
						}
					]
				},
				{
					"id": 421,
					"name": "FileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 422,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 425,
							"name": "duplex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 424,
							"name": "upsert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								422,
								423,
								425,
								424
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 29,
							"character": 17
						}
					]
				},
				{
					"id": 433,
					"name": "Metadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 434,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 79,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								434
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 78,
							"character": 17
						}
					]
				},
				{
					"id": 426,
					"name": "SearchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 427,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": " The number of files you want to be returned."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 428,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The starting position."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 430,
							"name": "search",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The search string to filter files by."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 429,
							"name": "sortBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The column to sort by. Can be any column inside a FileObject."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 418,
								"name": "SortBy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								427,
								428,
								430,
								429
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 48,
							"character": 17
						}
					]
				},
				{
					"id": 418,
					"name": "SortBy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 419,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								419,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 24,
							"character": 17
						}
					]
				},
				{
					"id": 435,
					"name": "TransformOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 440,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the format of the image requested.",
								"text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 110,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "origin"
							}
						},
						{
							"id": 437,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 90,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 439,
							"name": "quality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 103,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 438,
							"name": "resize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 97,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cover"
									},
									{
										"type": "literal",
										"value": "contain"
									},
									{
										"type": "literal",
										"value": "fill"
									}
								]
							}
						},
						{
							"id": 436,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								440,
								437,
								439,
								438,
								436
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 82,
							"character": 17
						}
					]
				},
				{
					"id": 441,
					"name": "isStorageError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "isStorageError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 443,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 444,
									"name": "StorageError"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						449,
						304,
						444,
						462
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						399,
						431,
						408,
						421,
						433,
						426,
						418,
						435
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						441
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "packages/StorageBucketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 12,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 7,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 10,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 11,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 12,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 13,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 14,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 15,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 43,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 85,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id\n"
									},
									"parameters": [
										{
											"id": 45,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 46,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 47,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 50,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 90,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 49,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 89,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 48,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 88,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																50,
																49,
																48
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 51,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 52,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 96,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 399,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 53,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 97,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		52,
																		53
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 54,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 55,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 100,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 56,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 101,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		55,
																		56
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 84,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 219,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 85,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 86,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 87,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 88,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 223,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 89,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 90,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 223,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						90
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 91,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 224,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		88,
																		91
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 92,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 93,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 94,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		93,
																		94
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 73,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 184,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 74,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 75,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 76,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 77,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 78,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 79,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 188,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						79
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 80,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		77,
																		80
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 81,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 82,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 83,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 193,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		82,
																		83
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 34,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 48,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 35,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 36,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 37,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 38,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 52,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 399,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 39,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 53,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		38,
																		39
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 41,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 56,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 42,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 57,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		41,
																		42
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 26,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 21,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 28,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 29,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 23,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 399,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 30,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 24,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		29,
																		30
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 32,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 27,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 33,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 28,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		32,
																		33
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 57,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 59,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 61,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 64,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 144,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 63,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 143,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 62,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 142,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																64,
																63,
																62
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 65,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 66,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 148,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 67,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 68,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 148,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						68
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 69,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 149,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		66,
																		69
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 70,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 71,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 152,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 72,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 153,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		71,
																		72
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								43,
								84,
								73,
								34,
								26,
								57
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageBucketApi.ts",
							"line": 7,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 304,
							"name": "StorageClient"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageBucketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 95,
			"name": "packages/StorageFileApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 96,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 97,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 45,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 98,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 99,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 100,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 101,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 102,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 103,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 104,
											"name": "bucketId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 105,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 106,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 107,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 108,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 109,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 96,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 207,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 338,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 208,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Copies an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 209,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 210,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-copy.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 211,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 212,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 343,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 213,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 214,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 343,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						214
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 215,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 344,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		212,
																		215
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 216,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 217,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 347,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 218,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 348,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		217,
																		218
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 167,
							"name": "createSignedUploadUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 168,
									"name": "createSignedUploadUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed upload URL.\nSigned upload URLs can be used to upload files to the bucket without further authentication.\nThey are valid for 2 hours."
									},
									"parameters": [
										{
											"id": 169,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 170,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 171,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 172,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 175,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 227,
																							"character": 50
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 173,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 227,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 174,
																					"name": "token",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 227,
																							"character": 35
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						175,
																						173,
																						174
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 176,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		171,
																		176
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 177,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 178,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 231,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 179,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 232,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		178,
																		179
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 219,
							"name": "createSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 376,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 220,
									"name": "createSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed URL. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 221,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 222,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 223,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 224,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 225,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 379,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 226,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 379,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 435,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																225,
																226
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 227,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 228,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 382,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 229,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 230,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 382,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						230
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 231,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 383,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		228,
																		231
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 232,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 233,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 386,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 234,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 387,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		233,
																		234
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 235,
							"name": "createSignedUrls",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 421,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "createSignedUrls",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 237,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 238,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 239,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 240,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 241,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 424,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																241
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 242,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 243,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 427,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 244,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 245,
																						"name": "error",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 427,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 246,
																						"name": "path",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 427,
																								"character": 38
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 247,
																						"name": "signedUrl",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 427,
																								"character": 59
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							245,
																							246,
																							247
																						]
																					}
																				]
																			}
																		}
																	}
																},
																{
																	"id": 248,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 428,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		243,
																		248
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 249,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 250,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 431,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 251,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 432,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		250,
																		251
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 252,
							"name": "download",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 470,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 253,
									"name": "download",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead."
									},
									"parameters": [
										{
											"id": 254,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The full path and file name of the file to be downloaded. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 255,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 256,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 257,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 472,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"id": 435,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																257
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 258,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 259,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 475,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Blob",
																		"package": "typescript",
																		"name": "Blob"
																	}
																},
																{
																	"id": 260,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 476,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		259,
																		260
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 261,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 262,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 479,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 263,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 480,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		262,
																		263
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 264,
							"name": "getPublicUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 513,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 265,
									"name": "getPublicUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\nThis function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset."
									},
									"parameters": [
										{
											"id": 266,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The path and name of the file to generate the public URL for. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 267,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 268,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 269,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 515,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 270,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 515,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 435,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																269,
																270
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 271,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 272,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/packages/StorageFileApi.ts",
															"line": 516,
															"character": 7
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 273,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 274,
																	"name": "publicUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 516,
																			"character": 15
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		274
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														272
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 284,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 647,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Lists all the files within a bucket."
									},
									"parameters": [
										{
											"id": 286,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The folder path.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 287,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 426,
												"name": "SearchOptions"
											}
										},
										{
											"id": 288,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 431,
												"name": "FetchParameters"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 289,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 290,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 653,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 408,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 291,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 654,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		290,
																		291
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 292,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 293,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 657,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 294,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 658,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		293,
																		294
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 195,
							"name": "move",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 302,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 196,
									"name": "move",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Moves an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 197,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 198,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-new.png`.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 199,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 200,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 307,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 201,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 202,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 307,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						202
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 203,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 308,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		200,
																		203
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 204,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 205,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 311,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 206,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 312,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		205,
																		206
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 275,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 551,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 276,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes files within the same bucket"
									},
									"parameters": [
										{
											"id": 277,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 278,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 279,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 555,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 408,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 280,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 556,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		279,
																		280
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 281,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 282,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 559,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 283,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 560,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		282,
																		283
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 180,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 269,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 181,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Replaces an existing file at the specified path with a new one."
									},
									"parameters": [
										{
											"id": 182,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 183,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBufferView",
														"package": "typescript",
														"name": "ArrayBufferView"
													},
													{
														"type": "reference",
														"qualifiedName": "Blob",
														"package": "typescript",
														"name": "Blob"
													},
													{
														"type": "reference",
														"qualifiedName": "Buffer",
														"package": "@types/node",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "FormData",
														"package": "typescript",
														"name": "FormData"
													},
													{
														"type": "reference",
														"qualifiedName": "NodeJS.ReadableStream",
														"package": "@types/node",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "Uint8Array",
																"package": "typescript",
																"name": "Uint8Array"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"qualifiedName": "URLSearchParams",
														"package": "typescript",
														"name": "URLSearchParams"
													}
												]
											}
										},
										{
											"id": 184,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 421,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 186,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 285,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 187,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 190,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 285,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 188,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 285,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 189,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 285,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						190,
																						188,
																						189
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 191,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 286,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		186,
																		191
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 192,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 193,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 289,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 194,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 290,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		193,
																		194
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 137,
							"name": "upload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 135,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "upload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file to an existing bucket."
									},
									"parameters": [
										{
											"id": 139,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 140,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 141,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 421,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 142,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 143,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 141,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 144,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 147,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 141,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 145,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 141,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 146,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 141,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						147,
																						145,
																						146
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 148,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 142,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		143,
																		148
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 149,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 150,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 145,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 151,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 146,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 444,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		150,
																		151
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 152,
							"name": "uploadToSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 158,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 153,
									"name": "uploadToSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Upload a file with a token generated from `createSignedUploadUrl`."
									},
									"parameters": [
										{
											"id": 154,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 155,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The token generated from `createSignedUploadUrl`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 156,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 157,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 421,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 158,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 159,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 201,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 160,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 162,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 201,
																							"character": 35
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"defaultValue": "data.Key"
																				},
																				{
																					"id": 161,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 201,
																							"character": 18
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "cleanPath"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						162,
																						161
																					]
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 163,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 202,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		159,
																		163
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 164,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 165,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 206,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																},
																{
																	"id": 166,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		165,
																		166
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								97
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								207,
								167,
								219,
								235,
								252,
								264,
								284,
								195,
								275,
								180,
								137,
								152
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageFileApi.ts",
							"line": 39,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						96
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageFileApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				2,
				95
			]
		}
	]
}