{
  "id": 0,
  "name": "@supabase/auth-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1247,
      "name": "AuthApiError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1248,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 33,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1249,
              "name": "new AuthApiError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1250,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1251,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1252,
                  "name": "code",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1247,
                "name": "AuthApiError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1239,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1238,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1254,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1255,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1243,
            "name": "AuthError.code"
          }
        },
        {
          "id": 1253,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 31,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 1245,
            "name": "AuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1248]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1254, 1253]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 30,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1237,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 1237,
      "name": "AuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1238,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 18,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1239,
              "name": "new AuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1240,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1241,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1242,
                  "name": "code",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1237,
                "name": "AuthError"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        },
        {
          "id": 1243,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1244,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          }
        },
        {
          "id": 1245,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1238]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1243, 1245]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 4,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "Error",
          "package": "typescript",
          "name": "Error"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 1247,
          "name": "AuthApiError"
        },
        {
          "type": "reference",
          "id": 1257,
          "name": "AuthUnknownError"
        },
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1304,
      "name": "AuthImplicitGrantRedirectError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1305,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 90,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1306,
              "name": "new AuthImplicitGrantRedirectError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1307,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1308,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1309,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1311,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 90,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1310,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 90,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1311, 1310]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1304,
                "name": "AuthImplicitGrantRedirectError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1328,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1329,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1312,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 89,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1313,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1315,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 89,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1314,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 89,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1315, 1314]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 1326,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1327,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1316,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 95,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1317,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1318,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1322,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 100,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1323,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1325,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 89,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1324,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 89,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1325, 1324]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1320,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 98,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1319,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 97,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1321,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 99,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1322, 1320, 1319, 1321]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1305]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1328, 1312, 1326, 1327]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [1316]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 88,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1295,
      "name": "AuthInvalidCredentialsError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1296,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 83,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1297,
              "name": "new AuthInvalidCredentialsError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1298,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1295,
                "name": "AuthInvalidCredentialsError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1301,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1302,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1299,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1300,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1296]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1301, 1299, 1300]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 82,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1380,
      "name": "AuthInvalidJwtError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1381,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 162,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1382,
              "name": "new AuthInvalidJwtError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1383,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1380,
                "name": "AuthInvalidJwtError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1386,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1387,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1384,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1385,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1381]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1386, 1384, 1385]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 161,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1287,
      "name": "AuthInvalidTokenResponseError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1288,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 77,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1289,
              "name": "new AuthInvalidTokenResponseError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1287,
                "name": "AuthInvalidTokenResponseError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1292,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1293,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1290,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1291,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1288]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1292, 1290, 1291]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 76,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1331,
      "name": "AuthPKCEGrantCodeExchangeError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1332,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 114,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1333,
              "name": "new AuthPKCEGrantCodeExchangeError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1334,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1335,
                  "name": "details",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1336,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1338,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 114,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1337,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 114,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1338, 1337]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "defaultValue": "null"
                }
              ],
              "type": {
                "type": "reference",
                "id": 1331,
                "name": "AuthPKCEGrantCodeExchangeError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1355,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1356,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1339,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 112,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1340,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1342,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 112,
                          "character": 28
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1341,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 112,
                          "character": 13
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1342, 1341]
                    }
                  ]
                }
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 1353,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1354,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        },
        {
          "id": 1343,
          "name": "toJSON",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 119,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1344,
              "name": "toJSON",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1345,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1349,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 124,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1350,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1352,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 112,
                                      "character": 28
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1351,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 112,
                                      "character": 13
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1352, 1351]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1347,
                      "name": "message",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 122,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1346,
                      "name": "name",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 121,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 1348,
                      "name": "status",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/errors.ts",
                          "line": 123,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1349, 1347, 1346, 1348]
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1332]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1355, 1339, 1353, 1354]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [1343]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 111,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1358,
      "name": "AuthRetryableFetchError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1359,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 130,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1360,
              "name": "new AuthRetryableFetchError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1361,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1362,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1358,
                "name": "AuthRetryableFetchError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1365,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1366,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1363,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1364,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1359]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1365, 1363, 1364]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 129,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1279,
      "name": "AuthSessionMissingError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1280,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 67,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1281,
              "name": "new AuthSessionMissingError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1279,
                "name": "AuthSessionMissingError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1284,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1285,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1282,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1283,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1280]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1284, 1282, 1283]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 66,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1257,
      "name": "AuthUnknownError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1258,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1259,
              "name": "new AuthUnknownError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1260,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1261,
                  "name": "originalError",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1257,
                "name": "AuthUnknownError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1239,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1238,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1263,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1264,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1243,
            "name": "AuthError.code"
          }
        },
        {
          "id": 1262,
          "name": "originalError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 46,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 1265,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1245,
            "name": "AuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1258]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1263, 1262, 1265]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 45,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1237,
          "name": "AuthError"
        }
      ]
    },
    {
      "id": 1368,
      "name": "AuthWeakPasswordError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "shortText": "This error is thrown on certain methods when the password used is deemed\nweak. Inspect the reasons to identify what password strength rules are\ninadequate."
      },
      "children": [
        {
          "id": 1369,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 150,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1370,
              "name": "new AuthWeakPasswordError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1371,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1372,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1373,
                  "name": "reasons",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1368,
                "name": "AuthWeakPasswordError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1269,
                "name": "CustomAuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1268,
            "name": "CustomAuthError.constructor"
          }
        },
        {
          "id": 1377,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1378,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1276,
            "name": "CustomAuthError.code"
          }
        },
        {
          "id": 1375,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1274,
            "name": "CustomAuthError.name"
          }
        },
        {
          "id": 1374,
          "name": "reasons",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Reasons why the password is deemed weak."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 148,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 591,
              "name": "WeakPasswordReasons"
            }
          }
        },
        {
          "id": 1376,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1275,
            "name": "CustomAuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1369]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1377, 1375, 1374, 1376]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 144,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1267,
          "name": "CustomAuthError"
        }
      ]
    },
    {
      "id": 1267,
      "name": "CustomAuthError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1268,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 1269,
              "name": "new CustomAuthError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1270,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1271,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1272,
                  "name": "status",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1273,
                  "name": "code",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1267,
                "name": "CustomAuthError"
              },
              "overwrites": {
                "type": "reference",
                "id": 1239,
                "name": "AuthError.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 1238,
            "name": "AuthError.constructor"
          }
        },
        {
          "id": 1276,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1277,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "reference",
                "name": "ErrorCode"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 1243,
            "name": "AuthError.code"
          }
        },
        {
          "id": 1274,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 56,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "AuthError.name"
          }
        },
        {
          "id": 1275,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "HTTP status code that caused the error."
          },
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 57,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "overwrites": {
            "type": "reference",
            "id": 1245,
            "name": "AuthError.status"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [1268]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1276, 1274, 1275]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 55,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 1237,
          "name": "AuthError"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 1279,
          "name": "AuthSessionMissingError"
        },
        {
          "type": "reference",
          "id": 1287,
          "name": "AuthInvalidTokenResponseError"
        },
        {
          "type": "reference",
          "id": 1295,
          "name": "AuthInvalidCredentialsError"
        },
        {
          "type": "reference",
          "id": 1304,
          "name": "AuthImplicitGrantRedirectError"
        },
        {
          "type": "reference",
          "id": 1331,
          "name": "AuthPKCEGrantCodeExchangeError"
        },
        {
          "type": "reference",
          "id": 1358,
          "name": "AuthRetryableFetchError"
        },
        {
          "type": "reference",
          "id": 1368,
          "name": "AuthWeakPasswordError"
        },
        {
          "type": "reference",
          "id": 1380,
          "name": "AuthInvalidJwtError"
        }
      ]
    },
    {
      "id": 1,
      "name": "GoTrueAdminApi",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 37,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "new GoTrueAdminApi",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 4,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 5,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 11,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 46,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 12,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 13,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 14,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 15,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 43,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 6,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 42,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [11, 7, 6]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 16,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Contains all MFA administration methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 29,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1119,
            "name": "GoTrueAdminMFAApi"
          }
        },
        {
          "id": 44,
          "name": "createUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 160,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 45,
              "name": "createUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 46,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 772,
                    "name": "AdminUserAttributes"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 68,
          "name": "deleteUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 280,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 69,
              "name": "deleteUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Delete a user. Requires a `service_role` key."
              },
              "parameters": [
                {
                  "id": 70,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user id you want to remove."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 71,
                  "name": "shouldSoftDelete",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 41,
          "name": "generateLink",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 126,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 42,
              "name": "generateLink",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generates email links and OTPs to be sent via a custom email provider."
              },
              "parameters": [
                {
                  "id": 43,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 974,
                    "name": "GenerateLinkParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 975,
                    "name": "GenerateLinkResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 61,
          "name": "getUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 229,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 62,
              "name": "getUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get user by id."
              },
              "parameters": [
                {
                  "id": 63,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 34,
          "name": "inviteUserByEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 93,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 35,
              "name": "inviteUserByEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends an invite link to an email address."
              },
              "parameters": [
                {
                  "id": 36,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 37,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Additional options to be included when inviting.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 38,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 39,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 97,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 40,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 100,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [39, 40]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 47,
          "name": "listUsers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 182,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 48,
              "name": "listUsers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Get a list of users.",
                "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
              },
              "parameters": [
                {
                  "id": 49,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 1146,
                    "name": "PageParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 50,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 51,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 185,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 52,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 54,
                                          "name": "aud",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 185,
                                              "character": 31
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 53,
                                          "name": "users",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 185,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "array",
                                            "elementType": {
                                              "type": "reference",
                                              "id": 740,
                                              "name": "User"
                                            }
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [54, 53]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1139,
                                    "name": "Pagination"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 55,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 185,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [51, 55]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 56,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 57,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 186,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 58,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 59,
                                      "name": "users",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 186,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "tuple"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [59]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 60,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 186,
                                  "character": 29
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [57, 60]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 27,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 62,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 28,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Removes a logged-in session."
              },
              "parameters": [
                {
                  "id": 29,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A valid, logged-in JWT."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 30,
                  "name": "scope",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The logout sope.\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "global"
                      },
                      {
                        "type": "literal",
                        "value": "local"
                      },
                      {
                        "type": "literal",
                        "value": "others"
                      }
                    ]
                  },
                  "defaultValue": "..."
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 31,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 32,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 65,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 33,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueAdminApi.ts",
                              "line": 65,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [32, 33]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 64,
          "name": "updateUserById",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 253,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 65,
              "name": "updateUserById",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates the user data."
              },
              "parameters": [
                {
                  "id": 66,
                  "name": "uid",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 67,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 772,
                    "name": "AdminUserAttributes"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [2]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [16]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [44, 68, 41, 61, 34, 47, 27, 64]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueAdminApi.ts",
          "line": 27,
          "character": 21
        }
      ]
    },
    {
      "id": 78,
      "name": "GoTrueClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 80,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 229,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 81,
              "name": "new GoTrueClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Create a new client for use in the browser."
              },
              "parameters": [
                {
                  "id": 82,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 569,
                    "name": "GoTrueClientOptions"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 78,
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 84,
          "name": "admin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 156,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1,
            "name": "default"
          }
        },
        {
          "id": 85,
          "name": "mfa",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Namespace for the MFA methods."
          },
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 160,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 1070,
            "name": "GoTrueMFAApi"
          }
        },
        {
          "id": 157,
          "name": "exchangeCodeForSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 640,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 158,
              "name": "exchangeCodeForSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
              },
              "parameters": [
                {
                  "id": 159,
                  "name": "authCode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 639,
                    "name": "AuthTokenResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 508,
          "name": "getClaims",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 3025,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 509,
              "name": "getClaims",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Extracts the JWT claims present in the access token by first verifying the\nJWT against the server's JSON Web Key Set endpoint\n`/.well-known/jwks.json` which is often cached, resulting in significantly\nfaster responses. Prefer this method over {@link #getUser} which always\nsends a request to the Auth server for each JWT.",
                "text": "If the project is not using an asymmetric JWT signing key (like ECC or\nRSA) it always sends a request to the Auth server (similar to {@link\n#getUser}) to verify the JWT.\n"
              },
              "parameters": [
                {
                  "id": 510,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "An optional specific JWT you wish to verify, not the one you\n           can obtain from {@link #getSession}."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 511,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Various additional options that allow you to customize the\n               behavior of this method.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 512,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 514,
                          "name": "allowExpired",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to `true` the `exp` claim will not be validated against the current time."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 3034,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 515,
                          "name": "jwks",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set, this JSON Web Key Set is going to have precedence over the cached value available on the server."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 3037,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 516,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 517,
                                  "name": "keys",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 3037,
                                      "character": 15
                                    }
                                  ],
                                  "type": {
                                    "type": "array",
                                    "elementType": {
                                      "type": "reference",
                                      "id": 1210,
                                      "name": "JWK"
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [517]
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 513,
                          "name": "keys",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "tags": [
                              {
                                "tag": "deprecated",
                                "text": "Please use options.jwks instead.\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 3031,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 1210,
                              "name": "JWK"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [514, 515, 513]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 518,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 519,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3041,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 520,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 521,
                                      "name": "claims",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 3041,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 1206,
                                        "name": "JwtPayload"
                                      }
                                    },
                                    {
                                      "id": 522,
                                      "name": "header",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 3041,
                                          "character": 36
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 1191,
                                        "name": "JwtHeader"
                                      }
                                    },
                                    {
                                      "id": 523,
                                      "name": "signature",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 3041,
                                          "character": 55
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "Uint8Array",
                                        "package": "typescript",
                                        "name": "Uint8Array"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [521, 522, 523]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 524,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3042,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [519, 524]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 525,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 526,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3044,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 527,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3044,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [526, 527]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 528,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 529,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3045,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 530,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 3045,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [529, 530]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 217,
          "name": "getSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1199,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 218,
              "name": "getSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the session, refreshing it if necessary.",
                "text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n\n**IMPORTANT:** This method loads values directly from the storage attached\nto the client. If that storage is based on request cookies for example,\nthe values in it may not be authentic and therefore it's strongly advised\nagainst using this method and its results in such circumstances. A warning\nwill be emitted if this is detected. Use {@link #getUser()} instead.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 219,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 220,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1292,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 221,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 222,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1293,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 700,
                                        "name": "Session"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [222]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 223,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1295,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [220, 223]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 224,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 225,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1298,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 226,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 227,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1299,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [227]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 228,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1301,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [225, 228]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 229,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 230,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1304,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 231,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 232,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 1305,
                                          "character": 14
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [232]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 233,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1307,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [230, 233]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 280,
          "name": "getUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1443,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 281,
              "name": "getUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets the current user details if there is an existing session. This method\nperforms a network request to the Supabase Auth server, so the returned\nvalue is authentic and can be used to base authorization rules on."
              },
              "parameters": [
                {
                  "id": 282,
                  "name": "jwt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 389,
          "name": "getUserIdentities",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2001,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 390,
              "name": "getUserIdentities",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Gets all the identities linked to a user."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 391,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 392,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2003,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 393,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 394,
                                      "name": "identities",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 2004,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 713,
                                          "name": "UserIdentity"
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [394]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 395,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2006,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [392, 395]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 396,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 397,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2008,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 398,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2008,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [397, 398]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 141,
          "name": "initialize",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 342,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 142,
              "name": "initialize",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1129,
                    "name": "InitializeResult"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 399,
          "name": "linkIdentity",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2025,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 400,
              "name": "linkIdentity",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Links an oauth identity to an existing user.\nThis method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 401,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 847,
                    "name": "SignInWithOAuthCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 667,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 361,
          "name": "onAuthStateChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1899,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 362,
              "name": "onAuthStateChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Receive a notification every time an auth event happens."
              },
              "parameters": [
                {
                  "id": 363,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "A callback function to be invoked when an auth event happens.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 364,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 365,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 366,
                              "name": "event",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 559,
                                "name": "AuthChangeEvent"
                              }
                            },
                            {
                              "id": 367,
                              "name": "session",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 700,
                                    "name": "Session"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 368,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 369,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueClient.ts",
                          "line": 1902,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 370,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 371,
                              "name": "subscription",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1902,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 785,
                                "name": "Subscription"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [371]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [369]
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 210,
          "name": "reauthenticate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1115,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 211,
              "name": "reauthenticate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 310,
          "name": "refreshSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1648,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 311,
              "name": "refreshSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 312,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The current session. If passed in, it must contain a refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 313,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 314,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1648,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [314]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 214,
          "name": "resend",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1150,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 215,
              "name": "resend",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
              },
              "parameters": [
                {
                  "id": 216,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 922,
                    "name": "ResendParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 624,
                    "name": "AuthOtpResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 375,
          "name": "resetPasswordForEmail",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1955,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 376,
              "name": "resetPasswordForEmail",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sends a password reset request to an email address. This method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 377,
                  "name": "email",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The email address of the user."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 378,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 379,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 381,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1959,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 380,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The URL to send the user to after they click the password reset link."
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1958,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [381, 380]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 382,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 383,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1963,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 384,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 385,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1964,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [383, 385]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 386,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 387,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1966,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 388,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1966,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [387, 388]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 298,
          "name": "setSession",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1573,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 299,
              "name": "setSession",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
              },
              "parameters": [
                {
                  "id": 300,
                  "name": "currentSession",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The current session that minimally contains an access token and refresh token.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 301,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 302,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1574,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 303,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1575,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [302, 303]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 145,
          "name": "signInAnonymously",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 445,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 146,
              "name": "signInAnonymously",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new anonymous user.",
                "returns": "A session where the is_anonymous claim in the access token JWT set to true\n"
              },
              "parameters": [
                {
                  "id": 147,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 793,
                    "name": "SignInAnonymouslyCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 198,
          "name": "signInWithIdToken",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 908,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 199,
              "name": "signInWithIdToken",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Allows signing in with an OIDC ID token. The authentication provider used\nshould be enabled and configured."
              },
              "parameters": [
                {
                  "id": 200,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 859,
                    "name": "SignInWithIdTokenCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 639,
                    "name": "AuthTokenResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 154,
          "name": "signInWithOAuth",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 628,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 155,
              "name": "signInWithOAuth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user via a third-party provider.\nThis method supports the PKCE flow."
              },
              "parameters": [
                {
                  "id": 156,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 847,
                    "name": "SignInWithOAuthCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 667,
                    "name": "OAuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 201,
          "name": "signInWithOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 963,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 202,
              "name": "signInWithOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user using magiclink or a one-time password (OTP).",
                "text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\nThis method supports PKCE when an email is passed.\n"
              },
              "parameters": [
                {
                  "id": 203,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 829,
                    "name": "SignInWithPasswordlessCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 624,
                    "name": "AuthOtpResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 151,
          "name": "signInWithPassword",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 565,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 152,
              "name": "signInWithPassword",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in an existing user with an email and password or phone and password.",
                "text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
              },
              "parameters": [
                {
                  "id": 153,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 816,
                    "name": "SignInWithPasswordCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 652,
                    "name": "AuthTokenResponsePassword"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 207,
          "name": "signInWithSSO",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1077,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 208,
              "name": "signInWithSSO",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
                "text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
              },
              "parameters": [
                {
                  "id": 209,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 936,
                    "name": "SignInWithSSO"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 680,
                    "name": "SSOResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 160,
          "name": "signInWithWeb3",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 652,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 161,
              "name": "signInWithWeb3",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Signs in a user by verifying a message signed by the user's private key.\nOnly Solana supported at this time, using the Sign in with Solana standard."
              },
              "parameters": [
                {
                  "id": 162,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 882,
                    "name": "SolanaWeb3Credentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 163,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 164,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 654,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 165,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 166,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 654,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 700,
                                        "name": "Session"
                                      }
                                    },
                                    {
                                      "id": 167,
                                      "name": "user",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 654,
                                          "character": 34
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 740,
                                        "name": "User"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [166, 167]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 168,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 655,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [164, 168]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 169,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 170,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 657,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 171,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 172,
                                      "name": "session",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 657,
                                          "character": 16
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 173,
                                      "name": "user",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueClient.ts",
                                          "line": 657,
                                          "character": 31
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [172, 173]
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 174,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 657,
                                  "character": 45
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [170, 174]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 351,
          "name": "signOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1855,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 352,
              "name": "signOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
                "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using `others` scope, no `SIGNED_OUT` event is fired!\n"
              },
              "parameters": [
                {
                  "id": 353,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1150,
                    "name": "SignOut"
                  },
                  "defaultValue": "..."
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 354,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 355,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1855,
                              "character": 67
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [355]
                        }
                      ]
                    }
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 148,
          "name": "signUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 488,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 149,
              "name": "signUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a new user.",
                "text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
                "returns": "A logged-in session if the server has \"autoconfirm\" ON"
              },
              "parameters": [
                {
                  "id": 150,
                  "name": "credentials",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 799,
                    "name": "SignUpWithPasswordCredentials"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 457,
          "name": "startAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2542,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 458,
              "name": "startAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
                "text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 459,
          "name": "stopAutoRefresh",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2555,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 460,
              "name": "stopAutoRefresh",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Stops an active auto refresh process running in the background (if any).",
                "text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 402,
          "name": "unlinkIdentity",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 2061,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 403,
              "name": "unlinkIdentity",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked."
              },
              "parameters": [
                {
                  "id": 404,
                  "name": "identity",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 713,
                    "name": "UserIdentity"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 405,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 406,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2063,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 407,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {}
                                }
                              }
                            },
                            {
                              "id": 408,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2064,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [406, 408]
                            }
                          ]
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 409,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 410,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2066,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 411,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2066,
                                  "character": 20
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 1237,
                                "name": "AuthError"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [410, 411]
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 286,
          "name": "updateUser",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1504,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 287,
              "name": "updateUser",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Updates user data for a logged in user."
              },
              "parameters": [
                {
                  "id": 288,
                  "name": "attributes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 766,
                    "name": "UserAttributes"
                  }
                },
                {
                  "id": 289,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 290,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 291,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1507,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [291]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 689,
                    "name": "UserResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 204,
          "name": "verifyOtp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 1016,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 205,
              "name": "verifyOtp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Log in a user given a User supplied OTP or TokenHash received through mobile or email."
              },
              "parameters": [
                {
                  "id": 206,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 900,
                    "name": "VerifyOtpParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 597,
                    "name": "AuthResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [80]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [84, 85]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            157, 508, 217, 280, 389, 141, 399, 361, 210, 310, 214, 375, 298, 145, 198, 154, 201,
            151, 207, 160, 351, 148, 457, 459, 402, 286, 204
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/GoTrueClient.ts",
          "line": 147,
          "character": 21
        }
      ]
    },
    {
      "id": 541,
      "name": "NavigatorLockAcquireTimeoutError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 542,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 543,
              "name": "new NavigatorLockAcquireTimeoutError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 544,
                  "name": "message",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 541,
                "name": "NavigatorLockAcquireTimeoutError"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "LockAcquireTimeoutError.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "LockAcquireTimeoutError.constructor"
          }
        },
        {
          "id": 545,
          "name": "isAcquireTimeout",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPublic": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "src/lib/locks.ts",
              "line": 24,
              "character": 18
            }
          ],
          "type": {
            "type": "literal",
            "value": true
          },
          "defaultValue": "true",
          "inheritedFrom": {
            "type": "reference",
            "name": "LockAcquireTimeoutError.isAcquireTimeout"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [542]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [545]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 31,
          "character": 13
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "LockAcquireTimeoutError"
        }
      ]
    },
    {
      "id": 709,
      "name": "AMREntry",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "An authentication methord reference (AMR) entry.",
        "text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
          }
        ]
      },
      "children": [
        {
          "id": 710,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Authentication method name."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 281,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "password"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 711,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "literal",
                "value": "otp"
              },
              {
                "type": "literal",
                "value": "oauth"
              },
              {
                "type": "literal",
                "value": "mfa/totp"
              }
            ]
          }
        },
        {
          "id": 712,
          "name": "timestamp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 287,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [710, 712]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 279,
          "character": 17
        }
      ]
    },
    {
      "id": 772,
      "name": "AdminUserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 774,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
            "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 419,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 777,
          "name": "ban_duration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Determines how long a user is banned for.",
            "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 445,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 784,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 370,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.email"
          }
        },
        {
          "id": 775,
          "name": "email_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's email address if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 426,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 780,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The `id` for the user.",
            "text": "Allows you to overwrite the default `id` set for the user.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 470,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 782,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 387,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.nonce"
          }
        },
        {
          "id": 781,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 380,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.password"
          }
        },
        {
          "id": 779,
          "name": "password_hash",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The `password_hash` for the user's password.",
            "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 463,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 783,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 375,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Omit.phone"
          }
        },
        {
          "id": 776,
          "name": "phone_confirm",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Confirms the user's phone number if set to true.",
            "text": "Only a service role can modify.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 433,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 778,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The `role` claim set in the user's access token JWT.",
            "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 454,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 773,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 409,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [774, 777, 784, 775, 780, 782, 781, 779, 783, 776, 778, 773]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 398,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 766,
              "name": "UserAttributes"
            },
            {
              "type": "literal",
              "value": "data"
            }
          ],
          "qualifiedName": "Omit",
          "package": "typescript",
          "name": "Omit"
        }
      ]
    },
    {
      "id": 725,
      "name": "Factor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "A MFA factor.",
        "tags": [
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#enroll}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAApi#listFactors}"
          },
          {
            "tag": "see",
            "text": "{@link GoTrueMFAAdminApi#listFactors}\n"
          }
        ]
      },
      "children": [
        {
          "id": 731,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 325,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 728,
          "name": "factor_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Type of factor. `totp` and `phone` supported with this version"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 320,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 729,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  }
                ]
              },
              {
                "type": "literal",
                "value": "totp"
              },
              {
                "type": "literal",
                "value": "phone"
              }
            ]
          }
        },
        {
          "id": 727,
          "name": "friendly_name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 315,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 726,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "ID of the factor."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 312,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 730,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "Factor's status."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 323,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "verified"
              },
              {
                "type": "literal",
                "value": "unverified"
              }
            ]
          }
        },
        {
          "id": 732,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 326,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [731, 728, 727, 726, 730, 732]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 310,
          "character": 17
        }
      ]
    },
    {
      "id": 971,
      "name": "GenerateLinkOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 972,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 810,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 973,
          "name": "redirectTo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The URL which will be appended to the email link generated."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 812,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [972, 973]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 804,
          "character": 17
        }
      ]
    },
    {
      "id": 1119,
      "name": "GoTrueAdminMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication administration API.",
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "children": [
        {
          "id": 1123,
          "name": "deleteFactor",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1124,
              "name": "deleteFactor",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#unenroll}\n"
                  },
                  {
                    "tag": "expermental",
                    "text": "\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1125,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1103,
                    "name": "AuthMFAAdminDeleteFactorParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1094,
                    "name": "AuthMFAAdminDeleteFactorResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1120,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1121,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Lists all factors associated to a user."
              },
              "parameters": [
                {
                  "id": 1122,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1116,
                    "name": "AuthMFAAdminListFactorsParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1107,
                    "name": "AuthMFAAdminListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [1123, 1120]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1113,
          "character": 17
        }
      ]
    },
    {
      "id": 1070,
      "name": "GoTrueMFAApi",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "shortText": "Contains the full multi-factor authentication API."
      },
      "children": [
        {
          "id": 1078,
          "name": "challenge",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1079,
              "name": "challenge",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
              },
              "parameters": [
                {
                  "id": 1080,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1005,
                    "name": "MFAChallengeParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1036,
                    "name": "AuthMFAChallengeResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1087,
          "name": "challengeAndVerify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1088,
              "name": "challengeAndVerify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 1089,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1009,
                    "name": "MFAChallengeAndVerifyParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1013,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1071,
          "name": "enroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1072,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
              },
              "parameters": [
                {
                  "id": 1073,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1153,
                    "name": "MFAEnrollTOTPParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1163,
                    "name": "AuthMFAEnrollTOTPResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            },
            {
              "id": 1074,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1075,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1158,
                    "name": "MFAEnrollPhoneParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1179,
                    "name": "AuthMFAEnrollPhoneResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            },
            {
              "id": 1076,
              "name": "enroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1077,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 996,
                    "name": "MFAEnrollParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1026,
                    "name": "AuthMFAEnrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1092,
          "name": "getAuthenticatorAssuranceLevel",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1093,
              "name": "getAuthenticatorAssuranceLevel",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1059,
                    "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1090,
          "name": "listFactors",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1091,
              "name": "listFactors",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Returns the list of MFA factors enabled for this user.",
                "tags": [
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#enroll}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                  },
                  {
                    "tag": "see",
                    "text": "{@link GoTrueClient#getUser}\n\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1047,
                    "name": "AuthMFAListFactorsResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1084,
          "name": "unenroll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1085,
              "name": "unenroll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
              },
              "parameters": [
                {
                  "id": 1086,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 997,
                    "name": "MFAUnenrollParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1027,
                    "name": "AuthMFAUnenrollResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        },
        {
          "id": 1081,
          "name": "verify",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "signatures": [
            {
              "id": 1082,
              "name": "verify",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
              },
              "parameters": [
                {
                  "id": 1083,
                  "name": "params",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1000,
                    "name": "MFAVerifyParams"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 1013,
                    "name": "AuthMFAVerifyResponse"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "kind": 2048,
          "children": [1078, 1087, 1071, 1092, 1090, 1084, 1081]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 998,
          "character": 17
        }
      ]
    },
    {
      "id": 1210,
      "name": "JWK",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1213,
          "name": "alg",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1291,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1212,
          "name": "key_ops",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1290,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 1214,
          "name": "kid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1292,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1211,
          "name": "kty",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1289,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "RSA"
              },
              {
                "type": "literal",
                "value": "EC"
              },
              {
                "type": "literal",
                "value": "oct"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [1213, 1212, 1214, 1211]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1288,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 1215,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 1216,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 700,
      "name": "Session",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 703,
          "name": "access_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 250,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 706,
          "name": "expires_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 262,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 705,
          "name": "expires_in",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 258,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 702,
          "name": "provider_refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 246,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 701,
          "name": "provider_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 241,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 704,
          "name": "refresh_token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "A one-time used refresh token that never expires."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 254,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 707,
          "name": "token_type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 263,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 708,
          "name": "user",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "When using a separate user storage, accessing properties of this object will throw an error."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 268,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 740,
            "name": "User"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [703, 706, 705, 702, 701, 704, 707, 708]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 237,
          "character": 17
        }
      ]
    },
    {
      "id": 785,
      "name": "Subscription",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 786,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The subscriber UUID. This will be set by the client."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 477,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 787,
          "name": "callback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 481,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 788,
              "name": "callback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
              },
              "parameters": [
                {
                  "id": 789,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 559,
                    "name": "AuthChangeEvent"
                  }
                },
                {
                  "id": 790,
                  "name": "session",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 700,
                        "name": "Session"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 791,
          "name": "unsubscribe",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 485,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 792,
              "name": "unsubscribe",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Call this to remove the listener."
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [786]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [787, 791]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 473,
          "character": 17
        }
      ]
    },
    {
      "id": 740,
      "name": "User",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 751,
          "name": "action_link",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 349,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 742,
          "name": "app_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 340,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 733,
            "name": "UserAppMetadata"
          }
        },
        {
          "id": 744,
          "name": "aud",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 342,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 745,
          "name": "confirmation_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 343,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 755,
          "name": "confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 353,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 754,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 352,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 765,
          "name": "deleted_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 363,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 752,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 350,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 747,
          "name": "email_change_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 345,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 756,
          "name": "email_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 354,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 764,
          "name": "factors",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 362,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 725,
              "name": "Factor"
            }
          }
        },
        {
          "id": 741,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 339,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 761,
          "name": "identities",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 359,
              "character": 2
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 713,
              "name": "UserIdentity"
            }
          }
        },
        {
          "id": 750,
          "name": "invited_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 348,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 762,
          "name": "is_anonymous",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 360,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 763,
          "name": "is_sso_user",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 361,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 758,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 356,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 748,
          "name": "new_email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 346,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 749,
          "name": "new_phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 347,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 753,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 351,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 757,
          "name": "phone_confirmed_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 355,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 746,
          "name": "recovery_sent_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 344,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 759,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 357,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 760,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 358,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 743,
          "name": "user_metadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 341,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 737,
            "name": "UserMetadata"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            751, 742, 744, 745, 755, 754, 765, 752, 747, 756, 764, 741, 761, 750, 762, 763, 758,
            748, 749, 753, 757, 746, 759, 760, 743
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 338,
          "character": 17
        }
      ]
    },
    {
      "id": 733,
      "name": "UserAppMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 734,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 330,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [734]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 329,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 735,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 736,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 766,
      "name": "UserAttributes",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 771,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 395,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 767,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's email."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 370,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 770,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
            "text": "Call reauthenticate() to obtain the nonce first.\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 387,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 769,
          "name": "password",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's password."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 380,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 768,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "shortText": "The user's phone."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 375,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [771, 767, 770, 769, 768]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 366,
          "character": 17
        }
      ]
    },
    {
      "id": 713,
      "name": "UserIdentity",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 722,
          "name": "created_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 298,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 714,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 291,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 716,
          "name": "identity_data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 293,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 717,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "indexSignature": {
                "id": 718,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 719,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 720,
          "name": "identity_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 296,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 723,
          "name": "last_sign_in_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 299,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 721,
          "name": "provider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 297,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 724,
          "name": "updated_at",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 300,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 715,
          "name": "user_id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 292,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [722, 714, 716, 720, 723, 721, 724, 715]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 290,
          "character": 17
        }
      ]
    },
    {
      "id": 737,
      "name": "UserMetadata",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 334,
          "character": 17
        }
      ],
      "indexSignature": {
        "id": 738,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 739,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      }
    },
    {
      "id": 909,
      "name": "VerifyEmailOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 910,
          "name": "email",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 700,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 913,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 705,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 914,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 916,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 713,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 915,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 707,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [916, 915]
                }
              ]
            }
          }
        },
        {
          "id": 911,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's email address."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 702,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 912,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 704,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 921,
            "name": "EmailOtpType"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [910, 913, 911, 912]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 698,
          "character": 17
        }
      ]
    },
    {
      "id": 901,
      "name": "VerifyMobileOtpParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 905,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 686,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 906,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 908,
                  "name": "captchaToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Verification token received when the user completes the captcha on the site.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 695,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 907,
                  "name": "redirectTo",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "A URL to send the user to after they are confirmed."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 688,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [908, 907]
                }
              ]
            }
          }
        },
        {
          "id": 902,
          "name": "phone",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 681,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 903,
          "name": "token",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The otp sent to the user's phone number."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 683,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 904,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 685,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 920,
            "name": "MobileOtpType"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [905, 902, 903, 904]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 679,
          "character": 17
        }
      ]
    },
    {
      "id": 917,
      "name": "VerifyTokenHashParams",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 918,
          "name": "token_hash",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The token hash used in an email link"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 719,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 919,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "shortText": "The user's verification type."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 722,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 921,
            "name": "EmailOtpType"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [918, 919]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 717,
          "character": 17
        }
      ]
    },
    {
      "id": 559,
      "name": "AuthChangeEvent",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 32,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "INITIAL_SESSION"
          },
          {
            "type": "literal",
            "value": "PASSWORD_RECOVERY"
          },
          {
            "type": "literal",
            "value": "SIGNED_IN"
          },
          {
            "type": "literal",
            "value": "SIGNED_OUT"
          },
          {
            "type": "literal",
            "value": "TOKEN_REFRESHED"
          },
          {
            "type": "literal",
            "value": "USER_UPDATED"
          },
          {
            "type": "reference",
            "id": 558,
            "name": "AuthChangeEventMFA"
          }
        ]
      }
    },
    {
      "id": 558,
      "name": "AuthChangeEventMFA",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 30,
          "character": 12
        }
      ],
      "type": {
        "type": "literal",
        "value": "MFA_CHALLENGE_VERIFIED"
      }
    },
    {
      "id": 846,
      "name": "AuthFlowType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 599,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "implicit"
          },
          {
            "type": "literal",
            "value": "pkce"
          }
        ]
      }
    },
    {
      "id": 1103,
      "name": "AuthMFAAdminDeleteFactorParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1079,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1104,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1105,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the MFA factor to delete."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1081,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1106,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user whose factor is being deleted."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1084,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1105, 1106]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1079,
              "character": 45
            }
          ]
        }
      }
    },
    {
      "id": 1094,
      "name": "AuthMFAAdminDeleteFactorResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1066,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1095,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1096,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1068,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1097,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1098,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully deleted."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1070,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1098]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1068,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1099,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1072,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1096, 1099]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1067,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1100,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1101,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1074,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1102,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1074,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1101, 1102]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1074,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1116,
      "name": "AuthMFAAdminListFactorsParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1103,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1117,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1118,
              "name": "userId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1105,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1118]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1103,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 1107,
      "name": "AuthMFAAdminListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "tags": [
          {
            "tag": "expermental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1090,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1108,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1109,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1092,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1110,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1111,
                          "name": "factors",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All factors attached to the user."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1094,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 725,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1111]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1092,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1112,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1096,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1109, 1112]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1091,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1113,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1114,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1098,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1115,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1098,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1114, 1115]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1098,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1036,
      "name": "AuthMFAChallengeResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 936,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1037,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1038,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 938,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1039,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1042,
                          "name": "expires_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 946,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1040,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the newly created challenge."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 940,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1041,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Factor Type which generated the challenge"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 943,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "totp"
                              },
                              {
                                "type": "literal",
                                "value": "phone"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1042, 1040, 1041]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 938,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1043,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 948,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1038, 1043]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 937,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1044,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1045,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 950,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1046,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 950,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1045, 1046]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 950,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1179,
      "name": "AuthMFAEnrollPhoneResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1245,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1180,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1181,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1247,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1182,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1185,
                          "name": "friendly_name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1255,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1183,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1249,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1186,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Phone number of the MFA factor in E.164 format. Used to send messages"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1258,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1184,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of MFA factor."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1252,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "phone"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1185, 1183, 1186, 1184]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1247,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1187,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1260,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1181, 1187]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1246,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1188,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1189,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1263,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1190,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1264,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1189, 1190]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1262,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1026,
      "name": "AuthMFAEnrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 924,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 1163,
            "name": "AuthMFAEnrollTOTPResponse"
          },
          {
            "type": "reference",
            "id": 1179,
            "name": "AuthMFAEnrollPhoneResponse"
          }
        ]
      }
    },
    {
      "id": 1163,
      "name": "AuthMFAEnrollTOTPResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1210,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1164,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1165,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1212,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1166,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1174,
                          "name": "friendly_name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1236,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1214,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1169,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "TOTP enrollment information."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1220,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1170,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1171,
                                  "name": "qr_code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1224,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1172,
                                  "name": "secret",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1229,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1173,
                                  "name": "uri",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1233,
                                      "character": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1171, 1172, 1173]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1220,
                                  "character": 14
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1168,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of MFA factor."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1217,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "totp"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1174, 1167, 1169, 1168]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1212,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1175,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1238,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1165, 1175]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1211,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1176,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1177,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1241,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1178,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1242,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1177, 1178]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1240,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1059,
      "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 969,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1060,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1061,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 971,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1062,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1065,
                          "name": "currentAuthenticationMethods",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 988,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 709,
                              "name": "AMREntry"
                            }
                          }
                        },
                        {
                          "id": 1063,
                          "name": "currentLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Current AAL level of the session."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 973,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 1064,
                          "name": "nextLevel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#challenge}\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 981,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 1058,
                                "name": "AuthenticatorAssuranceLevels"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1065, 1063, 1064]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 971,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1066,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 990,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1061, 1066]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 970,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1067,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1068,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 992,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1069,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 992,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1068, 1069]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 992,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1047,
      "name": "AuthMFAListFactorsResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 952,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1048,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1049,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 954,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1050,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1051,
                          "name": "all",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "All available factors (verified and unverified)."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 956,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 725,
                              "name": "Factor"
                            }
                          }
                        },
                        {
                          "id": 1053,
                          "name": "phone",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Only verified Phone factors. (A subset of `all`.)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 961,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 725,
                              "name": "Factor"
                            }
                          }
                        },
                        {
                          "id": 1052,
                          "name": "totp",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Only verified TOTP factors. (A subset of `all`.)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 959,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "id": 725,
                              "name": "Factor"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1051, 1053, 1052]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 954,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1054,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 963,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1049, 1054]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 953,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1055,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1056,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 965,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1057,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 965,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1056, 1057]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 965,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1027,
      "name": "AuthMFAUnenrollResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 926,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1028,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1029,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 928,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1030,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1031,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "ID of the factor that was successfully unenrolled."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 930,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1031]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 928,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1032,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 932,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1029, 1032]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 927,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1033,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1034,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 934,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1035,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 934,
                      "character": 18
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1034, 1035]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 934,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1013,
      "name": "AuthMFAVerifyResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 899,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1014,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1015,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 901,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1016,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1017,
                          "name": "access_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "New access token (JWT) after successful verification."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 903,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1019,
                          "name": "expires_in",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Number of seconds in which the access token will expire."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 909,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 1020,
                          "name": "refresh_token",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Refresh token you can use to obtain new access tokens when expired."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 912,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1018,
                          "name": "token_type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Type of token, typically `Bearer`."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 906,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1021,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "Updated user profile."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 915,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 740,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1017, 1019, 1020, 1018, 1021]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 901,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1022,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 917,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1015, 1022]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 900,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1023,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1024,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 920,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1025,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 921,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1024, 1025]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 919,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 624,
      "name": "AuthOtpResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "AuthOtpResponse is returned when OTP is used.",
        "text": "{@see AuthResponse}\n"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 144,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 625,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 626,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 146,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 627,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 630,
                          "name": "messageId",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 146,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 629,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 146,
                              "character": 26
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 628,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 146,
                              "character": 14
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [630, 629, 628]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 146,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 631,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 147,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [626, 631]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 145,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 632,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 633,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 150,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 634,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 637,
                          "name": "messageId",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 150,
                              "character": 41
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 636,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 150,
                              "character": 26
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 635,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 150,
                              "character": 14
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [637, 636, 635]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 150,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 638,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 151,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [633, 638]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 149,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 597,
      "name": "AuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 106,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 598,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 599,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 108,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 600,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 602,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 110,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 700,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 601,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 109,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 740,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [602, 601]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 108,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 603,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 112,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [599, 603]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 107,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 604,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 605,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 115,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 606,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 608,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 117,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 607,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 116,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [608, 607]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 115,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 609,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 119,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [605, 609]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 114,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 610,
      "name": "AuthResponsePassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 122,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 611,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 612,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 124,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 613,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 615,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 126,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 700,
                                "name": "Session"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 614,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 125,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 740,
                                "name": "User"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        },
                        {
                          "id": 616,
                          "name": "weak_password",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 127,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "id": 593,
                                "name": "WeakPassword"
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [615, 614, 616]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 124,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 617,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 129,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [612, 617]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 123,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 618,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 619,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 132,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 620,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 622,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 134,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 621,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 133,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [622, 621]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 132,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 623,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 136,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [619, 623]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 131,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 639,
      "name": "AuthTokenResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 154,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 640,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 641,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 156,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 642,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 644,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 158,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 700,
                            "name": "Session"
                          }
                        },
                        {
                          "id": 643,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 157,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 740,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [644, 643]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 156,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 645,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 160,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [641, 645]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 155,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 646,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 647,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 163,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 648,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 650,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 165,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 649,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 164,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [650, 649]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 163,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 651,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 167,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [647, 651]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 162,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 652,
      "name": "AuthTokenResponsePassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 170,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 653,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 654,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 172,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 655,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 657,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 174,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 700,
                            "name": "Session"
                          }
                        },
                        {
                          "id": 656,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 173,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 740,
                            "name": "User"
                          }
                        },
                        {
                          "id": 658,
                          "name": "weakPassword",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 175,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 593,
                            "name": "WeakPassword"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [657, 656, 658]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 172,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 659,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 177,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [654, 659]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 171,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 660,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 661,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 180,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 662,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 664,
                          "name": "session",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 182,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 663,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 181,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 665,
                          "name": "weakPassword",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 183,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [664, 663, 665]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 180,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 666,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 185,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [661, 666]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 179,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1058,
      "name": "AuthenticatorAssuranceLevels",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 967,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "aal1"
          },
          {
            "type": "literal",
            "value": "aal2"
          }
        ]
      }
    },
    {
      "id": 1132,
      "name": "CallRefreshTokenResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1155,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 1133,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1135,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1158,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 1134,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1157,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 700,
                    "name": "Session"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1135, 1134]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1156,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1136,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1138,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1162,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                },
                {
                  "id": 1137,
                  "name": "session",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1161,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1138, 1137]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1160,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 921,
      "name": "EmailOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 726,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change"
          },
          {
            "type": "literal",
            "value": "email"
          }
        ]
      }
    },
    {
      "id": 965,
      "name": "GenerateEmailChangeLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 793,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 966,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 968,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 796,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 969,
              "name": "newEmail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 800,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 970,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 801,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 971,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 967,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 794,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "email_change_current"
                  },
                  {
                    "type": "literal",
                    "value": "email_change_new"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [968, 969, 970, 967]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 793,
              "character": 44
            }
          ]
        }
      }
    },
    {
      "id": 955,
      "name": "GenerateInviteOrMagiclinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 779,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 956,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 958,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 782,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 959,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 783,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 971,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 957,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 780,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "invite"
                  },
                  {
                    "type": "literal",
                    "value": "magiclink"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [958, 959, 957]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 779,
              "character": 46
            }
          ]
        }
      }
    },
    {
      "id": 974,
      "name": "GenerateLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 815,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 949,
            "name": "GenerateSignupLinkParams"
          },
          {
            "type": "reference",
            "id": 955,
            "name": "GenerateInviteOrMagiclinkParams"
          },
          {
            "type": "reference",
            "id": 960,
            "name": "GenerateRecoveryLinkParams"
          },
          {
            "type": "reference",
            "id": 965,
            "name": "GenerateEmailChangeLinkParams"
          }
        ]
      }
    },
    {
      "id": 988,
      "name": "GenerateLinkProperties",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "The properties related to the email link generated"
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 838,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 989,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 990,
              "name": "action_link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 843,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 991,
              "name": "email_otp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 848,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 992,
              "name": "hashed_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The hashed token appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 852,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 993,
              "name": "redirect_to",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The URL appended to the action link."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 854,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 994,
              "name": "verification_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The verification type that the email link is associated to."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 856,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 995,
                "name": "GenerateLinkType"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [990, 991, 992, 993, 994]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 838,
              "character": 37
            }
          ]
        }
      }
    },
    {
      "id": 975,
      "name": "GenerateLinkResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 821,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 976,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 977,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 823,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 978,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 979,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 824,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 988,
                            "name": "GenerateLinkProperties"
                          }
                        },
                        {
                          "id": 980,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 825,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 740,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [979, 980]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 823,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 981,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 827,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [977, 981]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 822,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 982,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 983,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 830,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 984,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 985,
                          "name": "properties",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 831,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        },
                        {
                          "id": 986,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 832,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [985, 986]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 830,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 987,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 834,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [983, 987]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 829,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 995,
      "name": "GenerateLinkType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 859,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "signup"
          },
          {
            "type": "literal",
            "value": "invite"
          },
          {
            "type": "literal",
            "value": "magiclink"
          },
          {
            "type": "literal",
            "value": "recovery"
          },
          {
            "type": "literal",
            "value": "email_change_current"
          },
          {
            "type": "literal",
            "value": "email_change_new"
          }
        ]
      }
    },
    {
      "id": 960,
      "name": "GenerateRecoveryLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 786,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 961,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 963,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 789,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 964,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 790,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 971,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "literal",
                    "value": "redirectTo"
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 962,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 787,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "recovery"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [963, 964, 962]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 786,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 949,
      "name": "GenerateSignupLinkParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 772,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 950,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 952,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 774,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 954,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 776,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 971,
                    "name": "GenerateLinkOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "data"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            },
            {
              "id": 953,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 775,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 951,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 773,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "signup"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [952, 954, 953, 951]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 772,
              "character": 39
            }
          ]
        }
      }
    },
    {
      "id": 569,
      "name": "GoTrueClientOptions",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 58,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 570,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 578,
              "name": "autoRefreshToken",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 68,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 584,
              "name": "debug",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 86,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 585,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 86,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 586,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 587,
                              "name": "message",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 588,
                              "name": "args",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isRest": true
                              },
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 577,
              "name": "detectSessionInUrl",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 66,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 582,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 82,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "name": "Fetch"
              }
            },
            {
              "id": 583,
              "name": "flowType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 84,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 846,
                "name": "AuthFlowType"
              }
            },
            {
              "id": 590,
              "name": "hasCustomAuthorizationHeader",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Set to \"true\" if there is a custom authorization header set globally.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 97,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 572,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 62,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 573,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 62,
                      "character": 12
                    }
                  ],
                  "indexSignature": {
                    "id": 574,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 575,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              }
            },
            {
              "id": 589,
              "name": "lock",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 92,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 560,
                "name": "LockFunc"
              }
            },
            {
              "id": 579,
              "name": "persistSession",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 70,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 580,
              "name": "storage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 72,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1126,
                "name": "SupportedStorage"
              }
            },
            {
              "id": 576,
              "name": "storageKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 571,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 60,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 581,
              "name": "userStorage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Stores the user object in a separate storage location from the rest of the session data. When non-null, `storage` will only store a JSON object containing the access and refresh token and some adjacent metadata, while `userStorage` will only contain the user object under the key `storageKey + '-user'`.",
                "text": "When this option is set and cookie storage is used, `getSession()` and other functions that load a session from the cookie store might not return back a user. It's very important to always use `getUser()` to fetch a user object in those scenarios.\n",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 80,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1126,
                "name": "SupportedStorage"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [578, 584, 577, 582, 583, 590, 572, 589, 579, 580, 576, 571, 581]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 58,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 1129,
      "name": "InitializeResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1153,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1130,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1131,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1153,
                  "character": 33
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1131]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1153,
              "character": 31
            }
          ]
        }
      }
    },
    {
      "id": 1191,
      "name": "JwtHeader",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1267,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1192,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1193,
              "name": "alg",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1268,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "RS256"
                  },
                  {
                    "type": "literal",
                    "value": "ES256"
                  },
                  {
                    "type": "literal",
                    "value": "HS256"
                  }
                ]
              }
            },
            {
              "id": 1194,
              "name": "kid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1269,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1195,
              "name": "typ",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1270,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1193, 1194, 1195]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1267,
              "character": 24
            }
          ]
        }
      }
    },
    {
      "id": 1206,
      "name": "JwtPayload",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1284,
          "character": 12
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "id": 1196,
            "name": "RequiredClaims"
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1207,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1284,
                  "character": 42
                }
              ],
              "indexSignature": {
                "id": 1208,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 1209,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        ]
      }
    },
    {
      "id": 560,
      "name": "LockFunc",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 56,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 561,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 56,
              "character": 23
            }
          ],
          "signatures": [
            {
              "id": 562,
              "name": "__type",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 568,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 563,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Name of the lock to be acquired."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 564,
                  "name": "acquireTimeout",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 565,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operation to execute when the lock is acquired.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 566,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 56,
                          "character": 69
                        }
                      ],
                      "signatures": [
                        {
                          "id": 567,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 568,
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 568,
                    "name": "R"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      }
    },
    {
      "id": 1009,
      "name": "MFAChallengeAndVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 892,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1010,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1012,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 896,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1011,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 894,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1012, 1011]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 892,
              "character": 42
            }
          ]
        }
      }
    },
    {
      "id": 1005,
      "name": "MFAChallengeParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 885,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1006,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1008,
              "name": "channel",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 889,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "sms"
                  },
                  {
                    "type": "literal",
                    "value": "whatsapp"
                  }
                ]
              }
            },
            {
              "id": 1007,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor to be challenged. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 887,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1008, 1007]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 885,
              "character": 33
            }
          ]
        }
      }
    },
    {
      "id": 996,
      "name": "MFAEnrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 867,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 1153,
            "name": "MFAEnrollTOTPParams"
          },
          {
            "type": "reference",
            "id": 1158,
            "name": "MFAEnrollPhoneParams"
          }
        ]
      }
    },
    {
      "id": 1158,
      "name": "MFAEnrollPhoneParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1201,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1159,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1160,
              "name": "factorType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The type of factor being enrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1203,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "phone"
              }
            },
            {
              "id": 1161,
              "name": "friendlyName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Human readable name assigned to the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1205,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1162,
              "name": "phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1207,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1160, 1161, 1162]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1201,
              "character": 35
            }
          ]
        }
      }
    },
    {
      "id": 1153,
      "name": "MFAEnrollTOTPParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1193,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1154,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1155,
              "name": "factorType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The type of factor being enrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1195,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "totp"
              }
            },
            {
              "id": 1157,
              "name": "friendlyName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Human readable name assigned to the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1199,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1156,
              "name": "issuer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Domain which the user is enrolled with."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1197,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1155, 1157, 1156]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1193,
              "character": 34
            }
          ]
        }
      }
    },
    {
      "id": 997,
      "name": "MFAUnenrollParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 869,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 998,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 999,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being unenrolled."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 871,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [999]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 869,
              "character": 32
            }
          ]
        }
      }
    },
    {
      "id": 1000,
      "name": "MFAVerifyParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 874,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1001,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1003,
              "name": "challengeId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the challenge being verified. Returned in challenge()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 879,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1004,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Verification code provided by the user."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 882,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1002,
              "name": "factorId",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor being verified. Returned in enroll()."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 876,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1003, 1004, 1002]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 874,
              "character": 30
            }
          ]
        }
      }
    },
    {
      "id": 920,
      "name": "MobileOtpType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 725,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "sms"
          },
          {
            "type": "literal",
            "value": "phone_change"
          }
        ]
      }
    },
    {
      "id": 667,
      "name": "OAuthResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 188,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 668,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 669,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 190,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 670,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 671,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 191,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 557,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 672,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 192,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [671, 672]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 190,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 673,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 194,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [669, 673]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 189,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 674,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 675,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 197,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 676,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 677,
                          "name": "provider",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 198,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 557,
                            "name": "Provider"
                          }
                        },
                        {
                          "id": 678,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 199,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [677, 678]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 197,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 679,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 201,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [675, 679]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 196,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1146,
      "name": "PageParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1172,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1147,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1148,
              "name": "page",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The page number"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1174,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1149,
              "name": "perPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Number of items returned per page"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1176,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1148, 1149]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1172,
              "character": 25
            }
          ]
        }
      }
    },
    {
      "id": 1139,
      "name": "Pagination",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1165,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1140,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1142,
              "name": "lastPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1168,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1141,
              "name": "nextPage",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1167,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            },
            {
              "id": 1143,
              "name": "total",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1169,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1142, 1141, 1143]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1165,
              "character": 25
            }
          ],
          "indexSignature": {
            "id": 1144,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 1145,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      }
    },
    {
      "id": 557,
      "name": "Provider",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "One of the providers supported by GoTrue."
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 6,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "apple"
          },
          {
            "type": "literal",
            "value": "azure"
          },
          {
            "type": "literal",
            "value": "bitbucket"
          },
          {
            "type": "literal",
            "value": "discord"
          },
          {
            "type": "literal",
            "value": "facebook"
          },
          {
            "type": "literal",
            "value": "figma"
          },
          {
            "type": "literal",
            "value": "github"
          },
          {
            "type": "literal",
            "value": "gitlab"
          },
          {
            "type": "literal",
            "value": "google"
          },
          {
            "type": "literal",
            "value": "kakao"
          },
          {
            "type": "literal",
            "value": "keycloak"
          },
          {
            "type": "literal",
            "value": "linkedin"
          },
          {
            "type": "literal",
            "value": "linkedin_oidc"
          },
          {
            "type": "literal",
            "value": "notion"
          },
          {
            "type": "literal",
            "value": "slack"
          },
          {
            "type": "literal",
            "value": "slack_oidc"
          },
          {
            "type": "literal",
            "value": "spotify"
          },
          {
            "type": "literal",
            "value": "twitch"
          },
          {
            "type": "literal",
            "value": "twitter"
          },
          {
            "type": "literal",
            "value": "workos"
          },
          {
            "type": "literal",
            "value": "zoom"
          },
          {
            "type": "literal",
            "value": "fly"
          }
        ]
      }
    },
    {
      "id": 1196,
      "name": "RequiredClaims",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1273,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1197,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1204,
              "name": "aal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1280,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1058,
                "name": "AuthenticatorAssuranceLevels"
              }
            },
            {
              "id": 1200,
              "name": "aud",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1276,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ]
              }
            },
            {
              "id": 1201,
              "name": "exp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1277,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1202,
              "name": "iat",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1278,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1198,
              "name": "iss",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1274,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1203,
              "name": "role",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1279,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1205,
              "name": "session_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1281,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1199,
              "name": "sub",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1275,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1204, 1200, 1201, 1202, 1198, 1203, 1205, 1199]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1273,
              "character": 29
            }
          ]
        }
      }
    },
    {
      "id": 922,
      "name": "ResendParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 728,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 923,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 925,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 731,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 926,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 732,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 927,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 929,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 736,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 928,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 734,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [929, 928]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 732,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 924,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 730,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 921,
                        "name": "EmailOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "email_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [925, 926, 924]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 729,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 930,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 933,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 742,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 934,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 935,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 744,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [935]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 742,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 932,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 741,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 931,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 740,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 920,
                        "name": "MobileOtpType"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "sms"
                          },
                          {
                            "type": "literal",
                            "value": "phone_change"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Extract",
                    "package": "typescript",
                    "name": "Extract"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [933, 932, 931]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 739,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 680,
      "name": "SSOResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 204,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 681,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 682,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 206,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 683,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 684,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "comment": {
                            "shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
                            "text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 214,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [684]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 206,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 685,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 216,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [682, 685]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 205,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 686,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 687,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 219,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                },
                {
                  "id": 688,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 220,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [687, 688]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 218,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 793,
      "name": "SignInAnonymouslyCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 488,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 794,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 795,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 489,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 796,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 798,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 497,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 797,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                        "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 495,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [798, 797]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 489,
                      "character": 12
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [795]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 488,
              "character": 43
            }
          ]
        }
      }
    },
    {
      "id": 859,
      "name": "SignInWithIdTokenCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 615,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 860,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 864,
              "name": "access_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 621,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 865,
              "name": "nonce",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 623,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 866,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 624,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 867,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 868,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 626,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [868]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 624,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 861,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated)."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 617,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "google"
                  },
                  {
                    "type": "literal",
                    "value": "apple"
                  },
                  {
                    "type": "literal",
                    "value": "azure"
                  },
                  {
                    "type": "literal",
                    "value": "facebook"
                  },
                  {
                    "type": "literal",
                    "value": "kakao"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 862,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 617,
                              "character": 76
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 863,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 619,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [864, 865, 866, 861, 863]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 615,
              "character": 43
            }
          ]
        }
      }
    },
    {
      "id": 847,
      "name": "SignInWithOAuthCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 600,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 848,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 850,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 603,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 851,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 854,
                      "name": "queryParams",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An object of query params"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 609,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 855,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 609,
                              "character": 18
                            }
                          ],
                          "indexSignature": {
                            "id": 856,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 857,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 852,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 605,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 853,
                      "name": "scopes",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A space-separated list of scopes granted to the OAuth application."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 607,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 858,
                      "name": "skipBrowserRedirect",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 611,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [854, 852, 853, 858]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 603,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 849,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "One of the providers supported by GoTrue."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 602,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 557,
                "name": "Provider"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [850, 849]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 600,
              "character": 41
            }
          ]
        }
      }
    },
    {
      "id": 816,
      "name": "SignInWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 539,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 817,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 818,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 542,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 820,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 545,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 821,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 822,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 547,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [822]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 545,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 819,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 544,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [818, 820, 819]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 540,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 823,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 826,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 555,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 827,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 828,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 557,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [828]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 555,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 825,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 554,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 824,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 552,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [826, 825, 824]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 550,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 829,
      "name": "SignInWithPasswordlessCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 561,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 830,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 831,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 564,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 832,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 565,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 833,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 837,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 577,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 836,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 575,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 834,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 567,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 835,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 569,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [837, 836, 834, 835]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 565,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [831, 832]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 562,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 838,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 840,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 583,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 841,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 844,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 593,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 845,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 595,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 843,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 591,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 842,
                          "name": "shouldCreateUser",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to false, this method will not create a new user. Defaults to true."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 585,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [844, 845, 843, 842]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 583,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 839,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 582,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [840, 839]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 580,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 936,
      "name": "SignInWithSSO",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 748,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 937,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 939,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 753,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 940,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 942,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 757,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 941,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 755,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [942, 941]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 753,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 938,
                  "name": "providerId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "UUID of the SSO provider to invoke single-sign on to."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 751,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [939, 938]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 749,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 943,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 944,
                  "name": "domain",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Domain name of the organization for which to invoke single-sign on."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 762,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 945,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 764,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 946,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 948,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 768,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 947,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they have signed-in."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 766,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [948, 947]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 764,
                          "character": 16
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [944, 945]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 760,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1150,
      "name": "SignOut",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1179,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 1151,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 1152,
              "name": "scope",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1190,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "global"
                  },
                  {
                    "type": "literal",
                    "value": "local"
                  },
                  {
                    "type": "literal",
                    "value": "others"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1152]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1179,
              "character": 22
            }
          ]
        }
      }
    },
    {
      "id": 1218,
      "name": "SignOutScope",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1297,
          "character": 12
        }
      ],
      "type": {
        "type": "indexedAccess",
        "indexType": {
          "type": "intrinsic",
          "name": "number"
        },
        "objectType": {
          "type": "query",
          "queryType": {
            "type": "reference",
            "id": 1217,
            "name": "SIGN_OUT_SCOPES"
          }
        }
      }
    },
    {
      "id": 799,
      "name": "SignUpWithPasswordCredentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 501,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 800,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 801,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email address."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 504,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 803,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 507,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 804,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 807,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 517,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 806,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 515,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        },
                        {
                          "id": 805,
                          "name": "emailRedirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The redirect url embedded in the email link"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 509,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [807, 806, 805]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 507,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 802,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 506,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [801, 803, 802]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 502,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 808,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 811,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 525,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 812,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 814,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 533,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 815,
                          "name": "channel",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 535,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "whatsapp"
                              }
                            ]
                          }
                        },
                        {
                          "id": 813,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 531,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [814, 815, 813]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 525,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 810,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's password."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 524,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 809,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's phone number."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 522,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [811, 810, 809]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 520,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 869,
      "name": "SolanaWallet",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 630,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 870,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 874,
              "name": "publicKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 632,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 875,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 876,
                          "name": "toBase58",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 633,
                              "character": 4
                            }
                          ],
                          "signatures": [
                            {
                              "id": 877,
                              "name": "toBase58",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [876]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 632,
                          "character": 14
                        }
                      ]
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            },
            {
              "id": 871,
              "name": "signIn",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 631,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 872,
                  "name": "signIn",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 873,
                      "name": "inputs",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "SolanaSignInInput"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "SolanaSignInOutput"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "name": "SolanaSignInOutput"
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 878,
              "name": "signMessage",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 636,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 879,
                  "name": "signMessage",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 880,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "Uint8Array",
                        "package": "typescript",
                        "name": "Uint8Array"
                      }
                    },
                    {
                      "id": 881,
                      "name": "encoding",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Uint8Array",
                            "package": "typescript",
                            "name": "Uint8Array"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [874]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [871, 878]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 630,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 882,
      "name": "SolanaWeb3Credentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 639,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 883,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 884,
                  "name": "chain",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 641,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "solana"
                  }
                },
                {
                  "id": 887,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 649,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 888,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 890,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 654,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 891,
                          "name": "signInWithSolana",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 656,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "SolanaSignInInput"
                                  },
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "version"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "chain"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "domain"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "uri"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "statement"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "Omit",
                                "package": "typescript",
                                "name": "Omit"
                              }
                            ],
                            "qualifiedName": "Partial",
                            "package": "typescript",
                            "name": "Partial"
                          }
                        },
                        {
                          "id": 889,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "URL to use with the wallet interface. Some wallets do not allow signing a message for URLs different from the current page."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 651,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [890, 891, 889]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 649,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 886,
                  "name": "statement",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Optional statement to include in the Sign in with Solana message. Must not include new line characters. Most wallets like Phantom **require specifying a statement!**"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 647,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 885,
                  "name": "wallet",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Wallet interface to use. If not specified will default to `window.solana`."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 644,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 869,
                    "name": "SolanaWallet"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [884, 887, 886, 885]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 640,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 892,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 893,
                  "name": "chain",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 662,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "solana"
                  }
                },
                {
                  "id": 894,
                  "name": "message",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Sign in with Solana compatible message. Must include `Issued At`, `URI` and `Version`."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 665,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 896,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 670,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 897,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 898,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 672,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [898]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 670,
                          "character": 16
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 895,
                  "name": "signature",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Ed25519 signature of the message."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 668,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "Uint8Array",
                    "package": "typescript",
                    "name": "Uint8Array"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [893, 894, 896, 895]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 661,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 1126,
      "name": "SupportedStorage",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1140,
          "character": 12
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "qualifiedName": "Storage",
                    "package": "typescript",
                    "name": "Storage"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "getItem"
                      },
                      {
                        "type": "literal",
                        "value": "setItem"
                      },
                      {
                        "type": "literal",
                        "value": "removeItem"
                      }
                    ]
                  }
                ],
                "qualifiedName": "Pick",
                "package": "typescript",
                "name": "Pick"
              }
            ],
            "name": "PromisifyMethods"
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 1127,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1128,
                  "name": "isServer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1150,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1128]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1142,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 689,
      "name": "UserResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 223,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 690,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 691,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 225,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 692,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 693,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 226,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 740,
                            "name": "User"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [693]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 225,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 694,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 228,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": null
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [691, 694]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 224,
                  "character": 4
                }
              ]
            }
          },
          {
            "type": "reflection",
            "declaration": {
              "id": 695,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 696,
                  "name": "data",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 231,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 697,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 698,
                          "name": "user",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 232,
                              "character": 8
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": null
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [698]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 231,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 699,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 234,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1237,
                    "name": "AuthError"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [696, 699]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 230,
                  "character": 4
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 900,
      "name": "VerifyOtpParams",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 678,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "id": 901,
            "name": "VerifyMobileOtpParams"
          },
          {
            "type": "reference",
            "id": 909,
            "name": "VerifyEmailOtpParams"
          },
          {
            "type": "reference",
            "id": 917,
            "name": "VerifyTokenHashParams"
          }
        ]
      }
    },
    {
      "id": 593,
      "name": "WeakPassword",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 101,
          "character": 12
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 594,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 596,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 103,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 595,
              "name": "reasons",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 102,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 591,
                  "name": "WeakPasswordReasons"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [596, 595]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 101,
              "character": 27
            }
          ]
        }
      }
    },
    {
      "id": 591,
      "name": "WeakPasswordReasons",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 100,
          "character": 12
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "length"
          },
          {
            "type": "literal",
            "value": "characters"
          },
          {
            "type": "literal",
            "value": "pwned"
          },
          {
            "type": "intersection",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 592,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 100,
                      "character": 80
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 899,
      "name": "Web3Credentials",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 676,
          "character": 12
        }
      ],
      "type": {
        "type": "reference",
        "id": 882,
        "name": "SolanaWeb3Credentials"
      }
    },
    {
      "id": 531,
      "name": "AuthAdminApi",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "src/AuthAdminApi.ts",
          "line": 3,
          "character": 6
        }
      ],
      "type": {
        "type": "query",
        "queryType": {
          "type": "reference",
          "id": 1,
          "name": "default"
        }
      },
      "defaultValue": "GoTrueAdminApi"
    },
    {
      "id": 532,
      "name": "AuthClient",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "src/AuthClient.ts",
          "line": 3,
          "character": 6
        }
      ],
      "type": {
        "type": "query",
        "queryType": {
          "type": "reference",
          "id": 78,
          "name": "default"
        }
      },
      "defaultValue": "GoTrueClient"
    },
    {
      "id": 1217,
      "name": "SIGN_OUT_SCOPES",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "src/lib/types.ts",
          "line": 1296,
          "character": 13
        }
      ],
      "type": {
        "type": "typeOperator",
        "operator": "readonly",
        "target": {
          "type": "tuple",
          "elements": [
            {
              "type": "literal",
              "value": "global"
            },
            {
              "type": "literal",
              "value": "local"
            },
            {
              "type": "literal",
              "value": "others"
            }
          ]
        }
      },
      "defaultValue": "..."
    },
    {
      "id": 546,
      "name": "lockInternals",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "comment": {
        "tags": [
          {
            "tag": "experimental",
            "text": "\n"
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 6,
          "character": 13
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 547,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 548,
              "name": "debug",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "experimental",
                    "text": "\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/lib/locks.ts",
                  "line": 10,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "!!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  )"
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [548]
            }
          ]
        }
      },
      "defaultValue": "..."
    },
    {
      "id": 1222,
      "name": "isAuthApiError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 41,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1223,
          "name": "isAuthApiError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1224,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1247,
              "name": "AuthApiError"
            }
          }
        }
      ]
    },
    {
      "id": 1219,
      "name": "isAuthError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 26,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1220,
          "name": "isAuthError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1221,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1237,
              "name": "AuthError"
            }
          }
        }
      ]
    },
    {
      "id": 1228,
      "name": "isAuthImplicitGrantRedirectError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 105,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1229,
          "name": "isAuthImplicitGrantRedirectError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1230,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1304,
              "name": "AuthImplicitGrantRedirectError"
            }
          }
        }
      ]
    },
    {
      "id": 1231,
      "name": "isAuthRetryableFetchError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 135,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1232,
          "name": "isAuthRetryableFetchError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1233,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1358,
              "name": "AuthRetryableFetchError"
            }
          }
        }
      ]
    },
    {
      "id": 1225,
      "name": "isAuthSessionMissingError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 72,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1226,
          "name": "isAuthSessionMissingError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1227,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1279,
              "name": "AuthSessionMissingError"
            }
          }
        }
      ]
    },
    {
      "id": 1234,
      "name": "isAuthWeakPasswordError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/errors.ts",
          "line": 157,
          "character": 16
        }
      ],
      "signatures": [
        {
          "id": 1235,
          "name": "isAuthWeakPasswordError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1236,
              "name": "error",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "predicate",
            "name": "error",
            "asserts": false,
            "targetType": {
              "type": "reference",
              "id": 1368,
              "name": "AuthWeakPasswordError"
            }
          }
        }
      ]
    },
    {
      "id": 533,
      "name": "navigatorLock",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 59,
          "character": 22
        }
      ],
      "signatures": [
        {
          "id": 534,
          "name": "navigatorLock",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nGoTrueClient}.",
            "text": "You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n"
          },
          "typeParameter": [
            {
              "id": 535,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "parameters": [
            {
              "id": 536,
              "name": "name",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "Name of the lock to be acquired."
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 537,
              "name": "acquireTimeout",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 538,
              "name": "fn",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The operation to run once the lock is acquired.\n"
              },
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 539,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 540,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 535,
                            "name": "R"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 535,
                "name": "R"
              }
            ],
            "qualifiedName": "Promise",
            "package": "typescript",
            "name": "Promise"
          }
        }
      ]
    },
    {
      "id": 549,
      "name": "processLock",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "src/lib/locks.ts",
          "line": 171,
          "character": 22
        }
      ],
      "signatures": [
        {
          "id": 550,
          "name": "processLock",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "Implements a global exclusive lock that works only in the current process.\nUseful for environments like React Native or other non-browser\nsingle-process (i.e. no concept of \"tabs\") environments.",
            "text": "Use {@link #navigatorLock} in browser environments.\n"
          },
          "typeParameter": [
            {
              "id": 551,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "parameters": [
            {
              "id": 552,
              "name": "name",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "Name of the lock to be acquired."
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 553,
              "name": "acquireTimeout",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
              },
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 554,
              "name": "fn",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "shortText": "The operation to run once the lock is acquired.\n"
              },
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 555,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 556,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 551,
                            "name": "R"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 551,
                "name": "R"
              }
            ],
            "qualifiedName": "Promise",
            "package": "typescript",
            "name": "Promise"
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [
        1247, 1237, 1304, 1295, 1380, 1287, 1331, 1358, 1279, 1257, 1368, 1267, 1, 78, 541
      ]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [
        709, 772, 725, 971, 1119, 1070, 1210, 700, 785, 740, 733, 766, 713, 737, 909, 901, 917
      ]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [
        559, 558, 846, 1103, 1094, 1116, 1107, 1036, 1179, 1026, 1163, 1059, 1047, 1027, 1013, 624,
        597, 610, 639, 652, 1058, 1132, 921, 965, 955, 974, 988, 975, 995, 960, 949, 569, 1129,
        1191, 1206, 560, 1009, 1005, 996, 1158, 1153, 997, 1000, 920, 667, 1146, 1139, 557, 1196,
        922, 680, 793, 859, 847, 816, 829, 936, 1150, 1218, 799, 869, 882, 1126, 689, 900, 593, 591,
        899
      ]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [531, 532, 1217, 546]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [1222, 1219, 1228, 1231, 1225, 1234, 533, 549]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 1,
      "character": 0
    }
  ]
}
