{
  "name": "Combined Specs",
  "children": [
    {
      "id": 0,
      "name": "@supabase/supabase-js",
      "kind": 1,
      "flags": {},
      "originalName": "",
      "children": [
        {
          "id": 1,
          "name": "index",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 227,
              "name": "QueryData",
              "kind": 16777216,
              "kindString": "Reference",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 22,
                  "character": 50
                }
              ],
              "target": 123
            },
            {
              "id": 228,
              "name": "QueryError",
              "kind": 16777216,
              "kindString": "Reference",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 22,
                  "character": 61
                }
              ],
              "target": 127
            },
            {
              "id": 226,
              "name": "QueryResult",
              "kind": 16777216,
              "kindString": "Reference",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 22,
                  "character": 37
                }
              ],
              "target": 121
            },
            {
              "id": 225,
              "name": "SupabaseClientOptions",
              "kind": 16777216,
              "kindString": "Reference",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 22,
                  "character": 14
                }
              ],
              "target": 70
            },
            {
              "id": 130,
              "name": "SupabaseClient",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "comment": {
                "shortText": "Supabase Client.",
                "text": "An isomorphic Javascript client for interacting with Postgres.\n"
              },
              "children": [
                {
                  "id": 131,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 70,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 132,
                      "name": "new SupabaseClient",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Create a new client for use in the browser."
                      },
                      "typeParameter": [
                        {
                          "id": 133,
                          "name": "Database",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "default": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        {
                          "id": 134,
                          "name": "SchemaName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "default": {
                            "type": "conditional",
                            "checkType": {
                              "type": "literal",
                              "value": "public"
                            },
                            "extendsType": {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 133,
                                "name": "Database"
                              }
                            },
                            "trueType": {
                              "type": "literal",
                              "value": "public"
                            },
                            "falseType": {
                              "type": "intersection",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "typeOperator",
                                  "operator": "keyof",
                                  "target": {
                                    "type": "reference",
                                    "id": 133,
                                    "name": "Database"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 135,
                          "name": "Schema",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 116,
                            "name": "GenericSchema"
                          },
                          "default": {
                            "type": "conditional",
                            "checkType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "reference",
                                "id": 134,
                                "name": "SchemaName"
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 133,
                                "name": "Database"
                              }
                            },
                            "extendsType": {
                              "type": "reference",
                              "id": 116,
                              "name": "GenericSchema"
                            },
                            "trueType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "intrinsic",
                                "name": "any"
                              },
                              "objectType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 136,
                          "name": "supabaseUrl",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique Supabase URL which is supplied when you create a new project in your project dashboard."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 137,
                          "name": "supabaseKey",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique Supabase Key which is supplied when you create a new project in your project dashboard."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 138,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 70,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 134,
                                "name": "SchemaName"
                              }
                            ],
                            "name": "SupabaseClientOptions",
                            "dereferenced": {
                              "id": 70,
                              "name": "SupabaseClientOptions",
                              "kind": 4194304,
                              "kindString": "Type alias",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 11,
                                  "character": 12
                                }
                              ],
                              "typeParameter": [
                                {
                                  "id": 92,
                                  "name": "SchemaName",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 71,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 75,
                                      "name": "auth",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 19,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 76,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 77,
                                              "name": "autoRefreshToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 23,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            },
                                            {
                                              "id": 83,
                                              "name": "debug",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 47,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "indexedAccess",
                                                "indexType": {
                                                  "type": "literal",
                                                  "value": "debug"
                                                },
                                                "objectType": {
                                                  "type": "reference",
                                                  "id": 68,
                                                  "name": "SupabaseAuthClientOptions"
                                                }
                                              }
                                            },
                                            {
                                              "id": 80,
                                              "name": "detectSessionInUrl",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 35,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            },
                                            {
                                              "id": 82,
                                              "name": "flowType",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 43,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "indexedAccess",
                                                "indexType": {
                                                  "type": "literal",
                                                  "value": "flowType"
                                                },
                                                "objectType": {
                                                  "type": "reference",
                                                  "id": 68,
                                                  "name": "SupabaseAuthClientOptions"
                                                }
                                              }
                                            },
                                            {
                                              "id": 84,
                                              "name": "lock",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                                "tags": [
                                                  {
                                                    "tag": "experimental",
                                                    "text": "\n"
                                                  }
                                                ]
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 53,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "indexedAccess",
                                                "indexType": {
                                                  "type": "literal",
                                                  "value": "lock"
                                                },
                                                "objectType": {
                                                  "type": "reference",
                                                  "id": 68,
                                                  "name": "SupabaseAuthClientOptions"
                                                }
                                              }
                                            },
                                            {
                                              "id": 79,
                                              "name": "persistSession",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 31,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            },
                                            {
                                              "id": 81,
                                              "name": "storage",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A storage provider. Used to store the logged-in session."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 39,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "indexedAccess",
                                                "indexType": {
                                                  "type": "literal",
                                                  "value": "storage"
                                                },
                                                "objectType": {
                                                  "type": "reference",
                                                  "id": 68,
                                                  "name": "SupabaseAuthClientOptions"
                                                }
                                              }
                                            },
                                            {
                                              "id": 78,
                                              "name": "storageKey",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Optional key name used for storing tokens in local storage."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 27,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [77, 83, 80, 82, 84, 79, 81, 78]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 19,
                                              "character": 9
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 72,
                                      "name": "db",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 73,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 74,
                                              "name": "schema",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 16,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "id": 92,
                                                "name": "SchemaName",
                                                "dereferenced": {}
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [74]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 15,
                                              "character": 7
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 86,
                                      "name": "global",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 59,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 87,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 88,
                                              "name": "fetch",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A custom `fetch` implementation."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 63,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "id": 69,
                                                "name": "Fetch",
                                                "dereferenced": {
                                                  "id": 69,
                                                  "name": "Fetch",
                                                  "kind": 4194304,
                                                  "kindString": "Type alias",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 9,
                                                      "character": 12
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "query",
                                                    "queryType": {
                                                      "type": "reference",
                                                      "id": 28,
                                                      "qualifiedName": "fetch",
                                                      "package": "typescript",
                                                      "name": "fetch"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "id": 89,
                                              "name": "headers",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Optional headers for initializing the client."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 67,
                                                  "character": 4
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  },
                                                  {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                ],
                                                "qualifiedName": "Record",
                                                "package": "typescript",
                                                "name": "Record"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [88, 89]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 59,
                                              "character": 11
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 85,
                                      "name": "realtime",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Options passed to the realtime-js instance"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 58,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RealtimeClientOptions",
                                        "package": "@supabase/realtime-js",
                                        "name": "RealtimeClientOptions"
                                      }
                                    },
                                    {
                                      "id": 90,
                                      "name": "accessToken",
                                      "kind": 2048,
                                      "kindString": "Method",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 80,
                                          "character": 2
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 91,
                                          "name": "accessToken",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Optional function for using a third-party authentication system with\nSupabase. The function should return an access token or ID token (JWT) by\nobtaining it from the third-party auth client library. Note that this\nfunction may be called concurrently and many times. Use memoization and\nlocking techniques if this is not supported by the client libraries.",
                                            "text": "When set, the `auth` namespace of the Supabase client cannot be used.\nCreate another client if you wish to use Supabase Auth and third-party\nauthentications concurrently in the same application.\n"
                                          },
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": null
                                                  },
                                                  {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "qualifiedName": "Promise",
                                            "package": "typescript",
                                            "name": "Promise"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [75, 72, 86, 85]
                                    },
                                    {
                                      "title": "Methods",
                                      "kind": 2048,
                                      "children": [90]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 11,
                                      "character": 48
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 130,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 133,
                            "name": "Database"
                          },
                          {
                            "type": "reference",
                            "id": 134,
                            "name": "SchemaName"
                          },
                          {
                            "type": "reference",
                            "id": 135,
                            "name": "Schema"
                          }
                        ],
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 153,
                  "name": "accessToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 54,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 154,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 155,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 139,
                  "name": "auth",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies."
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 43,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "SupabaseAuthClient"
                  }
                },
                {
                  "id": 142,
                  "name": "authUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 47,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 152,
                  "name": "changedAccessToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 53,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 147,
                  "name": "fetch",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true,
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 52,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 148,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 149,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 150,
                              "name": "input",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "RequestInfo",
                                    "package": "typescript",
                                    "name": "RequestInfo"
                                  },
                                  {
                                    "type": "reference",
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 151,
                              "name": "init",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RequestInit",
                                "package": "typescript",
                                "name": "RequestInit"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Response",
                                "package": "typescript",
                                "name": "Response"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 144,
                  "name": "functionsUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 49,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 156,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 56,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 140,
                  "name": "realtime",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 44,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "RealtimeClient",
                    "package": "@supabase/realtime-js",
                    "name": "default"
                  }
                },
                {
                  "id": 141,
                  "name": "realtimeUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 46,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 145,
                  "name": "rest",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 50,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 133,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 134,
                        "name": "SchemaName"
                      },
                      {
                        "type": "reference",
                        "id": 135,
                        "name": "Schema"
                      }
                    ],
                    "qualifiedName": "PostgrestClient",
                    "package": "@supabase/postgrest-js",
                    "name": "default"
                  }
                },
                {
                  "id": 146,
                  "name": "storageKey",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 51,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 143,
                  "name": "storageUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 48,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 158,
                  "name": "supabaseKey",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 157,
                  "name": "supabaseUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isProtected": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 159,
                  "name": "functions",
                  "kind": 262144,
                  "kindString": "Accessor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 139,
                      "character": 6
                    }
                  ],
                  "getSignature": [
                    {
                      "id": 160,
                      "name": "functions",
                      "kind": 524288,
                      "kindString": "Get signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Supabase Functions allows you to deploy and invoke edge functions."
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "FunctionsClient",
                        "package": "@supabase/functions-js",
                        "name": "FunctionsClient"
                      }
                    }
                  ]
                },
                {
                  "id": 161,
                  "name": "storage",
                  "kind": 262144,
                  "kindString": "Accessor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 149,
                      "character": 6
                    }
                  ],
                  "getSignature": [
                    {
                      "id": 162,
                      "name": "storage",
                      "kind": 524288,
                      "kindString": "Get signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Supabase Storage allows you to manage user-generated content, such as photos or videos."
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "StorageClient",
                        "package": "@supabase/storage-js",
                        "name": "StorageClient"
                      }
                    }
                  ]
                },
                {
                  "id": 200,
                  "name": "_getAccessToken",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isPrivate": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 269,
                      "character": 16
                    }
                  ],
                  "signatures": [
                    {
                      "id": 201,
                      "name": "_getAccessToken",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 217,
                  "name": "_handleTokenChanged",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isPrivate": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 329,
                      "character": 10
                    }
                  ],
                  "signatures": [
                    {
                      "id": 218,
                      "name": "_handleTokenChanged",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 219,
                          "name": "event",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "qualifiedName": "AuthChangeEvent",
                            "package": "@supabase/auth-js",
                            "name": "AuthChangeEvent"
                          }
                        },
                        {
                          "id": 220,
                          "name": "source",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "CLIENT"
                              },
                              {
                                "type": "literal",
                                "value": "STORAGE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 221,
                          "name": "token",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                },
                {
                  "id": 211,
                  "name": "_initRealtimeClient",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isPrivate": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 315,
                      "character": 10
                    }
                  ],
                  "signatures": [
                    {
                      "id": 212,
                      "name": "_initRealtimeClient",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 213,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RealtimeClientOptions",
                            "package": "@supabase/realtime-js",
                            "name": "RealtimeClientOptions"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeClient",
                        "package": "@supabase/realtime-js",
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 202,
                  "name": "_initSupabaseAuthClient",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isPrivate": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 279,
                      "character": 10
                    }
                  ],
                  "signatures": [
                    {
                      "id": 203,
                      "name": "_initSupabaseAuthClient",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 204,
                          "name": "__namedParameters",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 68,
                            "name": "SupabaseAuthClientOptions",
                            "dereferenced": {
                              "id": 68,
                              "name": "SupabaseAuthClientOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 7,
                                  "character": 17
                                }
                              ],
                              "extendedTypes": [
                                {
                                  "type": "reference",
                                  "name": "AuthClientOptions"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 205,
                          "name": "headers",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 206,
                          "name": "fetch",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 207,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 208,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 209,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 210,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "SupabaseAuthClient"
                      }
                    }
                  ]
                },
                {
                  "id": 214,
                  "name": "_listenForAuthEvents",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {
                    "isPrivate": true
                  },
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 322,
                      "character": 10
                    }
                  ],
                  "signatures": [
                    {
                      "id": 215,
                      "name": "_listenForAuthEvents",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 216,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    }
                  ]
                },
                {
                  "id": 189,
                  "name": "channel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 241,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 190,
                      "name": "channel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a Realtime channel with Broadcast, Presence, and Postgres Changes."
                      },
                      "parameters": [
                        {
                          "id": 191,
                          "name": "name",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The name of the Realtime channel."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 192,
                          "name": "opts",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The options to pass to the Realtime channel.\n\n"
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RealtimeChannelOptions",
                            "package": "@supabase/realtime-js",
                            "name": "RealtimeChannelOptions"
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeChannel",
                        "package": "@supabase/realtime-js",
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 163,
                  "name": "from",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 154,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 164,
                      "name": "from",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Perform a query on a table or a view."
                      },
                      "typeParameter": [
                        {
                          "id": 165,
                          "name": "TableName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 166,
                          "name": "Table",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 100,
                            "name": "GenericTable"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 167,
                          "name": "relation",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The table or view name to query\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 165,
                            "name": "TableName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 135,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 166,
                            "name": "Table"
                          },
                          {
                            "type": "reference",
                            "id": 165,
                            "name": "TableName"
                          },
                          {
                            "type": "conditional",
                            "checkType": {
                              "type": "reference",
                              "id": 166,
                              "name": "Table"
                            },
                            "extendsType": {
                              "type": "reflection",
                              "declaration": {
                                "id": 168,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {}
                              }
                            },
                            "trueType": {
                              "type": "reference",
                              "qualifiedName": "R",
                              "package": "@supabase/postgrest-js",
                              "name": "R"
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          }
                        ],
                        "qualifiedName": "PostgrestQueryBuilder",
                        "package": "@supabase/postgrest-js",
                        "name": "default"
                      }
                    },
                    {
                      "id": 169,
                      "name": "from",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Perform a query on a table or a view."
                      },
                      "typeParameter": [
                        {
                          "id": 170,
                          "name": "ViewName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 171,
                          "name": "View",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 111,
                            "name": "GenericView"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 172,
                          "name": "relation",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The table or view name to query\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 170,
                            "name": "ViewName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 135,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 171,
                            "name": "View"
                          },
                          {
                            "type": "reference",
                            "id": 170,
                            "name": "ViewName"
                          },
                          {
                            "type": "conditional",
                            "checkType": {
                              "type": "reference",
                              "id": 171,
                              "name": "View"
                            },
                            "extendsType": {
                              "type": "reflection",
                              "declaration": {
                                "id": 173,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {}
                              }
                            },
                            "trueType": {
                              "type": "reference",
                              "qualifiedName": "R",
                              "package": "@supabase/postgrest-js",
                              "name": "R"
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          }
                        ],
                        "qualifiedName": "PostgrestQueryBuilder",
                        "package": "@supabase/postgrest-js",
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 193,
                  "name": "getChannels",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 248,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 194,
                      "name": "getChannels",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Returns all Realtime channels."
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "qualifiedName": "RealtimeChannel",
                          "package": "@supabase/realtime-js",
                          "name": "default"
                        }
                      }
                    }
                  ]
                },
                {
                  "id": 198,
                  "name": "removeAllChannels",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 265,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 199,
                      "name": "removeAllChannels",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Unsubscribes and removes all Realtime channels from Realtime client."
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "array",
                            "elementType": {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "error"
                                },
                                {
                                  "type": "literal",
                                  "value": "ok"
                                },
                                {
                                  "type": "literal",
                                  "value": "timed out"
                                }
                              ]
                            }
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 195,
                  "name": "removeChannel",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 258,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 196,
                      "name": "removeChannel",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Unsubscribes and removes Realtime channel from Realtime client."
                      },
                      "parameters": [
                        {
                          "id": 197,
                          "name": "channel",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The name of the Realtime channel.\n\n"
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RealtimeChannel",
                            "package": "@supabase/realtime-js",
                            "name": "default"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "error"
                              },
                              {
                                "type": "literal",
                                "value": "ok"
                              },
                              {
                                "type": "literal",
                                "value": "timed out"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 178,
                  "name": "rpc",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 212,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 179,
                      "name": "rpc",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Perform a function call."
                      },
                      "typeParameter": [
                        {
                          "id": 180,
                          "name": "FnName",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 181,
                          "name": "Fn",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 112,
                            "name": "GenericFunction"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 182,
                          "name": "fn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The function name to call"
                          },
                          "type": {
                            "type": "reference",
                            "id": 180,
                            "name": "FnName",
                            "dereferenced": {}
                          }
                        },
                        {
                          "id": 183,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The arguments to pass to the function call"
                          },
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "Args"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 181,
                              "name": "Fn"
                            }
                          },
                          "defaultValue": "{}"
                        },
                        {
                          "id": 184,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "Named parameters"
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 185,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 188,
                                  "name": "count",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/SupabaseClient.ts",
                                      "line": 218,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "exact"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "planned"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "estimated"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 187,
                                  "name": "get",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "When set to `true`, the function will be called with\nread-only access mode."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/SupabaseClient.ts",
                                      "line": 217,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 186,
                                  "name": "head",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/SupabaseClient.ts",
                                      "line": 216,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [188, 187, 186]
                                }
                              ]
                            }
                          },
                          "defaultValue": "{}"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 135,
                            "name": "Schema"
                          },
                          {
                            "type": "conditional",
                            "checkType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "literal",
                                "value": "Returns"
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 181,
                                "name": "Fn"
                              }
                            },
                            "extendsType": {
                              "type": "array",
                              "elementType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            },
                            "trueType": {
                              "type": "conditional",
                              "checkType": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                "objectType": {
                                  "type": "indexedAccess",
                                  "indexType": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  },
                                  "objectType": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              },
                              "extendsType": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              },
                              "trueType": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                },
                                "objectType": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              },
                              "falseType": {
                                "type": "intrinsic",
                                "name": "never"
                              }
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "never"
                            }
                          },
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "Returns"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 181,
                              "name": "Fn"
                            }
                          },
                          {
                            "type": "reference",
                            "id": 180,
                            "name": "FnName"
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ],
                        "qualifiedName": "PostgrestFilterBuilder",
                        "package": "@supabase/postgrest-js",
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 174,
                  "name": "schema",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/SupabaseClient.ts",
                      "line": 178,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 175,
                      "name": "schema",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Select a schema to query or perform an function (rpc) call.",
                        "text": "The schema needs to be on the list of exposed schemas inside Supabase.\n"
                      },
                      "typeParameter": [
                        {
                          "id": 176,
                          "name": "DynamicSchema",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 177,
                          "name": "schema",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The schema to query\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 176,
                            "name": "DynamicSchema",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 133,
                            "name": "Database"
                          },
                          {
                            "type": "reference",
                            "id": 176,
                            "name": "DynamicSchema"
                          },
                          {
                            "type": "conditional",
                            "checkType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "reference",
                                "id": 176,
                                "name": "DynamicSchema"
                              },
                              "objectType": {
                                "type": "reference",
                                "id": 133,
                                "name": "Database"
                              }
                            },
                            "extendsType": {
                              "type": "reference",
                              "id": 116,
                              "name": "GenericSchema"
                            },
                            "trueType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "intrinsic",
                                "name": "any"
                              },
                              "objectType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ],
                        "qualifiedName": "PostgrestClient",
                        "package": "@supabase/postgrest-js",
                        "name": "default"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [131]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [153, 139, 142, 152, 147, 144, 156, 140, 141, 145, 146, 143, 158, 157]
                },
                {
                  "title": "Accessors",
                  "kind": 262144,
                  "children": [159, 161]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [200, 217, 211, 202, 214, 189, 163, 193, 198, 195, 178, 174]
                }
              ],
              "sources": [
                {
                  "fileName": "src/SupabaseClient.ts",
                  "line": 31,
                  "character": 21
                }
              ],
              "typeParameter": [
                {
                  "id": 222,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 223,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 133,
                          "name": "Database"
                        }
                      }
                    ]
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 133,
                        "name": "Database"
                      }
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 133,
                            "name": "Database"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 224,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 116,
                    "name": "GenericSchema"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 134,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 133,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "id": 116,
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 134,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 133,
                        "name": "Database"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ]
            },
            {
              "id": 2,
              "name": "createClient",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 27,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 3,
                  "name": "createClient",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a new Supabase Client."
                  },
                  "typeParameter": [
                    {
                      "id": 4,
                      "name": "Database",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 5,
                      "name": "SchemaName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 4,
                            "name": "Database"
                          }
                        },
                        "trueType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "falseType": {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 4,
                                "name": "Database"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 6,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 116,
                        "name": "GenericSchema"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 5,
                            "name": "SchemaName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 4,
                            "name": "Database"
                          }
                        },
                        "extendsType": {
                          "type": "reference",
                          "id": 116,
                          "name": "GenericSchema"
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 7,
                      "name": "supabaseUrl",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 8,
                      "name": "supabaseKey",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 9,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 70,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 5,
                            "name": "SchemaName"
                          }
                        ],
                        "name": "SupabaseClientOptions",
                        "dereferenced": {
                          "id": 70,
                          "name": "SupabaseClientOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 11,
                              "character": 12
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 92,
                              "name": "SchemaName",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 71,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 75,
                                  "name": "auth",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 19,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 76,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 77,
                                          "name": "autoRefreshToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 23,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 83,
                                          "name": "debug",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 47,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "debug"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 80,
                                          "name": "detectSessionInUrl",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 35,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 82,
                                          "name": "flowType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 43,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "flowType"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 84,
                                          "name": "lock",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                            "tags": [
                                              {
                                                "tag": "experimental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 53,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "lock"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 79,
                                          "name": "persistSession",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 31,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 81,
                                          "name": "storage",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A storage provider. Used to store the logged-in session."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 39,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "storage"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 78,
                                          "name": "storageKey",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional key name used for storing tokens in local storage."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 27,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [77, 83, 80, 82, 84, 79, 81, 78]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 19,
                                          "character": 9
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 72,
                                  "name": "db",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 15,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 73,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 74,
                                          "name": "schema",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 16,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 92,
                                            "name": "SchemaName",
                                            "dereferenced": {}
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [74]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 7
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 86,
                                  "name": "global",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 59,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 87,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 88,
                                          "name": "fetch",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom `fetch` implementation."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 63,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 69,
                                            "name": "Fetch",
                                            "dereferenced": {
                                              "id": 69,
                                              "name": "Fetch",
                                              "kind": 4194304,
                                              "kindString": "Type alias",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 9,
                                                  "character": 12
                                                }
                                              ],
                                              "type": {
                                                "type": "query",
                                                "queryType": {
                                                  "type": "reference",
                                                  "id": 28,
                                                  "qualifiedName": "fetch",
                                                  "package": "typescript",
                                                  "name": "fetch"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 89,
                                          "name": "headers",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional headers for initializing the client."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 67,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ],
                                            "qualifiedName": "Record",
                                            "package": "typescript",
                                            "name": "Record"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [88, 89]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 59,
                                          "character": 11
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 85,
                                  "name": "realtime",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Options passed to the realtime-js instance"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 58,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RealtimeClientOptions",
                                    "package": "@supabase/realtime-js",
                                    "name": "RealtimeClientOptions"
                                  }
                                },
                                {
                                  "id": 90,
                                  "name": "accessToken",
                                  "kind": 2048,
                                  "kindString": "Method",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 80,
                                      "character": 2
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 91,
                                      "name": "accessToken",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Optional function for using a third-party authentication system with\nSupabase. The function should return an access token or ID token (JWT) by\nobtaining it from the third-party auth client library. Note that this\nfunction may be called concurrently and many times. Use memoization and\nlocking techniques if this is not supported by the client libraries.",
                                        "text": "When set, the `auth` namespace of the Supabase client cannot be used.\nCreate another client if you wish to use Supabase Auth and third-party\nauthentications concurrently in the same application.\n"
                                      },
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [75, 72, 86, 85]
                                },
                                {
                                  "title": "Methods",
                                  "kind": 2048,
                                  "children": [90]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 11,
                                  "character": 48
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 130,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 4,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 5,
                        "name": "SchemaName"
                      },
                      {
                        "type": "reference",
                        "id": 6,
                        "name": "Schema"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "References",
              "kind": 16777216,
              "children": [227, 228, 226, 225]
            },
            {
              "title": "Classes",
              "kind": 128,
              "children": [130]
            },
            {
              "title": "Functions",
              "kind": 64,
              "children": [2]
            }
          ],
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 1,
              "character": 0
            }
          ]
        },
        {
          "id": 10,
          "name": "lib/constants",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 22,
              "name": "DEFAULT_AUTH_OPTIONS",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/constants.ts",
                  "line": 28,
                  "character": 13
                }
              ],
              "type": {
                "type": "reference",
                "id": 68,
                "name": "SupabaseAuthClientOptions"
              },
              "defaultValue": "..."
            },
            {
              "id": 19,
              "name": "DEFAULT_DB_OPTIONS",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/constants.ts",
                  "line": 24,
                  "character": 13
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 20,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 21,
                      "name": "schema",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/constants.ts",
                          "line": 25,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "'public'"
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [21]
                    }
                  ]
                }
              },
              "defaultValue": "..."
            },
            {
              "id": 14,
              "name": "DEFAULT_GLOBAL_OPTIONS",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/constants.ts",
                  "line": 20,
                  "character": 13
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 15,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 16,
                      "name": "headers",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/constants.ts",
                          "line": 21,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 17,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 18,
                              "name": "X-Client-Info",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/constants.ts",
                                  "line": 18,
                                  "character": 33
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "defaultValue": "..."
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [18]
                            }
                          ]
                        }
                      },
                      "defaultValue": "DEFAULT_HEADERS"
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [16]
                    }
                  ]
                }
              },
              "defaultValue": "..."
            },
            {
              "id": 11,
              "name": "DEFAULT_HEADERS",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/constants.ts",
                  "line": 18,
                  "character": 13
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 12,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 13,
                      "name": "X-Client-Info",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/constants.ts",
                          "line": 18,
                          "character": 33
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [13]
                    }
                  ]
                }
              },
              "defaultValue": "..."
            },
            {
              "id": 23,
              "name": "DEFAULT_REALTIME_OPTIONS",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/constants.ts",
                  "line": 35,
                  "character": 13
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "RealtimeClientOptions",
                "package": "@supabase/realtime-js",
                "name": "RealtimeClientOptions"
              },
              "defaultValue": "{}"
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [22, 19, 14, 11, 23]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/constants.ts",
              "line": 2,
              "character": 0
            }
          ]
        },
        {
          "id": 24,
          "name": "lib/fetch",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 38,
              "name": "fetchWithAuth",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/fetch.ts",
                  "line": 26,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 39,
                  "name": "fetchWithAuth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 40,
                      "name": "supabaseKey",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 41,
                      "name": "getAccessToken",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 42,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 43,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 44,
                      "name": "customFetch",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 45,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 46,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 47,
                                  "name": "input",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "URL",
                                        "package": "typescript",
                                        "name": "URL"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 48,
                                  "name": "init",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RequestInit",
                                    "package": "typescript",
                                    "name": "RequestInit"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "Response",
                                    "package": "typescript",
                                    "name": "Response"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 49,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 50,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 51,
                              "name": "input",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "RequestInfo",
                                    "package": "typescript",
                                    "name": "RequestInfo"
                                  },
                                  {
                                    "type": "reference",
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 52,
                              "name": "init",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RequestInit",
                                "package": "typescript",
                                "name": "RequestInit"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Response",
                                "package": "typescript",
                                "name": "Response"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": 25,
              "name": "resolveFetch",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/fetch.ts",
                  "line": 6,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 26,
                  "name": "resolveFetch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 27,
                      "name": "customFetch",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 28,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 29,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 30,
                                  "name": "input",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "URL",
                                        "package": "typescript",
                                        "name": "URL"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 31,
                                  "name": "init",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RequestInit",
                                    "package": "typescript",
                                    "name": "RequestInit"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "Response",
                                    "package": "typescript",
                                    "name": "Response"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 32,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 33,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 34,
                              "name": "input",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "RequestInfo",
                                    "package": "typescript",
                                    "name": "RequestInfo"
                                  },
                                  {
                                    "type": "reference",
                                    "qualifiedName": "URL",
                                    "package": "typescript",
                                    "name": "URL"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 35,
                              "name": "init",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "qualifiedName": "RequestInit",
                                "package": "typescript",
                                "name": "RequestInit"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "qualifiedName": "Response",
                                "package": "typescript",
                                "name": "Response"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": 36,
              "name": "resolveHeadersConstructor",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/fetch.ts",
                  "line": 18,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 37,
                  "name": "resolveHeadersConstructor",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Functions",
              "kind": 64,
              "children": [38, 25, 36]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/fetch.ts",
              "line": 2,
              "character": 0
            }
          ]
        },
        {
          "id": 53,
          "name": "lib/helpers",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 59,
              "name": "applySettingDefaults",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/helpers.ts",
                  "line": 18,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 60,
                  "name": "applySettingDefaults",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 61,
                      "name": "Database",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 62,
                      "name": "SchemaName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 61,
                            "name": "Database"
                          }
                        },
                        "trueType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "falseType": {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 61,
                                "name": "Database"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 63,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 70,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 62,
                            "name": "SchemaName"
                          }
                        ],
                        "name": "SupabaseClientOptions",
                        "dereferenced": {
                          "id": 70,
                          "name": "SupabaseClientOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 11,
                              "character": 12
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 92,
                              "name": "SchemaName",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 71,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 75,
                                  "name": "auth",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 19,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 76,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 77,
                                          "name": "autoRefreshToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 23,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 83,
                                          "name": "debug",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 47,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "debug"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 80,
                                          "name": "detectSessionInUrl",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 35,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 82,
                                          "name": "flowType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 43,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "flowType"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 84,
                                          "name": "lock",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                            "tags": [
                                              {
                                                "tag": "experimental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 53,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "lock"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 79,
                                          "name": "persistSession",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 31,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 81,
                                          "name": "storage",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A storage provider. Used to store the logged-in session."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 39,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "storage"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 78,
                                          "name": "storageKey",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional key name used for storing tokens in local storage."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 27,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [77, 83, 80, 82, 84, 79, 81, 78]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 19,
                                          "character": 9
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 72,
                                  "name": "db",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 15,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 73,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 74,
                                          "name": "schema",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 16,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 92,
                                            "name": "SchemaName",
                                            "dereferenced": {}
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [74]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 7
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 86,
                                  "name": "global",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 59,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 87,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 88,
                                          "name": "fetch",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom `fetch` implementation."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 63,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 69,
                                            "name": "Fetch",
                                            "dereferenced": {
                                              "id": 69,
                                              "name": "Fetch",
                                              "kind": 4194304,
                                              "kindString": "Type alias",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 9,
                                                  "character": 12
                                                }
                                              ],
                                              "type": {
                                                "type": "query",
                                                "queryType": {
                                                  "type": "reference",
                                                  "id": 28,
                                                  "qualifiedName": "fetch",
                                                  "package": "typescript",
                                                  "name": "fetch"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 89,
                                          "name": "headers",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional headers for initializing the client."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 67,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ],
                                            "qualifiedName": "Record",
                                            "package": "typescript",
                                            "name": "Record"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [88, 89]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 59,
                                          "character": 11
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 85,
                                  "name": "realtime",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Options passed to the realtime-js instance"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 58,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RealtimeClientOptions",
                                    "package": "@supabase/realtime-js",
                                    "name": "RealtimeClientOptions"
                                  }
                                },
                                {
                                  "id": 90,
                                  "name": "accessToken",
                                  "kind": 2048,
                                  "kindString": "Method",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 80,
                                      "character": 2
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 91,
                                      "name": "accessToken",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Optional function for using a third-party authentication system with\nSupabase. The function should return an access token or ID token (JWT) by\nobtaining it from the third-party auth client library. Note that this\nfunction may be called concurrently and many times. Use memoization and\nlocking techniques if this is not supported by the client libraries.",
                                        "text": "When set, the `auth` namespace of the Supabase client cannot be used.\nCreate another client if you wish to use Supabase Auth and third-party\nauthentications concurrently in the same application.\n"
                                      },
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [75, 72, 86, 85]
                                },
                                {
                                  "title": "Methods",
                                  "kind": 2048,
                                  "children": [90]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 11,
                                  "character": 48
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 64,
                      "name": "defaults",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 70,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "SupabaseClientOptions",
                        "dereferenced": {
                          "id": 70,
                          "name": "SupabaseClientOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 11,
                              "character": 12
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 92,
                              "name": "SchemaName",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 71,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 75,
                                  "name": "auth",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 19,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 76,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 77,
                                          "name": "autoRefreshToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 23,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 83,
                                          "name": "debug",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 47,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "debug"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 80,
                                          "name": "detectSessionInUrl",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 35,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 82,
                                          "name": "flowType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 43,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "flowType"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 84,
                                          "name": "lock",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                            "tags": [
                                              {
                                                "tag": "experimental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 53,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "lock"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 79,
                                          "name": "persistSession",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 31,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        },
                                        {
                                          "id": 81,
                                          "name": "storage",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A storage provider. Used to store the logged-in session."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 39,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "indexedAccess",
                                            "indexType": {
                                              "type": "literal",
                                              "value": "storage"
                                            },
                                            "objectType": {
                                              "type": "reference",
                                              "id": 68,
                                              "name": "SupabaseAuthClientOptions"
                                            }
                                          }
                                        },
                                        {
                                          "id": 78,
                                          "name": "storageKey",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional key name used for storing tokens in local storage."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 27,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [77, 83, 80, 82, 84, 79, 81, 78]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 19,
                                          "character": 9
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 72,
                                  "name": "db",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 15,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 73,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 74,
                                          "name": "schema",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 16,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 92,
                                            "name": "SchemaName",
                                            "dereferenced": {}
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [74]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 15,
                                          "character": 7
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 86,
                                  "name": "global",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 59,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 87,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 88,
                                          "name": "fetch",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom `fetch` implementation."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 63,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 69,
                                            "name": "Fetch",
                                            "dereferenced": {
                                              "id": 69,
                                              "name": "Fetch",
                                              "kind": 4194304,
                                              "kindString": "Type alias",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 9,
                                                  "character": 12
                                                }
                                              ],
                                              "type": {
                                                "type": "query",
                                                "queryType": {
                                                  "type": "reference",
                                                  "id": 28,
                                                  "qualifiedName": "fetch",
                                                  "package": "typescript",
                                                  "name": "fetch"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 89,
                                          "name": "headers",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Optional headers for initializing the client."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 67,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ],
                                            "qualifiedName": "Record",
                                            "package": "typescript",
                                            "name": "Record"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [88, 89]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 59,
                                          "character": 11
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 85,
                                  "name": "realtime",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Options passed to the realtime-js instance"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 58,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "RealtimeClientOptions",
                                    "package": "@supabase/realtime-js",
                                    "name": "RealtimeClientOptions"
                                  }
                                },
                                {
                                  "id": 90,
                                  "name": "accessToken",
                                  "kind": 2048,
                                  "kindString": "Method",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 80,
                                      "character": 2
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 91,
                                      "name": "accessToken",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Optional function for using a third-party authentication system with\nSupabase. The function should return an access token or ID token (JWT) by\nobtaining it from the third-party auth client library. Note that this\nfunction may be called concurrently and many times. Use memoization and\nlocking techniques if this is not supported by the client libraries.",
                                        "text": "When set, the `auth` namespace of the Supabase client cannot be used.\nCreate another client if you wish to use Supabase Auth and third-party\nauthentications concurrently in the same application.\n"
                                      },
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [75, 72, 86, 85]
                                },
                                {
                                  "title": "Methods",
                                  "kind": 2048,
                                  "children": [90]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 11,
                                  "character": 48
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 70,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 62,
                            "name": "SchemaName"
                          }
                        ],
                        "name": "SupabaseClientOptions"
                      }
                    ],
                    "qualifiedName": "Required",
                    "package": "typescript",
                    "name": "Required"
                  }
                }
              ]
            },
            {
              "id": 65,
              "name": "isBrowser",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/helpers.ts",
                  "line": 16,
                  "character": 13
                }
              ],
              "signatures": [
                {
                  "id": 66,
                  "name": "isBrowser",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 56,
              "name": "stripTrailingSlash",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/helpers.ts",
                  "line": 12,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 57,
                  "name": "stripTrailingSlash",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 58,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 54,
              "name": "uuid",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/helpers.ts",
                  "line": 4,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 55,
                  "name": "uuid",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Functions",
              "kind": 64,
              "children": [59, 65, 56, 54]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/helpers.ts",
              "line": 2,
              "character": 0
            }
          ]
        },
        {
          "id": 67,
          "name": "lib/types",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 68,
              "name": "SupabaseAuthClientOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 7,
                  "character": 17
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "name": "AuthClientOptions"
                }
              ]
            },
            {
              "id": 69,
              "name": "Fetch",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 9,
                  "character": 12
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 28,
                  "qualifiedName": "fetch",
                  "package": "typescript",
                  "name": "fetch"
                }
              }
            },
            {
              "id": 112,
              "name": "GenericFunction",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 107,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 113,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 114,
                      "name": "Args",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 108,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 115,
                      "name": "Returns",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 109,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [114, 115]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 107,
                      "character": 30
                    }
                  ]
                }
              }
            },
            {
              "id": 107,
              "name": "GenericNonUpdatableView",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 100,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 108,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 110,
                      "name": "Relationships",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 102,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 93,
                          "name": "GenericRelationship"
                        }
                      }
                    },
                    {
                      "id": 109,
                      "name": "Row",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 101,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [110, 109]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 100,
                      "character": 38
                    }
                  ]
                }
              }
            },
            {
              "id": 93,
              "name": "GenericRelationship",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 83,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 94,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 96,
                      "name": "columns",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 85,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "id": 95,
                      "name": "foreignKeyName",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 84,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 97,
                      "name": "isOneToOne",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 86,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 99,
                      "name": "referencedColumns",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 88,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "id": 98,
                      "name": "referencedRelation",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 87,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [96, 95, 97, 99, 98]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 83,
                      "character": 34
                    }
                  ]
                }
              }
            },
            {
              "id": 116,
              "name": "GenericSchema",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 112,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 117,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 120,
                      "name": "Functions",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 115,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "id": 112,
                            "name": "GenericFunction"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 118,
                      "name": "Tables",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 113,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "id": 100,
                            "name": "GenericTable"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 119,
                      "name": "Views",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 114,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "id": 111,
                            "name": "GenericView"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [120, 118, 119]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 112,
                      "character": 28
                    }
                  ]
                }
              }
            },
            {
              "id": 100,
              "name": "GenericTable",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 91,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 101,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 103,
                      "name": "Insert",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 93,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 105,
                      "name": "Relationships",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 95,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 93,
                          "name": "GenericRelationship"
                        }
                      }
                    },
                    {
                      "id": 102,
                      "name": "Row",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 92,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 104,
                      "name": "Update",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 94,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [103, 105, 102, 104]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 91,
                      "character": 27
                    }
                  ]
                }
              }
            },
            {
              "id": 106,
              "name": "GenericUpdatableView",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 98,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "id": 100,
                "name": "GenericTable"
              }
            },
            {
              "id": 111,
              "name": "GenericView",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 105,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "id": 106,
                    "name": "GenericUpdatableView",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 98,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 100,
                      "name": "GenericTable"
                    }
                  },
                  {
                    "id": 107,
                    "name": "GenericNonUpdatableView",
                    "kind": 4194304,
                    "kindString": "Type alias",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 100,
                        "character": 12
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 108,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 110,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 102,
                                "character": 2
                              }
                            ],
                            "type": {
                              "type": "array",
                              "elementType": {
                                "type": "reference",
                                "id": 93,
                                "name": "GenericRelationship"
                              }
                            }
                          },
                          {
                            "id": 109,
                            "name": "Row",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 101,
                                "character": 2
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "qualifiedName": "Record",
                              "package": "typescript",
                              "name": "Record"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [110, 109]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 100,
                            "character": 38
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            {
              "id": 123,
              "name": "QueryData",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 122,
                  "character": 12
                }
              ],
              "typeParameter": [
                {
                  "id": 126,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 126,
                  "name": "T"
                },
                "extendsType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 124,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 125,
                            "name": "data",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 122,
                                "character": 51
                              }
                            ],
                            "type": {
                              "type": "inferred",
                              "name": "U"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [125]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 122,
                            "character": 49
                          }
                        ]
                      }
                    }
                  ],
                  "qualifiedName": "PromiseLike",
                  "package": "typescript",
                  "name": "PromiseLike"
                },
                "trueType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "U"
                    },
                    {
                      "type": "literal",
                      "value": null
                    }
                  ],
                  "qualifiedName": "Exclude",
                  "package": "typescript",
                  "name": "Exclude"
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "never"
                }
              }
            },
            {
              "id": 127,
              "name": "QueryError",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 123,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "PostgrestError",
                "package": "@supabase/postgrest-js",
                "name": "PostgrestError"
              }
            },
            {
              "id": 121,
              "name": "QueryResult",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "comment": {
                "shortText": "Helper types for query results."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 121,
                  "character": 12
                }
              ],
              "typeParameter": [
                {
                  "id": 122,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 122,
                  "name": "T"
                },
                "extendsType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "inferred",
                      "name": "U"
                    }
                  ],
                  "qualifiedName": "PromiseLike",
                  "package": "typescript",
                  "name": "PromiseLike"
                },
                "trueType": {
                  "type": "reference",
                  "name": "U"
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "never"
                }
              }
            },
            {
              "id": 70,
              "name": "SupabaseClientOptions",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 11,
                  "character": 12
                }
              ],
              "typeParameter": [
                {
                  "id": 92,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 71,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 75,
                      "name": "auth",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 19,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 76,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 77,
                              "name": "autoRefreshToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Automatically refreshes the token for logged-in users. Defaults to true."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 23,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 83,
                              "name": "debug",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If debug messages for authentication client are emitted. Can be used to inspect the behavior of the library."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 47,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "debug"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 68,
                                  "name": "SupabaseAuthClientOptions"
                                }
                              }
                            },
                            {
                              "id": 80,
                              "name": "detectSessionInUrl",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Detect a session from the URL. Used for OAuth login callbacks. Defaults to true."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 35,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 82,
                              "name": "flowType",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "OAuth flow to use - defaults to implicit flow. PKCE is recommended for mobile and server-side applications."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 43,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "flowType"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 68,
                                  "name": "SupabaseAuthClientOptions"
                                }
                              }
                            },
                            {
                              "id": 84,
                              "name": "lock",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                "tags": [
                                  {
                                    "tag": "experimental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 53,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "lock"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 68,
                                  "name": "SupabaseAuthClientOptions"
                                }
                              }
                            },
                            {
                              "id": 79,
                              "name": "persistSession",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Whether to persist a logged-in session to storage. Defaults to true."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 31,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 81,
                              "name": "storage",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A storage provider. Used to store the logged-in session."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 39,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "storage"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 68,
                                  "name": "SupabaseAuthClientOptions"
                                }
                              }
                            },
                            {
                              "id": 78,
                              "name": "storageKey",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Optional key name used for storing tokens in local storage."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 27,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [77, 83, 80, 82, 84, 79, 81, 78]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 19,
                              "character": 9
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 72,
                      "name": "db",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to `public`."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 15,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 73,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 74,
                              "name": "schema",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 16,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 92,
                                "name": "SchemaName",
                                "dereferenced": {}
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [74]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 15,
                              "character": 7
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 86,
                      "name": "global",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 59,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 87,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 88,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom `fetch` implementation."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 63,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 69,
                                "name": "Fetch",
                                "dereferenced": {
                                  "id": 69,
                                  "name": "Fetch",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 9,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "query",
                                    "queryType": {
                                      "type": "reference",
                                      "id": 28,
                                      "qualifiedName": "fetch",
                                      "package": "typescript",
                                      "name": "fetch"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 89,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Optional headers for initializing the client."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 67,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [88, 89]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 59,
                              "character": 11
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 85,
                      "name": "realtime",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Options passed to the realtime-js instance"
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 58,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RealtimeClientOptions",
                        "package": "@supabase/realtime-js",
                        "name": "RealtimeClientOptions"
                      }
                    },
                    {
                      "id": 90,
                      "name": "accessToken",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 80,
                          "character": 2
                        }
                      ],
                      "signatures": [
                        {
                          "id": 91,
                          "name": "accessToken",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Optional function for using a third-party authentication system with\nSupabase. The function should return an access token or ID token (JWT) by\nobtaining it from the third-party auth client library. Note that this\nfunction may be called concurrently and many times. Use memoization and\nlocking techniques if this is not supported by the client libraries.",
                            "text": "When set, the `auth` namespace of the Supabase client cannot be used.\nCreate another client if you wish to use Supabase Auth and third-party\nauthentications concurrently in the same application.\n"
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [75, 72, 86, 85]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [90]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 11,
                      "character": 48
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Interfaces",
              "kind": 256,
              "children": [68]
            },
            {
              "title": "Type Aliases",
              "kind": 4194304,
              "children": [69, 112, 107, 93, 116, 100, 106, 111, 123, 127, 121, 70]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1,
              "character": 0
            }
          ]
        },
        {
          "id": 128,
          "name": "lib/version",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 129,
              "name": "version",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isConst": true
              },
              "sources": [
                {
                  "fileName": "src/lib/version.ts",
                  "line": 1,
                  "character": 13
                }
              ],
              "type": {
                "type": "literal",
                "value": "0.0.0-automated"
              },
              "defaultValue": "'0.0.0-automated'"
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [129]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/version.ts",
              "line": 1,
              "character": 0
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "kind": 2,
          "children": [1, 10, 24, 53, 67, 128]
        }
      ]
    },
    {
      "id": 0,
      "name": "@supabase/auth-js",
      "kind": 1,
      "kindString": "Project",
      "flags": {},
      "originalName": "",
      "children": [
        {
          "id": 1170,
          "name": "AuthApiError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1171,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 33,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1172,
                  "name": "new AuthApiError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1173,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1174,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1175,
                      "name": "code",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1170,
                    "name": "AuthApiError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1162,
                    "name": "AuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1161,
                "name": "AuthError.constructor"
              }
            },
            {
              "id": 1177,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1178,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1166,
                "name": "AuthError.code"
              }
            },
            {
              "id": 1176,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 31,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "overwrites": {
                "type": "reference",
                "id": 1168,
                "name": "AuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1171]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1177, 1176]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 30,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1160,
              "name": "AuthError"
            }
          ]
        },
        {
          "id": 1160,
          "name": "AuthError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1161,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1162,
                  "name": "new AuthError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1163,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1164,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1165,
                      "name": "code",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1160,
                    "name": "AuthError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            },
            {
              "id": 1166,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1167,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              }
            },
            {
              "id": 1168,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1161]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1166, 1168]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 4,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "qualifiedName": "Error",
              "package": "typescript",
              "name": "Error"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 1170,
              "name": "AuthApiError"
            },
            {
              "type": "reference",
              "id": 1180,
              "name": "AuthUnknownError"
            },
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1227,
          "name": "AuthImplicitGrantRedirectError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1228,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 90,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1229,
                  "name": "new AuthImplicitGrantRedirectError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1230,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1231,
                      "name": "details",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1232,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1234,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 90,
                                      "character": 57
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1233,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 90,
                                      "character": 42
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1234, 1233]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1227,
                    "name": "AuthImplicitGrantRedirectError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1251,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1252,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1235,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 89,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1236,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1238,
                          "name": "code",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 89,
                              "character": 28
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1237,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 89,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1238, 1237]
                        }
                      ]
                    }
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 1249,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1250,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            },
            {
              "id": 1239,
              "name": "toJSON",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 95,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1240,
                  "name": "toJSON",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1241,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1245,
                          "name": "details",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 100,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1246,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1248,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/errors.ts",
                                          "line": 89,
                                          "character": 28
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 1247,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/errors.ts",
                                          "line": 89,
                                          "character": 13
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [1248, 1247]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1243,
                          "name": "message",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 98,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1242,
                          "name": "name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 97,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1244,
                          "name": "status",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 99,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1245, 1243, 1242, 1244]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1228]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1251, 1235, 1249, 1250]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [1239]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 88,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1218,
          "name": "AuthInvalidCredentialsError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1219,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 83,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1220,
                  "name": "new AuthInvalidCredentialsError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1221,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1218,
                    "name": "AuthInvalidCredentialsError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1224,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1225,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1222,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1223,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1219]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1224, 1222, 1223]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 82,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1303,
          "name": "AuthInvalidJwtError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1304,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 162,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1305,
                  "name": "new AuthInvalidJwtError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1306,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1303,
                    "name": "AuthInvalidJwtError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1309,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1310,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1307,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1308,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1304]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1309, 1307, 1308]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 161,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1210,
          "name": "AuthInvalidTokenResponseError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1211,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 77,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1212,
                  "name": "new AuthInvalidTokenResponseError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1210,
                    "name": "AuthInvalidTokenResponseError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1215,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1216,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1213,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1214,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1211]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1215, 1213, 1214]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 76,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1254,
          "name": "AuthPKCEGrantCodeExchangeError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1255,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 114,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1256,
                  "name": "new AuthPKCEGrantCodeExchangeError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1257,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1258,
                      "name": "details",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1259,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1261,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 114,
                                      "character": 57
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1260,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/errors.ts",
                                      "line": 114,
                                      "character": 42
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1261, 1260]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1254,
                    "name": "AuthPKCEGrantCodeExchangeError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1278,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1279,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1262,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 112,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1263,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1265,
                          "name": "code",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 112,
                              "character": 28
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1264,
                          "name": "error",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 112,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1265, 1264]
                        }
                      ]
                    }
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 1276,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1277,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            },
            {
              "id": 1266,
              "name": "toJSON",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 119,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1267,
                  "name": "toJSON",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1268,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 1272,
                          "name": "details",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 124,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1273,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1275,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/errors.ts",
                                          "line": 112,
                                          "character": 28
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 1274,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/errors.ts",
                                          "line": 112,
                                          "character": 13
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [1275, 1274]
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1270,
                          "name": "message",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 122,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1269,
                          "name": "name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 121,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "..."
                        },
                        {
                          "id": 1271,
                          "name": "status",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/errors.ts",
                              "line": 123,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [1272, 1270, 1269, 1271]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1255]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1278, 1262, 1276, 1277]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [1266]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 111,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1281,
          "name": "AuthRetryableFetchError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1282,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 130,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1283,
                  "name": "new AuthRetryableFetchError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1284,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1285,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1281,
                    "name": "AuthRetryableFetchError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1288,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1289,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1286,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1287,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1282]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1288, 1286, 1287]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 129,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1202,
          "name": "AuthSessionMissingError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1203,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 67,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1204,
                  "name": "new AuthSessionMissingError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1202,
                    "name": "AuthSessionMissingError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1207,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1208,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1205,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1206,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1203]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1207, 1205, 1206]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 66,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1180,
          "name": "AuthUnknownError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1181,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 48,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1182,
                  "name": "new AuthUnknownError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1183,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1184,
                      "name": "originalError",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1180,
                    "name": "AuthUnknownError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1162,
                    "name": "AuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1161,
                "name": "AuthError.constructor"
              }
            },
            {
              "id": 1186,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1187,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1166,
                "name": "AuthError.code"
              }
            },
            {
              "id": 1185,
              "name": "originalError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 46,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1188,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1168,
                "name": "AuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1181]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1186, 1185, 1188]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 45,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1160,
              "name": "AuthError"
            }
          ]
        },
        {
          "id": 1291,
          "name": "AuthWeakPasswordError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "This error is thrown on certain methods when the password used is deemed\nweak. Inspect the reasons to identify what password strength rules are\ninadequate."
          },
          "children": [
            {
              "id": 1292,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 150,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1293,
                  "name": "new AuthWeakPasswordError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1294,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1295,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1296,
                      "name": "reasons",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1291,
                    "name": "AuthWeakPasswordError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1192,
                    "name": "CustomAuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1191,
                "name": "CustomAuthError.constructor"
              }
            },
            {
              "id": 1300,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1301,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1199,
                "name": "CustomAuthError.code"
              }
            },
            {
              "id": 1298,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1197,
                "name": "CustomAuthError.name"
              }
            },
            {
              "id": 1297,
              "name": "reasons",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Reasons why the password is deemed weak."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 148,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 548,
                  "name": "WeakPasswordReasons"
                }
              }
            },
            {
              "id": 1299,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1198,
                "name": "CustomAuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1292]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1300, 1298, 1297, 1299]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 144,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1190,
              "name": "CustomAuthError"
            }
          ]
        },
        {
          "id": 1190,
          "name": "CustomAuthError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 1191,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 59,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 1192,
                  "name": "new CustomAuthError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1193,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1194,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1195,
                      "name": "status",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1196,
                      "name": "code",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1190,
                    "name": "CustomAuthError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 1162,
                    "name": "AuthError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 1161,
                "name": "AuthError.constructor"
              }
            },
            {
              "id": 1199,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Error code associated with the error. Most errors coming from\nHTTP responses will have a code, though some errors that occur\nbefore a response is received will not have one present. In that\ncase {@link #status} will also be undefined."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1200,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "ErrorCode"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 1166,
                "name": "AuthError.code"
              }
            },
            {
              "id": 1197,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "overwrites": {
                "type": "reference",
                "name": "AuthError.name"
              }
            },
            {
              "id": 1198,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "HTTP status code that caused the error."
              },
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "overwrites": {
                "type": "reference",
                "id": 1168,
                "name": "AuthError.status"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [1191]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1199, 1197, 1198]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 55,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 1160,
              "name": "AuthError"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 1202,
              "name": "AuthSessionMissingError"
            },
            {
              "type": "reference",
              "id": 1210,
              "name": "AuthInvalidTokenResponseError"
            },
            {
              "type": "reference",
              "id": 1218,
              "name": "AuthInvalidCredentialsError"
            },
            {
              "type": "reference",
              "id": 1227,
              "name": "AuthImplicitGrantRedirectError"
            },
            {
              "type": "reference",
              "id": 1254,
              "name": "AuthPKCEGrantCodeExchangeError"
            },
            {
              "type": "reference",
              "id": 1281,
              "name": "AuthRetryableFetchError"
            },
            {
              "type": "reference",
              "id": 1291,
              "name": "AuthWeakPasswordError"
            },
            {
              "type": "reference",
              "id": 1303,
              "name": "AuthInvalidJwtError"
            }
          ]
        },
        {
          "id": 1,
          "name": "GoTrueAdminApi",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 2,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 35,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 3,
                  "name": "new GoTrueAdminApi",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 4,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 5,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 11,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 44,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 12,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 13,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 14,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 15,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 7,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 41,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 8,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "indexSignature": {
                                    "id": 9,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 10,
                                        "name": "key",
                                        "kind": 32768,
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 6,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 40,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [11, 7, 6]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1,
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 16,
              "name": "mfa",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Contains all MFA administration methods."
              },
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 27,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1044,
                "name": "GoTrueAdminMFAApi",
                "dereferenced": {
                  "id": 1044,
                  "name": "GoTrueAdminMFAApi",
                  "kind": 256,
                  "kindString": "Interface",
                  "flags": {},
                  "comment": {
                    "shortText": "Contains the full multi-factor authentication administration API.",
                    "tags": [
                      {
                        "tag": "expermental",
                        "text": "\n"
                      }
                    ]
                  },
                  "children": [
                    {
                      "id": 1048,
                      "name": "deleteFactor",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1049,
                          "name": "deleteFactor",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#unenroll}\n"
                              },
                              {
                                "tag": "expermental",
                                "text": "\n"
                              }
                            ]
                          },
                          "parameters": [
                            {
                              "id": 1050,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1028,
                                "name": "AuthMFAAdminDeleteFactorParams",
                                "dereferenced": {
                                  "id": 1028,
                                  "name": "AuthMFAAdminDeleteFactorParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "comment": {
                                    "tags": [
                                      {
                                        "tag": "expermental",
                                        "text": "\n"
                                      }
                                    ]
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1016,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1029,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1030,
                                          "name": "id",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the MFA factor to delete."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1018,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 1031,
                                          "name": "userId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the user whose factor is being deleted."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1021,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [1030, 1031]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1016,
                                          "character": 45
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1019,
                                "name": "AuthMFAAdminDeleteFactorResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1045,
                      "name": "listFactors",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1046,
                          "name": "listFactors",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Lists all factors associated to a user."
                          },
                          "parameters": [
                            {
                              "id": 1047,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1041,
                                "name": "AuthMFAAdminListFactorsParams",
                                "dereferenced": {
                                  "id": 1041,
                                  "name": "AuthMFAAdminListFactorsParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "comment": {
                                    "tags": [
                                      {
                                        "tag": "expermental",
                                        "text": "\n"
                                      }
                                    ]
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1040,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1042,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1043,
                                          "name": "userId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the user."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1042,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [1043]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1040,
                                          "character": 44
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1032,
                                "name": "AuthMFAAdminListFactorsResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1048, 1045]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1050,
                      "character": 17
                    }
                  ]
                }
              }
            },
            {
              "id": 44,
              "name": "createUser",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 152,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 45,
                  "name": "createUser",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
                  },
                  "parameters": [
                    {
                      "id": 46,
                      "name": "attributes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 728,
                        "name": "AdminUserAttributes",
                        "dereferenced": {
                          "id": 728,
                          "name": "AdminUserAttributes",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "children": [
                            {
                              "id": 730,
                              "name": "app_metadata",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 405,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 733,
                              "name": "ban_duration",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Determines how long a user is banned for.",
                                "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 431,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 740,
                              "name": "email",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's email."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 356,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.email"
                              }
                            },
                            {
                              "id": 731,
                              "name": "email_confirm",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Confirms the user's email address if set to true.",
                                "text": "Only a service role can modify.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 412,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 736,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `id` for the user.",
                                "text": "Allows you to overwrite the default `id` set for the user.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 456,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 738,
                              "name": "nonce",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                "text": "Call reauthenticate() to obtain the nonce first.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 373,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.nonce"
                              }
                            },
                            {
                              "id": 737,
                              "name": "password",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's password."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 366,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.password"
                              }
                            },
                            {
                              "id": 735,
                              "name": "password_hash",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `password_hash` for the user's password.",
                                "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 449,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 739,
                              "name": "phone",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's phone."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 361,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.phone"
                              }
                            },
                            {
                              "id": 732,
                              "name": "phone_confirm",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Confirms the user's phone number if set to true.",
                                "text": "Only a service role can modify.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 419,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 734,
                              "name": "role",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `role` claim set in the user's access token JWT.",
                                "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 440,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 729,
                              "name": "user_metadata",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 395,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                730, 733, 740, 731, 736, 738, 737, 735, 739, 732, 734, 729
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 384,
                              "character": 17
                            }
                          ],
                          "extendedTypes": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 722,
                                  "name": "UserAttributes"
                                },
                                {
                                  "type": "literal",
                                  "value": "data"
                                }
                              ],
                              "qualifiedName": "Omit",
                              "package": "typescript",
                              "name": "Omit"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 68,
              "name": "deleteUser",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 268,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 69,
                  "name": "deleteUser",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Delete a user. Requires a `service_role` key."
                  },
                  "parameters": [
                    {
                      "id": 70,
                      "name": "id",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The user id you want to remove."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 71,
                      "name": "shouldSoftDelete",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 41,
              "name": "generateLink",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 118,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 42,
                  "name": "generateLink",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Generates email links and OTPs to be sent via a custom email provider."
                  },
                  "parameters": [
                    {
                      "id": 43,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 899,
                        "name": "GenerateLinkParams",
                        "dereferenced": {
                          "id": 899,
                          "name": "GenerateLinkParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 752,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "id": 874,
                                "name": "GenerateSignupLinkParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 709,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 875,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 877,
                                        "name": "email",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 711,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 879,
                                        "name": "options",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 713,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 896,
                                              "name": "GenerateLinkOptions"
                                            },
                                            {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "data"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ]
                                            }
                                          ],
                                          "qualifiedName": "Pick",
                                          "package": "typescript",
                                          "name": "Pick"
                                        }
                                      },
                                      {
                                        "id": 878,
                                        "name": "password",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 712,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 876,
                                        "name": "type",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 710,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "literal",
                                          "value": "signup"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [877, 879, 878, 876]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 709,
                                        "character": 39
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 880,
                                "name": "GenerateInviteOrMagiclinkParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 716,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 881,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 883,
                                        "name": "email",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The user's email"
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 719,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 884,
                                        "name": "options",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 720,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 896,
                                              "name": "GenerateLinkOptions"
                                            },
                                            {
                                              "type": "union",
                                              "types": [
                                                {
                                                  "type": "literal",
                                                  "value": "data"
                                                },
                                                {
                                                  "type": "literal",
                                                  "value": "redirectTo"
                                                }
                                              ]
                                            }
                                          ],
                                          "qualifiedName": "Pick",
                                          "package": "typescript",
                                          "name": "Pick"
                                        }
                                      },
                                      {
                                        "id": 882,
                                        "name": "type",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 717,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "invite"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "magiclink"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [883, 884, 882]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 716,
                                        "character": 46
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 885,
                                "name": "GenerateRecoveryLinkParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 723,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 886,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 888,
                                        "name": "email",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The user's email"
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 726,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 889,
                                        "name": "options",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 727,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 896,
                                              "name": "GenerateLinkOptions"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ],
                                          "qualifiedName": "Pick",
                                          "package": "typescript",
                                          "name": "Pick"
                                        }
                                      },
                                      {
                                        "id": 887,
                                        "name": "type",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 724,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "literal",
                                          "value": "recovery"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [888, 889, 887]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 723,
                                        "character": 41
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 890,
                                "name": "GenerateEmailChangeLinkParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 730,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 891,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 893,
                                        "name": "email",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The user's email"
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 733,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 894,
                                        "name": "newEmail",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 737,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 895,
                                        "name": "options",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 738,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 896,
                                              "name": "GenerateLinkOptions"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "redirectTo"
                                            }
                                          ],
                                          "qualifiedName": "Pick",
                                          "package": "typescript",
                                          "name": "Pick"
                                        }
                                      },
                                      {
                                        "id": 892,
                                        "name": "type",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 731,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "email_change_current"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "email_change_new"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [893, 894, 895, 892]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 730,
                                        "character": 44
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 900,
                        "name": "GenerateLinkResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 61,
              "name": "getUserById",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 221,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 62,
                  "name": "getUserById",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Get user by id."
                  },
                  "parameters": [
                    {
                      "id": 63,
                      "name": "uid",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 34,
              "name": "inviteUserByEmail",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 85,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 35,
                  "name": "inviteUserByEmail",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sends an invite link to an email address."
                  },
                  "parameters": [
                    {
                      "id": 36,
                      "name": "email",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The email address of the user."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 37,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Additional options to be included when inviting.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 38,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 39,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 89,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 40,
                              "name": "redirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 92,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [39, 40]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 47,
              "name": "listUsers",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 174,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 48,
                  "name": "listUsers",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Get a list of users.",
                    "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
                  },
                  "parameters": [
                    {
                      "id": 49,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 1071,
                        "name": "PageParams",
                        "dereferenced": {
                          "id": 1071,
                          "name": "PageParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1109,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1072,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1073,
                                  "name": "page",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The page number"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1111,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                },
                                {
                                  "id": 1074,
                                  "name": "perPage",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Number of items returned per page"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1113,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1073, 1074]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1109,
                                  "character": 25
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 50,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 51,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 177,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "intersection",
                                    "types": [
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 52,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 54,
                                              "name": "aud",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/GoTrueAdminApi.ts",
                                                  "line": 177,
                                                  "character": 31
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 53,
                                              "name": "users",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/GoTrueAdminApi.ts",
                                                  "line": 177,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "array",
                                                "elementType": {
                                                  "type": "reference",
                                                  "id": 697,
                                                  "name": "User"
                                                }
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [54, 53]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "reference",
                                        "id": 1064,
                                        "name": "Pagination"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 55,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 177,
                                      "character": 59
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [51, 55]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 56,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 57,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 178,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 58,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 59,
                                          "name": "users",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 178,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "tuple"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [59]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 60,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueAdminApi.ts",
                                      "line": 178,
                                      "character": 29
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [57, 60]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 27,
              "name": "signOut",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 60,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 28,
                  "name": "signOut",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Removes a logged-in session."
                  },
                  "parameters": [
                    {
                      "id": 29,
                      "name": "jwt",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "A valid, logged-in JWT."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 30,
                      "name": "scope",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The logout sope.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "global"
                          },
                          {
                            "type": "literal",
                            "value": "local"
                          },
                          {
                            "type": "literal",
                            "value": "others"
                          }
                        ]
                      },
                      "defaultValue": "'global'"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 31,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 32,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 63,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 33,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueAdminApi.ts",
                                  "line": 63,
                                  "character": 27
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [32, 33]
                            }
                          ]
                        }
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 64,
              "name": "updateUserById",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueAdminApi.ts",
                  "line": 243,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 65,
                  "name": "updateUserById",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the user data."
                  },
                  "parameters": [
                    {
                      "id": 66,
                      "name": "uid",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 67,
                      "name": "attributes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 728,
                        "name": "AdminUserAttributes",
                        "dereferenced": {
                          "id": 728,
                          "name": "AdminUserAttributes",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "children": [
                            {
                              "id": 730,
                              "name": "app_metadata",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 405,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 733,
                              "name": "ban_duration",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Determines how long a user is banned for.",
                                "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 431,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 740,
                              "name": "email",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's email."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 356,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.email"
                              }
                            },
                            {
                              "id": 731,
                              "name": "email_confirm",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Confirms the user's email address if set to true.",
                                "text": "Only a service role can modify.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 412,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 736,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `id` for the user.",
                                "text": "Allows you to overwrite the default `id` set for the user.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 456,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 738,
                              "name": "nonce",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                "text": "Call reauthenticate() to obtain the nonce first.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 373,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.nonce"
                              }
                            },
                            {
                              "id": 737,
                              "name": "password",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's password."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 366,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.password"
                              }
                            },
                            {
                              "id": 735,
                              "name": "password_hash",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `password_hash` for the user's password.",
                                "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 449,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 739,
                              "name": "phone",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's phone."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 361,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "inheritedFrom": {
                                "type": "reference",
                                "name": "Omit.phone"
                              }
                            },
                            {
                              "id": 732,
                              "name": "phone_confirm",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Confirms the user's phone number if set to true.",
                                "text": "Only a service role can modify.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 419,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 734,
                              "name": "role",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The `role` claim set in the user's access token JWT.",
                                "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 440,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 729,
                              "name": "user_metadata",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 395,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [
                                730, 733, 740, 731, 736, 738, 737, 735, 739, 732, 734, 729
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 384,
                              "character": 17
                            }
                          ],
                          "extendedTypes": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 722,
                                  "name": "UserAttributes"
                                },
                                {
                                  "type": "literal",
                                  "value": "data"
                                }
                              ],
                              "qualifiedName": "Omit",
                              "package": "typescript",
                              "name": "Omit"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [2]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [16]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [44, 68, 41, 61, 34, 47, 27, 64]
            }
          ],
          "sources": [
            {
              "fileName": "src/GoTrueAdminApi.ts",
              "line": 25,
              "character": 21
            }
          ]
        },
        {
          "id": 78,
          "name": "GoTrueClient",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 80,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 193,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 81,
                  "name": "new GoTrueClient",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Create a new client for use in the browser."
                  },
                  "parameters": [
                    {
                      "id": 82,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 527,
                        "name": "GoTrueClientOptions",
                        "dereferenced": {
                          "id": 527,
                          "name": "GoTrueClientOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 57,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 528,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 536,
                                  "name": "autoRefreshToken",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 67,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 541,
                                  "name": "debug",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 77,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 542,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 77,
                                              "character": 21
                                            }
                                          ],
                                          "signatures": [
                                            {
                                              "id": 543,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 544,
                                                  "name": "message",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                },
                                                {
                                                  "id": 545,
                                                  "name": "args",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {
                                                    "isRest": true
                                                  },
                                                  "type": {
                                                    "type": "array",
                                                    "elementType": {
                                                      "type": "intrinsic",
                                                      "name": "any"
                                                    }
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "void"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 535,
                                  "name": "detectSessionInUrl",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 65,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 539,
                                  "name": "fetch",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 73,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "name": "Fetch"
                                  }
                                },
                                {
                                  "id": 540,
                                  "name": "flowType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 75,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 802,
                                    "name": "AuthFlowType",
                                    "dereferenced": {
                                      "id": 802,
                                      "name": "AuthFlowType",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 584,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "implicit"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "pkce"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 547,
                                  "name": "hasCustomAuthorizationHeader",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Set to \"true\" if there is a custom authorization header set globally.",
                                    "tags": [
                                      {
                                        "tag": "experimental",
                                        "text": "\n"
                                      }
                                    ]
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 88,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 530,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 61,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 531,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 61,
                                          "character": 12
                                        }
                                      ],
                                      "indexSignature": {
                                        "id": 532,
                                        "name": "__index",
                                        "kind": 8192,
                                        "kindString": "Index signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 533,
                                            "name": "key",
                                            "kind": 32768,
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 546,
                                  "name": "lock",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                                    "tags": [
                                      {
                                        "tag": "experimental",
                                        "text": "\n"
                                      }
                                    ]
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 83,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 518,
                                    "name": "LockFunc",
                                    "dereferenced": {
                                      "id": 518,
                                      "name": "LockFunc",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 55,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 519,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 55,
                                              "character": 23
                                            }
                                          ],
                                          "signatures": [
                                            {
                                              "id": 520,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                                                "tags": [
                                                  {
                                                    "tag": "experimental",
                                                    "text": "\n"
                                                  }
                                                ]
                                              },
                                              "typeParameter": [
                                                {
                                                  "id": 526,
                                                  "name": "R",
                                                  "kind": 131072,
                                                  "kindString": "Type parameter",
                                                  "flags": {}
                                                }
                                              ],
                                              "parameters": [
                                                {
                                                  "id": 521,
                                                  "name": "name",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "Name of the lock to be acquired."
                                                  },
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                },
                                                {
                                                  "id": 522,
                                                  "name": "acquireTimeout",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                                                  },
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "number"
                                                  }
                                                },
                                                {
                                                  "id": 523,
                                                  "name": "fn",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "The operation to execute when the lock is acquired.\n"
                                                  },
                                                  "type": {
                                                    "type": "reflection",
                                                    "declaration": {
                                                      "id": 524,
                                                      "name": "__type",
                                                      "kind": 65536,
                                                      "kindString": "Type literal",
                                                      "flags": {},
                                                      "sources": [
                                                        {
                                                          "fileName": "src/lib/types.ts",
                                                          "line": 55,
                                                          "character": 69
                                                        }
                                                      ],
                                                      "signatures": [
                                                        {
                                                          "id": 525,
                                                          "name": "__type",
                                                          "kind": 4096,
                                                          "kindString": "Call signature",
                                                          "flags": {},
                                                          "type": {
                                                            "type": "reference",
                                                            "typeArguments": [
                                                              {
                                                                "type": "reference",
                                                                "id": 526,
                                                                "name": "R"
                                                              }
                                                            ],
                                                            "qualifiedName": "Promise",
                                                            "package": "typescript",
                                                            "name": "Promise"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "reference",
                                                    "id": 526,
                                                    "name": "R"
                                                  }
                                                ],
                                                "qualifiedName": "Promise",
                                                "package": "typescript",
                                                "name": "Promise"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 537,
                                  "name": "persistSession",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 69,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 538,
                                  "name": "storage",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 71,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1051,
                                    "name": "SupportedStorage",
                                    "dereferenced": {
                                      "id": 1051,
                                      "name": "SupportedStorage",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1077,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "intersection",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "Storage",
                                                    "package": "typescript",
                                                    "name": "Storage"
                                                  },
                                                  {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "literal",
                                                        "value": "getItem"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "setItem"
                                                      },
                                                      {
                                                        "type": "literal",
                                                        "value": "removeItem"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "qualifiedName": "Pick",
                                                "package": "typescript",
                                                "name": "Pick"
                                              }
                                            ],
                                            "name": "PromisifyMethods"
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 1052,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 1053,
                                                  "name": "isServer",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {
                                                    "isOptional": true
                                                  },
                                                  "comment": {
                                                    "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                                                  },
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 1087,
                                                      "character": 2
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "boolean"
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [1053]
                                                }
                                              ],
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1079,
                                                  "character": 4
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 534,
                                  "name": "storageKey",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 63,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 529,
                                  "name": "url",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 59,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [
                                    536, 541, 535, 539, 540, 547, 530, 546, 537, 538, 534, 529
                                  ]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 57,
                                  "character": 34
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 78,
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 84,
              "name": "admin",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
              },
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 139,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 1,
                "name": "default",
                "dereferenced": {
                  "id": 1,
                  "name": "GoTrueAdminApi",
                  "kind": 128,
                  "kindString": "Class",
                  "flags": {},
                  "children": [
                    {
                      "id": 2,
                      "name": "constructor",
                      "kind": 512,
                      "kindString": "Constructor",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 35,
                          "character": 2
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3,
                          "name": "new GoTrueAdminApi",
                          "kind": 16384,
                          "kindString": "Constructor signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 4,
                              "name": "__namedParameters",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 5,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 11,
                                      "name": "fetch",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 44,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 12,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 13,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 14,
                                                  "name": "input",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "reference",
                                                        "qualifiedName": "RequestInfo",
                                                        "package": "typescript",
                                                        "name": "RequestInfo"
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "qualifiedName": "URL",
                                                        "package": "typescript",
                                                        "name": "URL"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "id": 15,
                                                  "name": "init",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {
                                                    "isOptional": true
                                                  },
                                                  "type": {
                                                    "type": "reference",
                                                    "qualifiedName": "RequestInit",
                                                    "package": "typescript",
                                                    "name": "RequestInit"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "reference",
                                                    "qualifiedName": "Response",
                                                    "package": "typescript",
                                                    "name": "Response"
                                                  }
                                                ],
                                                "qualifiedName": "Promise",
                                                "package": "typescript",
                                                "name": "Promise"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 7,
                                      "name": "headers",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 41,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 8,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "indexSignature": {
                                            "id": 9,
                                            "name": "__index",
                                            "kind": 8192,
                                            "kindString": "Index signature",
                                            "flags": {},
                                            "parameters": [
                                              {
                                                "id": 10,
                                                "name": "key",
                                                "kind": 32768,
                                                "flags": {},
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 6,
                                      "name": "url",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 40,
                                          "character": 4
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [11, 7, 6]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 1,
                            "name": "default"
                          }
                        }
                      ]
                    },
                    {
                      "id": 16,
                      "name": "mfa",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "Contains all MFA administration methods."
                      },
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 27,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1044,
                        "name": "GoTrueAdminMFAApi",
                        "dereferenced": {
                          "id": 1044,
                          "name": "GoTrueAdminMFAApi",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "comment": {
                            "shortText": "Contains the full multi-factor authentication administration API.",
                            "tags": [
                              {
                                "tag": "expermental",
                                "text": "\n"
                              }
                            ]
                          },
                          "children": [
                            {
                              "id": 1048,
                              "name": "deleteFactor",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 1049,
                                  "name": "deleteFactor",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                                    "tags": [
                                      {
                                        "tag": "see",
                                        "text": "{@link GoTrueMFAApi#unenroll}\n"
                                      },
                                      {
                                        "tag": "expermental",
                                        "text": "\n"
                                      }
                                    ]
                                  },
                                  "parameters": [
                                    {
                                      "id": 1050,
                                      "name": "params",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 1028,
                                        "name": "AuthMFAAdminDeleteFactorParams",
                                        "dereferenced": {
                                          "id": 1028,
                                          "name": "AuthMFAAdminDeleteFactorParams",
                                          "kind": 4194304,
                                          "kindString": "Type alias",
                                          "flags": {},
                                          "comment": {
                                            "tags": [
                                              {
                                                "tag": "expermental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1016,
                                              "character": 12
                                            }
                                          ],
                                          "type": {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 1029,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 1030,
                                                  "name": "id",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "ID of the MFA factor to delete."
                                                  },
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 1018,
                                                      "character": 2
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                },
                                                {
                                                  "id": 1031,
                                                  "name": "userId",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "ID of the user whose factor is being deleted."
                                                  },
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 1021,
                                                      "character": 2
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [1030, 1031]
                                                }
                                              ],
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1016,
                                                  "character": 45
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 1019,
                                        "name": "AuthMFAAdminDeleteFactorResponse"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 1045,
                              "name": "listFactors",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 1046,
                                  "name": "listFactors",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Lists all factors associated to a user."
                                  },
                                  "parameters": [
                                    {
                                      "id": 1047,
                                      "name": "params",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 1041,
                                        "name": "AuthMFAAdminListFactorsParams",
                                        "dereferenced": {
                                          "id": 1041,
                                          "name": "AuthMFAAdminListFactorsParams",
                                          "kind": 4194304,
                                          "kindString": "Type alias",
                                          "flags": {},
                                          "comment": {
                                            "tags": [
                                              {
                                                "tag": "expermental",
                                                "text": "\n"
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1040,
                                              "character": 12
                                            }
                                          ],
                                          "type": {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 1042,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 1043,
                                                  "name": "userId",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "comment": {
                                                    "shortText": "ID of the user."
                                                  },
                                                  "sources": [
                                                    {
                                                      "fileName": "src/lib/types.ts",
                                                      "line": 1042,
                                                      "character": 2
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [1043]
                                                }
                                              ],
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 1040,
                                                  "character": 44
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 1032,
                                        "name": "AuthMFAAdminListFactorsResponse"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          ],
                          "groups": [
                            {
                              "title": "Methods",
                              "kind": 2048,
                              "children": [1048, 1045]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1050,
                              "character": 17
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 44,
                      "name": "createUser",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 152,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 45,
                          "name": "createUser",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
                          },
                          "parameters": [
                            {
                              "id": 46,
                              "name": "attributes",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 728,
                                "name": "AdminUserAttributes",
                                "dereferenced": {
                                  "id": 728,
                                  "name": "AdminUserAttributes",
                                  "kind": 256,
                                  "kindString": "Interface",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 730,
                                      "name": "app_metadata",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                        "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 405,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    },
                                    {
                                      "id": 733,
                                      "name": "ban_duration",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Determines how long a user is banned for.",
                                        "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 431,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 740,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's email."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 356,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.email"
                                      }
                                    },
                                    {
                                      "id": 731,
                                      "name": "email_confirm",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Confirms the user's email address if set to true.",
                                        "text": "Only a service role can modify.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 412,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 736,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `id` for the user.",
                                        "text": "Allows you to overwrite the default `id` set for the user.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 456,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 738,
                                      "name": "nonce",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                        "text": "Call reauthenticate() to obtain the nonce first.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 373,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.nonce"
                                      }
                                    },
                                    {
                                      "id": 737,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 366,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.password"
                                      }
                                    },
                                    {
                                      "id": 735,
                                      "name": "password_hash",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `password_hash` for the user's password.",
                                        "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 449,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 739,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's phone."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 361,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.phone"
                                      }
                                    },
                                    {
                                      "id": 732,
                                      "name": "phone_confirm",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Confirms the user's phone number if set to true.",
                                        "text": "Only a service role can modify.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 419,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 734,
                                      "name": "role",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `role` claim set in the user's access token JWT.",
                                        "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 440,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 729,
                                      "name": "user_metadata",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                        "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 395,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        730, 733, 740, 731, 736, 738, 737, 735, 739, 732, 734, 729
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 384,
                                      "character": 17
                                    }
                                  ],
                                  "extendedTypes": [
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 722,
                                          "name": "UserAttributes"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "data"
                                        }
                                      ],
                                      "qualifiedName": "Omit",
                                      "package": "typescript",
                                      "name": "Omit"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 646,
                                "name": "UserResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 68,
                      "name": "deleteUser",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 268,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 69,
                          "name": "deleteUser",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Delete a user. Requires a `service_role` key."
                          },
                          "parameters": [
                            {
                              "id": 70,
                              "name": "id",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The user id you want to remove."
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 71,
                              "name": "shouldSoftDelete",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 646,
                                "name": "UserResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 41,
                      "name": "generateLink",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 118,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 42,
                          "name": "generateLink",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Generates email links and OTPs to be sent via a custom email provider."
                          },
                          "parameters": [
                            {
                              "id": 43,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 899,
                                "name": "GenerateLinkParams",
                                "dereferenced": {
                                  "id": 899,
                                  "name": "GenerateLinkParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 752,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "id": 874,
                                        "name": "GenerateSignupLinkParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 709,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 875,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 877,
                                                "name": "email",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 711,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 879,
                                                "name": "options",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 713,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "reference",
                                                  "typeArguments": [
                                                    {
                                                      "type": "reference",
                                                      "id": 896,
                                                      "name": "GenerateLinkOptions"
                                                    },
                                                    {
                                                      "type": "union",
                                                      "types": [
                                                        {
                                                          "type": "literal",
                                                          "value": "data"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "redirectTo"
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "qualifiedName": "Pick",
                                                  "package": "typescript",
                                                  "name": "Pick"
                                                }
                                              },
                                              {
                                                "id": 878,
                                                "name": "password",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 712,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 876,
                                                "name": "type",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 710,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "literal",
                                                  "value": "signup"
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [877, 879, 878, 876]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 709,
                                                "character": 39
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "id": 880,
                                        "name": "GenerateInviteOrMagiclinkParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 716,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 881,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 883,
                                                "name": "email",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The user's email"
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 719,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 884,
                                                "name": "options",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 720,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "reference",
                                                  "typeArguments": [
                                                    {
                                                      "type": "reference",
                                                      "id": 896,
                                                      "name": "GenerateLinkOptions"
                                                    },
                                                    {
                                                      "type": "union",
                                                      "types": [
                                                        {
                                                          "type": "literal",
                                                          "value": "data"
                                                        },
                                                        {
                                                          "type": "literal",
                                                          "value": "redirectTo"
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "qualifiedName": "Pick",
                                                  "package": "typescript",
                                                  "name": "Pick"
                                                }
                                              },
                                              {
                                                "id": 882,
                                                "name": "type",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 717,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "invite"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "magiclink"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [883, 884, 882]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 716,
                                                "character": 46
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "id": 885,
                                        "name": "GenerateRecoveryLinkParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 723,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 886,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 888,
                                                "name": "email",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The user's email"
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 726,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 889,
                                                "name": "options",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 727,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "reference",
                                                  "typeArguments": [
                                                    {
                                                      "type": "reference",
                                                      "id": 896,
                                                      "name": "GenerateLinkOptions"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ],
                                                  "qualifiedName": "Pick",
                                                  "package": "typescript",
                                                  "name": "Pick"
                                                }
                                              },
                                              {
                                                "id": 887,
                                                "name": "type",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 724,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "literal",
                                                  "value": "recovery"
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [888, 889, 887]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 723,
                                                "character": 41
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "id": 890,
                                        "name": "GenerateEmailChangeLinkParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 730,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 891,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 893,
                                                "name": "email",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The user's email"
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 733,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 894,
                                                "name": "newEmail",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 737,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 895,
                                                "name": "options",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 738,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "reference",
                                                  "typeArguments": [
                                                    {
                                                      "type": "reference",
                                                      "id": 896,
                                                      "name": "GenerateLinkOptions"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "redirectTo"
                                                    }
                                                  ],
                                                  "qualifiedName": "Pick",
                                                  "package": "typescript",
                                                  "name": "Pick"
                                                }
                                              },
                                              {
                                                "id": 892,
                                                "name": "type",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 731,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": "email_change_current"
                                                    },
                                                    {
                                                      "type": "literal",
                                                      "value": "email_change_new"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [893, 894, 895, 892]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 730,
                                                "character": 44
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 900,
                                "name": "GenerateLinkResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 61,
                      "name": "getUserById",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 221,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 62,
                          "name": "getUserById",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Get user by id."
                          },
                          "parameters": [
                            {
                              "id": 63,
                              "name": "uid",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 646,
                                "name": "UserResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 34,
                      "name": "inviteUserByEmail",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 85,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 35,
                          "name": "inviteUserByEmail",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Sends an invite link to an email address."
                          },
                          "parameters": [
                            {
                              "id": 36,
                              "name": "email",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The email address of the user."
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 37,
                              "name": "options",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "Additional options to be included when inviting.\n"
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 38,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 39,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store additional metadata about the user. This maps to the `auth.users.user_metadata` column."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 89,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    },
                                    {
                                      "id": 40,
                                      "name": "redirectTo",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The URL which will be appended to the email link sent to the user's email address. Once clicked the user will end up on this URL."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 92,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [39, 40]
                                    }
                                  ]
                                }
                              },
                              "defaultValue": "{}"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 646,
                                "name": "UserResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 47,
                      "name": "listUsers",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 174,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 48,
                          "name": "listUsers",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Get a list of users.",
                            "text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
                          },
                          "parameters": [
                            {
                              "id": 49,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
                              },
                              "type": {
                                "type": "reference",
                                "id": 1071,
                                "name": "PageParams",
                                "dereferenced": {
                                  "id": 1071,
                                  "name": "PageParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1109,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1072,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1073,
                                          "name": "page",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The page number"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1111,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 1074,
                                          "name": "perPage",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Number of items returned per page"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1113,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [1073, 1074]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1109,
                                          "character": 25
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 50,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 51,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 177,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "intersection",
                                            "types": [
                                              {
                                                "type": "reflection",
                                                "declaration": {
                                                  "id": 52,
                                                  "name": "__type",
                                                  "kind": 65536,
                                                  "kindString": "Type literal",
                                                  "flags": {},
                                                  "children": [
                                                    {
                                                      "id": 54,
                                                      "name": "aud",
                                                      "kind": 1024,
                                                      "kindString": "Property",
                                                      "flags": {},
                                                      "sources": [
                                                        {
                                                          "fileName": "src/GoTrueAdminApi.ts",
                                                          "line": 177,
                                                          "character": 31
                                                        }
                                                      ],
                                                      "type": {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                      }
                                                    },
                                                    {
                                                      "id": 53,
                                                      "name": "users",
                                                      "kind": 1024,
                                                      "kindString": "Property",
                                                      "flags": {},
                                                      "sources": [
                                                        {
                                                          "fileName": "src/GoTrueAdminApi.ts",
                                                          "line": 177,
                                                          "character": 16
                                                        }
                                                      ],
                                                      "type": {
                                                        "type": "array",
                                                        "elementType": {
                                                          "type": "reference",
                                                          "id": 697,
                                                          "name": "User"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "groups": [
                                                    {
                                                      "title": "Properties",
                                                      "kind": 1024,
                                                      "children": [54, 53]
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "reference",
                                                "id": 1064,
                                                "name": "Pagination"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 55,
                                          "name": "error",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 177,
                                              "character": 59
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": null
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [51, 55]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 56,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 57,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 178,
                                              "character": 8
                                            }
                                          ],
                                          "type": {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 58,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "children": [
                                                {
                                                  "id": 59,
                                                  "name": "users",
                                                  "kind": 1024,
                                                  "kindString": "Property",
                                                  "flags": {},
                                                  "sources": [
                                                    {
                                                      "fileName": "src/GoTrueAdminApi.ts",
                                                      "line": 178,
                                                      "character": 16
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "tuple"
                                                  }
                                                }
                                              ],
                                              "groups": [
                                                {
                                                  "title": "Properties",
                                                  "kind": 1024,
                                                  "children": [59]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "id": 60,
                                          "name": "error",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueAdminApi.ts",
                                              "line": 178,
                                              "character": 29
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 1160,
                                            "name": "AuthError"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [57, 60]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 27,
                      "name": "signOut",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 60,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 28,
                          "name": "signOut",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Removes a logged-in session."
                          },
                          "parameters": [
                            {
                              "id": 29,
                              "name": "jwt",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "A valid, logged-in JWT."
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 30,
                              "name": "scope",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The logout sope.\n"
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "global"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "local"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "others"
                                  }
                                ]
                              },
                              "defaultValue": "'global'"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 31,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 32,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 63,
                                          "character": 15
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 33,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/GoTrueAdminApi.ts",
                                          "line": 63,
                                          "character": 27
                                        }
                                      ],
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reference",
                                            "id": 1160,
                                            "name": "AuthError"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [32, 33]
                                    }
                                  ]
                                }
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 64,
                      "name": "updateUserById",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/GoTrueAdminApi.ts",
                          "line": 243,
                          "character": 8
                        }
                      ],
                      "signatures": [
                        {
                          "id": 65,
                          "name": "updateUserById",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Updates the user data."
                          },
                          "parameters": [
                            {
                              "id": 66,
                              "name": "uid",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 67,
                              "name": "attributes",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "comment": {
                                "shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
                              },
                              "type": {
                                "type": "reference",
                                "id": 728,
                                "name": "AdminUserAttributes",
                                "dereferenced": {
                                  "id": 728,
                                  "name": "AdminUserAttributes",
                                  "kind": 256,
                                  "kindString": "Interface",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 730,
                                      "name": "app_metadata",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                                        "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 405,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    },
                                    {
                                      "id": 733,
                                      "name": "ban_duration",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Determines how long a user is banned for.",
                                        "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 431,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 740,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's email."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 356,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.email"
                                      }
                                    },
                                    {
                                      "id": 731,
                                      "name": "email_confirm",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Confirms the user's email address if set to true.",
                                        "text": "Only a service role can modify.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 412,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 736,
                                      "name": "id",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `id` for the user.",
                                        "text": "Allows you to overwrite the default `id` set for the user.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 456,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 738,
                                      "name": "nonce",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                        "text": "Call reauthenticate() to obtain the nonce first.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 373,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.nonce"
                                      }
                                    },
                                    {
                                      "id": 737,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 366,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.password"
                                      }
                                    },
                                    {
                                      "id": 735,
                                      "name": "password_hash",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `password_hash` for the user's password.",
                                        "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 449,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 739,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The user's phone."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 361,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      "inheritedFrom": {
                                        "type": "reference",
                                        "name": "Omit.phone"
                                      }
                                    },
                                    {
                                      "id": 732,
                                      "name": "phone_confirm",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "Confirms the user's phone number if set to true.",
                                        "text": "Only a service role can modify.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 419,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 734,
                                      "name": "role",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "The `role` claim set in the user's access token JWT.",
                                        "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 440,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 729,
                                      "name": "user_metadata",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "comment": {
                                        "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                        "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 395,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "object"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [
                                        730, 733, 740, 731, 736, 738, 737, 735, 739, 732, 734, 729
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 384,
                                      "character": 17
                                    }
                                  ],
                                  "extendedTypes": [
                                    {
                                      "type": "reference",
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 722,
                                          "name": "UserAttributes"
                                        },
                                        {
                                          "type": "literal",
                                          "value": "data"
                                        }
                                      ],
                                      "qualifiedName": "Omit",
                                      "package": "typescript",
                                      "name": "Omit"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 646,
                                "name": "UserResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Constructors",
                      "kind": 512,
                      "children": [2]
                    },
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [16]
                    },
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [44, 68, 41, 61, 34, 47, 27, 64]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/GoTrueAdminApi.ts",
                      "line": 25,
                      "character": 21
                    }
                  ]
                }
              }
            },
            {
              "id": 85,
              "name": "mfa",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Namespace for the MFA methods."
              },
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 143,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 995,
                "name": "GoTrueMFAApi",
                "dereferenced": {
                  "id": 995,
                  "name": "GoTrueMFAApi",
                  "kind": 256,
                  "kindString": "Interface",
                  "flags": {},
                  "comment": {
                    "shortText": "Contains the full multi-factor authentication API."
                  },
                  "children": [
                    {
                      "id": 1003,
                      "name": "challenge",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1004,
                          "name": "challenge",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
                          },
                          "parameters": [
                            {
                              "id": 1005,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 930,
                                "name": "MFAChallengeParams",
                                "dereferenced": {
                                  "id": 930,
                                  "name": "MFAChallengeParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 822,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 931,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 933,
                                          "name": "channel",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 826,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "whatsapp"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 932,
                                          "name": "factorId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the factor to be challenged. Returned in enroll()."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 824,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [933, 932]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 822,
                                          "character": 33
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 961,
                                "name": "AuthMFAChallengeResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1012,
                      "name": "challengeAndVerify",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1013,
                          "name": "challengeAndVerify",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                          },
                          "parameters": [
                            {
                              "id": 1014,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 934,
                                "name": "MFAChallengeAndVerifyParams",
                                "dereferenced": {
                                  "id": 934,
                                  "name": "MFAChallengeAndVerifyParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 829,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 935,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 937,
                                          "name": "code",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Verification code provided by the user."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 833,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 936,
                                          "name": "factorId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the factor being verified. Returned in enroll()."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 831,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [937, 936]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 829,
                                          "character": 42
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 938,
                                "name": "AuthMFAVerifyResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 996,
                      "name": "enroll",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 997,
                          "name": "enroll",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                            "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
                          },
                          "parameters": [
                            {
                              "id": 998,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1078,
                                "name": "MFAEnrollTOTPParams",
                                "dereferenced": {
                                  "id": 1078,
                                  "name": "MFAEnrollTOTPParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1130,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1079,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1080,
                                          "name": "factorType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "The type of factor being enrolled."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1132,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "totp"
                                          }
                                        },
                                        {
                                          "id": 1082,
                                          "name": "friendlyName",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Human readable name assigned to the factor."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1136,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 1081,
                                          "name": "issuer",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Domain which the user is enrolled with."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1134,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [1080, 1082, 1081]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1130,
                                          "character": 34
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1088,
                                "name": "AuthMFAEnrollTOTPResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        },
                        {
                          "id": 999,
                          "name": "enroll",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 1000,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 1083,
                                "name": "MFAEnrollPhoneParams",
                                "dereferenced": {
                                  "id": 1083,
                                  "name": "MFAEnrollPhoneParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1138,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1084,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1085,
                                          "name": "factorType",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "The type of factor being enrolled."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1140,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "phone"
                                          }
                                        },
                                        {
                                          "id": 1086,
                                          "name": "friendlyName",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Human readable name assigned to the factor."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1142,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 1087,
                                          "name": "phone",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 1144,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [1085, 1086, 1087]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1138,
                                          "character": 35
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 1104,
                                "name": "AuthMFAEnrollPhoneResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        },
                        {
                          "id": 1001,
                          "name": "enroll",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 1002,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 921,
                                "name": "MFAEnrollParams",
                                "dereferenced": {
                                  "id": 921,
                                  "name": "MFAEnrollParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 804,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "id": 1078,
                                        "name": "MFAEnrollTOTPParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1130,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 1079,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 1080,
                                                "name": "factorType",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The type of factor being enrolled."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1132,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "literal",
                                                  "value": "totp"
                                                }
                                              },
                                              {
                                                "id": 1082,
                                                "name": "friendlyName",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "comment": {
                                                  "shortText": "Human readable name assigned to the factor."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1136,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 1081,
                                                "name": "issuer",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "comment": {
                                                  "shortText": "Domain which the user is enrolled with."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1134,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [1080, 1082, 1081]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 1130,
                                                "character": 34
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "id": 1083,
                                        "name": "MFAEnrollPhoneParams",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1138,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 1084,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 1085,
                                                "name": "factorType",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "The type of factor being enrolled."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1140,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "literal",
                                                  "value": "phone"
                                                }
                                              },
                                              {
                                                "id": 1086,
                                                "name": "friendlyName",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {
                                                  "isOptional": true
                                                },
                                                "comment": {
                                                  "shortText": "Human readable name assigned to the factor."
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1142,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              },
                                              {
                                                "id": 1087,
                                                "name": "phone",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "comment": {
                                                  "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                                                },
                                                "sources": [
                                                  {
                                                    "fileName": "src/lib/types.ts",
                                                    "line": 1144,
                                                    "character": 2
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [1085, 1086, 1087]
                                              }
                                            ],
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 1138,
                                                "character": 35
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 951,
                                "name": "AuthMFAEnrollResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1017,
                      "name": "getAuthenticatorAssuranceLevel",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1018,
                          "name": "getAuthenticatorAssuranceLevel",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                            "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 984,
                                "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1015,
                      "name": "listFactors",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1016,
                          "name": "listFactors",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Returns the list of MFA factors enabled for this user.",
                            "tags": [
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#enroll}"
                              },
                              {
                                "tag": "see",
                                "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                              },
                              {
                                "tag": "see",
                                "text": "{@link GoTrueClient#getUser}\n\n"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 972,
                                "name": "AuthMFAListFactorsResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1009,
                      "name": "unenroll",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1010,
                          "name": "unenroll",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
                          },
                          "parameters": [
                            {
                              "id": 1011,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 922,
                                "name": "MFAUnenrollParams",
                                "dereferenced": {
                                  "id": 922,
                                  "name": "MFAUnenrollParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 806,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 923,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 924,
                                          "name": "factorId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the factor being unenrolled."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 808,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [924]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 806,
                                          "character": 32
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 952,
                                "name": "AuthMFAUnenrollResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    },
                    {
                      "id": 1006,
                      "name": "verify",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 1007,
                          "name": "verify",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                          },
                          "parameters": [
                            {
                              "id": 1008,
                              "name": "params",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "id": 925,
                                "name": "MFAVerifyParams",
                                "dereferenced": {
                                  "id": 925,
                                  "name": "MFAVerifyParams",
                                  "kind": 4194304,
                                  "kindString": "Type alias",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 811,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 926,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 928,
                                          "name": "challengeId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the challenge being verified. Returned in challenge()."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 816,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 929,
                                          "name": "code",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "Verification code provided by the user."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 819,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 927,
                                          "name": "factorId",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "ID of the factor being verified. Returned in enroll()."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 813,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [928, 929, 927]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 811,
                                          "character": 30
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 938,
                                "name": "AuthMFAVerifyResponse"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Methods",
                      "kind": 2048,
                      "children": [1003, 1012, 996, 1017, 1015, 1009, 1006]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 935,
                      "character": 17
                    }
                  ]
                }
              }
            },
            {
              "id": 148,
              "name": "exchangeCodeForSession",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 596,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 149,
                  "name": "exchangeCodeForSession",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Log in an existing user by exchanging an Auth Code issued during the PKCE flow."
                  },
                  "parameters": [
                    {
                      "id": 150,
                      "name": "authCode",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 596,
                        "name": "AuthTokenResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 478,
              "name": "getClaims",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 2642,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 479,
                  "name": "getClaims",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "This method may change in future versions."
                      },
                      {
                        "tag": "description",
                        "text": "Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 480,
                      "name": "jwt",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 481,
                      "name": "jwks",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 482,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 483,
                              "name": "keys",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 2644,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 1135,
                                  "name": "JWK"
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [483]
                            }
                          ]
                        }
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 484,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 485,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2647,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 486,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 487,
                                          "name": "claims",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 2647,
                                              "character": 16
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 1131,
                                            "name": "JwtPayload"
                                          }
                                        },
                                        {
                                          "id": 488,
                                          "name": "header",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 2647,
                                              "character": 36
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 1116,
                                            "name": "JwtHeader"
                                          }
                                        },
                                        {
                                          "id": 489,
                                          "name": "signature",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 2647,
                                              "character": 55
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "Uint8Array",
                                            "package": "typescript",
                                            "name": "Uint8Array"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [487, 488, 489]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 490,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2648,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [485, 490]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 491,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 492,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2650,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 493,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2650,
                                      "character": 20
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [492, 493]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 494,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 495,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2651,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 496,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 2651,
                                      "character": 20
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [495, 496]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 187,
              "name": "getSession",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 947,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 188,
                  "name": "getSession",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the session, refreshing it if necessary.",
                    "text": "The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n\n**IMPORTANT:** This method loads values directly from the storage attached\nto the client. If that storage is based on request cookies for example,\nthe values in it may not be authentic and therefore it's strongly advised\nagainst using this method and its results in such circumstances. A warning\nwill be emitted if this is detected. Use {@link #getUser()} instead.\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 189,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 190,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1040,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 191,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 192,
                                          "name": "session",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 1041,
                                              "character": 14
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "id": 657,
                                            "name": "Session"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [192]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 193,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1043,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [190, 193]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 194,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 195,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1046,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 196,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 197,
                                          "name": "session",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 1047,
                                              "character": 14
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": null
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [197]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 198,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1049,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [195, 198]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 199,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 200,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1052,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 201,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 202,
                                          "name": "session",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 1053,
                                              "character": 14
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": null
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [202]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 203,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1055,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [200, 203]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 250,
              "name": "getUser",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1178,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 251,
                  "name": "getUser",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Gets the current user details if there is an existing session. This method\nperforms a network request to the Supabase Auth server, so the returned\nvalue is authentic and can be used to base authorization rules on."
                  },
                  "parameters": [
                    {
                      "id": 252,
                      "name": "jwt",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 359,
              "name": "getUserIdentities",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1736,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 360,
                  "name": "getUserIdentities",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Gets all the identities linked to a user."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 361,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 362,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1738,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 363,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 364,
                                          "name": "identities",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/GoTrueClient.ts",
                                              "line": 1739,
                                              "character": 10
                                            }
                                          ],
                                          "type": {
                                            "type": "array",
                                            "elementType": {
                                              "type": "reference",
                                              "id": 670,
                                              "name": "UserIdentity"
                                            }
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [364]
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 365,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1741,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [362, 365]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 366,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 367,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1743,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 368,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1743,
                                      "character": 20
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [367, 368]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 132,
              "name": "initialize",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 298,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 133,
                  "name": "initialize",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1054,
                        "name": "InitializeResult"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 369,
              "name": "linkIdentity",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1760,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 370,
                  "name": "linkIdentity",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Links an oauth identity to an existing user.\nThis method supports the PKCE flow."
                  },
                  "parameters": [
                    {
                      "id": 371,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 803,
                        "name": "SignInWithOAuthCredentials",
                        "dereferenced": {
                          "id": 803,
                          "name": "SignInWithOAuthCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 585,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 804,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 806,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 588,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 807,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 810,
                                          "name": "queryParams",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "An object of query params"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 594,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 811,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 594,
                                                  "character": 18
                                                }
                                              ],
                                              "indexSignature": {
                                                "id": 812,
                                                "name": "__index",
                                                "kind": 8192,
                                                "kindString": "Index signature",
                                                "flags": {},
                                                "parameters": [
                                                  {
                                                    "id": 813,
                                                    "name": "key",
                                                    "kind": 32768,
                                                    "flags": {},
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 808,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they are confirmed."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 590,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 809,
                                          "name": "scopes",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A space-separated list of scopes granted to the OAuth application."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 592,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 814,
                                          "name": "skipBrowserRedirect",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 596,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [810, 808, 809, 814]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 588,
                                          "character": 12
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 805,
                                  "name": "provider",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "One of the providers supported by GoTrue."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 587,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 515,
                                    "name": "Provider",
                                    "dereferenced": {
                                      "id": 515,
                                      "name": "Provider",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "One of the providers supported by GoTrue."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 5,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "apple"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "azure"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "bitbucket"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "discord"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "facebook"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "figma"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "github"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "gitlab"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "google"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "kakao"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "keycloak"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "linkedin"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "linkedin_oidc"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "notion"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "slack"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "slack_oidc"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "spotify"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "twitch"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "twitter"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "workos"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "zoom"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "fly"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [806, 805]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 585,
                                  "character": 41
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 624,
                        "name": "OAuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 331,
              "name": "onAuthStateChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1634,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 332,
                  "name": "onAuthStateChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Receive a notification every time an auth event happens."
                  },
                  "parameters": [
                    {
                      "id": 333,
                      "name": "callback",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "A callback function to be invoked when an auth event happens.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 334,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 335,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 336,
                                  "name": "event",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 517,
                                    "name": "AuthChangeEvent"
                                  }
                                },
                                {
                                  "id": 337,
                                  "name": "session",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reference",
                                        "id": 657,
                                        "name": "Session"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "void"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 338,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 339,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/GoTrueClient.ts",
                              "line": 1637,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 340,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 341,
                                  "name": "subscription",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1637,
                                      "character": 12
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 741,
                                    "name": "Subscription",
                                    "dereferenced": {
                                      "id": 741,
                                      "name": "Subscription",
                                      "kind": 256,
                                      "kindString": "Interface",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 742,
                                          "name": "id",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {},
                                          "comment": {
                                            "shortText": "The subscriber UUID. This will be set by the client."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 463,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 743,
                                          "name": "callback",
                                          "kind": 2048,
                                          "kindString": "Method",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 467,
                                              "character": 2
                                            }
                                          ],
                                          "signatures": [
                                            {
                                              "id": 744,
                                              "name": "callback",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
                                              },
                                              "parameters": [
                                                {
                                                  "id": 745,
                                                  "name": "event",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "reference",
                                                    "id": 517,
                                                    "name": "AuthChangeEvent",
                                                    "dereferenced": {
                                                      "id": 517,
                                                      "name": "AuthChangeEvent",
                                                      "kind": 4194304,
                                                      "kindString": "Type alias",
                                                      "flags": {},
                                                      "sources": [
                                                        {
                                                          "fileName": "src/lib/types.ts",
                                                          "line": 31,
                                                          "character": 12
                                                        }
                                                      ],
                                                      "type": {
                                                        "type": "union",
                                                        "types": [
                                                          {
                                                            "type": "literal",
                                                            "value": "INITIAL_SESSION"
                                                          },
                                                          {
                                                            "type": "literal",
                                                            "value": "PASSWORD_RECOVERY"
                                                          },
                                                          {
                                                            "type": "literal",
                                                            "value": "SIGNED_IN"
                                                          },
                                                          {
                                                            "type": "literal",
                                                            "value": "SIGNED_OUT"
                                                          },
                                                          {
                                                            "type": "literal",
                                                            "value": "TOKEN_REFRESHED"
                                                          },
                                                          {
                                                            "type": "literal",
                                                            "value": "USER_UPDATED"
                                                          },
                                                          {
                                                            "id": 516,
                                                            "name": "AuthChangeEventMFA",
                                                            "kind": 4194304,
                                                            "kindString": "Type alias",
                                                            "flags": {},
                                                            "sources": [
                                                              {
                                                                "fileName": "src/lib/types.ts",
                                                                "line": 29,
                                                                "character": 12
                                                              }
                                                            ],
                                                            "type": {
                                                              "type": "literal",
                                                              "value": "MFA_CHALLENGE_VERIFIED"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "id": 746,
                                                  "name": "session",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "literal",
                                                        "value": null
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "id": 657,
                                                        "name": "Session"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "void"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "id": 747,
                                          "name": "unsubscribe",
                                          "kind": 2048,
                                          "kindString": "Method",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 471,
                                              "character": 2
                                            }
                                          ],
                                          "signatures": [
                                            {
                                              "id": 748,
                                              "name": "unsubscribe",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "comment": {
                                                "shortText": "Call this to remove the listener."
                                              },
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "void"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [742]
                                        },
                                        {
                                          "title": "Methods",
                                          "kind": 2048,
                                          "children": [743, 747]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 459,
                                          "character": 17
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [341]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [339]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": 180,
              "name": "reauthenticate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 863,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 181,
                  "name": "reauthenticate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sends a reauthentication OTP to the user's email or phone number.\nRequires the user to be signed-in."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 280,
              "name": "refreshSession",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1383,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 281,
                  "name": "refreshSession",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
                  },
                  "parameters": [
                    {
                      "id": 282,
                      "name": "currentSession",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The current session. If passed in, it must contain a refresh token.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 283,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 284,
                              "name": "refresh_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1383,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [284]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 184,
              "name": "resend",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 898,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 185,
                  "name": "resend",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP."
                  },
                  "parameters": [
                    {
                      "id": 186,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 847,
                        "name": "ResendParams",
                        "dereferenced": {
                          "id": 847,
                          "name": "ResendParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 665,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 848,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 850,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 668,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 851,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 669,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 852,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 854,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 673,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 853,
                                              "name": "emailRedirectTo",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A URL to send the user to after they have signed-in."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 671,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [854, 853]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 669,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 849,
                                      "name": "type",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 667,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 846,
                                            "name": "EmailOtpType"
                                          },
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "signup"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "email_change"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Extract",
                                        "package": "typescript",
                                        "name": "Extract"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [850, 851, 849]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 666,
                                      "character": 4
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 855,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 858,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 679,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 859,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 860,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 681,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [860]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 679,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 857,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 678,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 856,
                                      "name": "type",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 677,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 845,
                                            "name": "MobileOtpType"
                                          },
                                          {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "sms"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "phone_change"
                                              }
                                            ]
                                          }
                                        ],
                                        "qualifiedName": "Extract",
                                        "package": "typescript",
                                        "name": "Extract"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [858, 857, 856]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 676,
                                      "character": 4
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 581,
                        "name": "AuthOtpResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 345,
              "name": "resetPasswordForEmail",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1690,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 346,
                  "name": "resetPasswordForEmail",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sends a password reset request to an email address. This method supports the PKCE flow."
                  },
                  "parameters": [
                    {
                      "id": 347,
                      "name": "email",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The email address of the user."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 348,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 349,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 351,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1694,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 350,
                              "name": "redirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The URL to send the user to after they click the password reset link."
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1693,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [351, 350]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 352,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 353,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1698,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 354,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {}
                                    }
                                  }
                                },
                                {
                                  "id": 355,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1699,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [353, 355]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 356,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 357,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1701,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 358,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1701,
                                      "character": 20
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [357, 358]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 268,
              "name": "setSession",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1308,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 269,
                  "name": "setSession",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
                  },
                  "parameters": [
                    {
                      "id": 270,
                      "name": "currentSession",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The current session that minimally contains an access token and refresh token.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 271,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 272,
                              "name": "access_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1309,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 273,
                              "name": "refresh_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1310,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [272, 273]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 136,
              "name": "signInAnonymously",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 401,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 137,
                  "name": "signInAnonymously",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a new anonymous user.",
                    "returns": "A session where the is_anonymous claim in the access token JWT set to true\n"
                  },
                  "parameters": [
                    {
                      "id": 138,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 749,
                        "name": "SignInAnonymouslyCredentials",
                        "dereferenced": {
                          "id": 749,
                          "name": "SignInAnonymouslyCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 474,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 750,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 751,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 475,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 752,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 754,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 483,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 753,
                                          "name": "data",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 481,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "object"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [754, 753]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 475,
                                          "character": 12
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [751]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 474,
                                  "character": 43
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 168,
              "name": "signInWithIdToken",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 656,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 169,
                  "name": "signInWithIdToken",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Allows signing in with an OIDC ID token. The authentication provider used\nshould be enabled and configured."
                  },
                  "parameters": [
                    {
                      "id": 170,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 815,
                        "name": "SignInWithIdTokenCredentials",
                        "dereferenced": {
                          "id": 815,
                          "name": "SignInWithIdTokenCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 600,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 816,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 820,
                                  "name": "access_token",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 606,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 821,
                                  "name": "nonce",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 608,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 822,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 609,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 823,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 824,
                                          "name": "captchaToken",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Verification token received when the user completes the captcha on the site."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 611,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [824]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 609,
                                          "character": 12
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 817,
                                  "name": "provider",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated)."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 602,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "google"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "apple"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "azure"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "facebook"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "kakao"
                                      },
                                      {
                                        "type": "intersection",
                                        "types": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 818,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 602,
                                                  "character": 76
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 819,
                                  "name": "token",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 604,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [820, 821, 822, 817, 819]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 600,
                                  "character": 43
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 596,
                        "name": "AuthTokenResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 145,
              "name": "signInWithOAuth",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 584,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 146,
                  "name": "signInWithOAuth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Log in an existing user via a third-party provider.\nThis method supports the PKCE flow."
                  },
                  "parameters": [
                    {
                      "id": 147,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 803,
                        "name": "SignInWithOAuthCredentials",
                        "dereferenced": {
                          "id": 803,
                          "name": "SignInWithOAuthCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 585,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 804,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 806,
                                  "name": "options",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 588,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 807,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 810,
                                          "name": "queryParams",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "An object of query params"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 594,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 811,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 594,
                                                  "character": 18
                                                }
                                              ],
                                              "indexSignature": {
                                                "id": 812,
                                                "name": "__index",
                                                "kind": 8192,
                                                "kindString": "Index signature",
                                                "flags": {},
                                                "parameters": [
                                                  {
                                                    "id": 813,
                                                    "name": "key",
                                                    "kind": 32768,
                                                    "flags": {},
                                                    "type": {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "id": 808,
                                          "name": "redirectTo",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A URL to send the user to after they are confirmed."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 590,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 809,
                                          "name": "scopes",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "A space-separated list of scopes granted to the OAuth application."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 592,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 814,
                                          "name": "skipBrowserRedirect",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 596,
                                              "character": 4
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [810, 808, 809, 814]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 588,
                                          "character": 12
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "id": 805,
                                  "name": "provider",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "One of the providers supported by GoTrue."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 587,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 515,
                                    "name": "Provider",
                                    "dereferenced": {
                                      "id": 515,
                                      "name": "Provider",
                                      "kind": 4194304,
                                      "kindString": "Type alias",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "One of the providers supported by GoTrue."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 5,
                                          "character": 12
                                        }
                                      ],
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": "apple"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "azure"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "bitbucket"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "discord"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "facebook"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "figma"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "github"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "gitlab"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "google"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "kakao"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "keycloak"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "linkedin"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "linkedin_oidc"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "notion"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "slack"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "slack_oidc"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "spotify"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "twitch"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "twitter"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "workos"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "zoom"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "fly"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [806, 805]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 585,
                                  "character": 41
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 624,
                        "name": "OAuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 171,
              "name": "signInWithOtp",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 711,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 172,
                  "name": "signInWithOtp",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Log in a user using magiclink or a one-time password (OTP).",
                    "text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n\nDo note that you will need to configure a Whatsapp sender on Twilio\nif you are using phone sign in with the 'whatsapp' channel. The whatsapp\nchannel is not supported on other providers\nat this time.\nThis method supports PKCE when an email is passed.\n"
                  },
                  "parameters": [
                    {
                      "id": 173,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 785,
                        "name": "SignInWithPasswordlessCredentials",
                        "dereferenced": {
                          "id": 785,
                          "name": "SignInWithPasswordlessCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 546,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 786,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 787,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's email address."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 549,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 788,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 550,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 789,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 793,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 562,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 792,
                                              "name": "data",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 560,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "object"
                                              }
                                            },
                                            {
                                              "id": 790,
                                              "name": "emailRedirectTo",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "The redirect url embedded in the email link"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 552,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 791,
                                              "name": "shouldCreateUser",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 554,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [793, 792, 790, 791]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 550,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [787, 788]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 547,
                                      "character": 4
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 794,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 796,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 568,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 797,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 800,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 578,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 801,
                                              "name": "channel",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 580,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": "sms"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "whatsapp"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": 799,
                                              "name": "data",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 576,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "object"
                                              }
                                            },
                                            {
                                              "id": 798,
                                              "name": "shouldCreateUser",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "If set to false, this method will not create a new user. Defaults to true."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 570,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [800, 801, 799, 798]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 568,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 795,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's phone number."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 567,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [796, 795]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 565,
                                      "character": 4
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 581,
                        "name": "AuthOtpResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 142,
              "name": "signInWithPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 521,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 143,
                  "name": "signInWithPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Log in an existing user with an email and password or phone and password.",
                    "text": "Be aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
                  },
                  "parameters": [
                    {
                      "id": 144,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 772,
                        "name": "SignInWithPasswordCredentials",
                        "dereferenced": {
                          "id": 772,
                          "name": "SignInWithPasswordCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 524,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 773,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 774,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's email address."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 527,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 776,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 530,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 777,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 778,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 532,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [778]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 530,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 775,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 529,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [774, 776, 775]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 525,
                                      "character": 4
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 779,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 782,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 540,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 783,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 784,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 542,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [784]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 540,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 781,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 539,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 780,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's phone number."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 537,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [782, 781, 780]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 535,
                                      "character": 4
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 609,
                        "name": "AuthTokenResponsePassword"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 177,
              "name": "signInWithSSO",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 825,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 178,
                  "name": "signInWithSSO",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
                    "text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n"
                  },
                  "parameters": [
                    {
                      "id": 179,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 861,
                        "name": "SignInWithSSO",
                        "dereferenced": {
                          "id": 861,
                          "name": "SignInWithSSO",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 685,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 862,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 864,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 690,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 865,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 867,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 694,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 866,
                                              "name": "redirectTo",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A URL to send the user to after they have signed-in."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 692,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [867, 866]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 690,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 863,
                                      "name": "providerId",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "UUID of the SSO provider to invoke single-sign on to."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 688,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [864, 863]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 686,
                                      "character": 4
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 868,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 869,
                                      "name": "domain",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Domain name of the organization for which to invoke single-sign on."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 699,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 870,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 701,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 871,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 873,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 705,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 872,
                                              "name": "redirectTo",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A URL to send the user to after they have signed-in."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 703,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [873, 872]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 701,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [869, 870]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 697,
                                      "character": 4
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 637,
                        "name": "SSOResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 321,
              "name": "signOut",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1590,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 322,
                  "name": "signOut",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
                    "text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n\nIf using `others` scope, no `SIGNED_OUT` event is fired!\n"
                  },
                  "parameters": [
                    {
                      "id": 323,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1075,
                        "name": "SignOut",
                        "dereferenced": {
                          "id": 1075,
                          "name": "SignOut",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1116,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1076,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1077,
                                  "name": "scope",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1127,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "global"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "local"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "others"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1077]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1116,
                                  "character": 22
                                }
                              ]
                            }
                          }
                        }
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 324,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 325,
                              "name": "error",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1590,
                                  "character": 67
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [325]
                            }
                          ]
                        }
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 139,
              "name": "signUp",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 444,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 140,
                  "name": "signUp",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a new user.",
                    "text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\nThis method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n",
                    "returns": "A logged-in session if the server has \"autoconfirm\" ON"
                  },
                  "parameters": [
                    {
                      "id": 141,
                      "name": "credentials",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 755,
                        "name": "SignUpWithPasswordCredentials",
                        "dereferenced": {
                          "id": 755,
                          "name": "SignUpWithPasswordCredentials",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 487,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 756,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 757,
                                      "name": "email",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's email address."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 490,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 759,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 493,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 760,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 763,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site."
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 503,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 762,
                                              "name": "data",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 501,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "object"
                                              }
                                            },
                                            {
                                              "id": 761,
                                              "name": "emailRedirectTo",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "The redirect url embedded in the email link"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 495,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [763, 762, 761]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 493,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 758,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 492,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [757, 759, 758]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 488,
                                      "character": 4
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 764,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 767,
                                      "name": "options",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 511,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 768,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 770,
                                              "name": "captchaToken",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 519,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 771,
                                              "name": "channel",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 521,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "literal",
                                                    "value": "sms"
                                                  },
                                                  {
                                                    "type": "literal",
                                                    "value": "whatsapp"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "id": 769,
                                              "name": "data",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "comment": {
                                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/lib/types.ts",
                                                  "line": 517,
                                                  "character": 8
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "object"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [770, 771, 769]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 511,
                                              "character": 16
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 766,
                                      "name": "password",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's password."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 510,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 765,
                                      "name": "phone",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The user's phone number."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 508,
                                          "character": 6
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [767, 766, 765]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 506,
                                      "character": 4
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 427,
              "name": "startAutoRefresh",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 2175,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 428,
                  "name": "startAutoRefresh",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
                    "text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desirable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 429,
              "name": "stopAutoRefresh",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 2188,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 430,
                  "name": "stopAutoRefresh",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Stops an active auto refresh process running in the background (if any).",
                    "text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 372,
              "name": "unlinkIdentity",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1796,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 373,
                  "name": "unlinkIdentity",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked."
                  },
                  "parameters": [
                    {
                      "id": 374,
                      "name": "identity",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 670,
                        "name": "UserIdentity",
                        "dereferenced": {
                          "id": 670,
                          "name": "UserIdentity",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "children": [
                            {
                              "id": 679,
                              "name": "created_at",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 285,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 671,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 278,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 673,
                              "name": "identity_data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 280,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 674,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "indexSignature": {
                                    "id": 675,
                                    "name": "__index",
                                    "kind": 8192,
                                    "kindString": "Index signature",
                                    "flags": {},
                                    "parameters": [
                                      {
                                        "id": 676,
                                        "name": "key",
                                        "kind": 32768,
                                        "flags": {},
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "any"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "id": 677,
                              "name": "identity_id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 283,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 680,
                              "name": "last_sign_in_at",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 286,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 678,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 284,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 681,
                              "name": "updated_at",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 287,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 672,
                              "name": "user_id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 279,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [679, 671, 673, 677, 680, 678, 681, 672]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 277,
                              "character": 17
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 375,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 376,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1798,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 377,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {}
                                    }
                                  }
                                },
                                {
                                  "id": 378,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1799,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [376, 378]
                                }
                              ]
                            }
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 379,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 380,
                                  "name": "data",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1801,
                                      "character": 8
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": null
                                  }
                                },
                                {
                                  "id": 381,
                                  "name": "error",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/GoTrueClient.ts",
                                      "line": 1801,
                                      "character": 20
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 1160,
                                    "name": "AuthError"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [380, 381]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 256,
              "name": "updateUser",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 1239,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 257,
                  "name": "updateUser",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates user data for a logged in user."
                  },
                  "parameters": [
                    {
                      "id": 258,
                      "name": "attributes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 722,
                        "name": "UserAttributes",
                        "dereferenced": {
                          "id": 722,
                          "name": "UserAttributes",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "children": [
                            {
                              "id": 727,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 381,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 723,
                              "name": "email",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's email."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 356,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 726,
                              "name": "nonce",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                                "text": "Call reauthenticate() to obtain the nonce first.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 373,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 725,
                              "name": "password",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's password."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 366,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 724,
                              "name": "phone",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The user's phone."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 361,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [727, 723, 726, 725, 724]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 352,
                              "character": 17
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 259,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 260,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 261,
                              "name": "emailRedirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/GoTrueClient.ts",
                                  "line": 1242,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [261]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 646,
                        "name": "UserResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 174,
              "name": "verifyOtp",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/GoTrueClient.ts",
                  "line": 764,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 175,
                  "name": "verifyOtp",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Log in a user given a User supplied OTP or TokenHash received through mobile or email."
                  },
                  "parameters": [
                    {
                      "id": 176,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 825,
                        "name": "VerifyOtpParams",
                        "dereferenced": {
                          "id": 825,
                          "name": "VerifyOtpParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 615,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "id": 826,
                                "name": "VerifyMobileOtpParams",
                                "kind": 256,
                                "kindString": "Interface",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 830,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 623,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 831,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 833,
                                            "name": "captchaToken",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "comment": {
                                              "shortText": "Verification token received when the user completes the captcha on the site.",
                                              "tags": [
                                                {
                                                  "tag": "deprecated",
                                                  "text": "\n"
                                                }
                                              ]
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 632,
                                                "character": 4
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 832,
                                            "name": "redirectTo",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "comment": {
                                              "shortText": "A URL to send the user to after they are confirmed."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 625,
                                                "character": 4
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [833, 832]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 827,
                                    "name": "phone",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's phone number."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 618,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 828,
                                    "name": "token",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The otp sent to the user's phone number."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 620,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 829,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's verification type."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 622,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "id": 845,
                                      "name": "MobileOtpType",
                                      "dereferenced": {
                                        "id": 845,
                                        "name": "MobileOtpType",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 662,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "sms"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "phone_change"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [830, 827, 828, 829]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 616,
                                    "character": 17
                                  }
                                ]
                              },
                              {
                                "id": 834,
                                "name": "VerifyEmailOtpParams",
                                "kind": 256,
                                "kindString": "Interface",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 835,
                                    "name": "email",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's email address."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 637,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 838,
                                    "name": "options",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 642,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 839,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 841,
                                            "name": "captchaToken",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "comment": {
                                              "shortText": "Verification token received when the user completes the captcha on the site.",
                                              "tags": [
                                                {
                                                  "tag": "deprecated",
                                                  "text": "\n"
                                                }
                                              ]
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 650,
                                                "character": 4
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 840,
                                            "name": "redirectTo",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                              "isOptional": true
                                            },
                                            "comment": {
                                              "shortText": "A URL to send the user to after they are confirmed."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 644,
                                                "character": 4
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [841, 840]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 836,
                                    "name": "token",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The otp sent to the user's email address."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 639,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 837,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's verification type."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 641,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "id": 846,
                                      "name": "EmailOtpType",
                                      "dereferenced": {
                                        "id": 846,
                                        "name": "EmailOtpType",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 663,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "signup"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "invite"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "magiclink"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "recovery"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "email_change"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "email"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [835, 838, 836, 837]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 635,
                                    "character": 17
                                  }
                                ]
                              },
                              {
                                "id": 842,
                                "name": "VerifyTokenHashParams",
                                "kind": 256,
                                "kindString": "Interface",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 843,
                                    "name": "token_hash",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The token hash used in an email link"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 656,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 844,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "The user's verification type."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 659,
                                        "character": 2
                                      }
                                    ],
                                    "type": {
                                      "type": "reference",
                                      "id": 846,
                                      "name": "EmailOtpType",
                                      "dereferenced": {
                                        "id": 846,
                                        "name": "EmailOtpType",
                                        "kind": 4194304,
                                        "kindString": "Type alias",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 663,
                                            "character": 12
                                          }
                                        ],
                                        "type": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "literal",
                                              "value": "signup"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "invite"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "magiclink"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "recovery"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "email_change"
                                            },
                                            {
                                              "type": "literal",
                                              "value": "email"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [843, 844]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 654,
                                    "character": 17
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 554,
                        "name": "AuthResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [80]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [84, 85]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                148, 478, 187, 250, 359, 132, 369, 331, 180, 280, 184, 345, 268, 136, 168, 145, 171,
                142, 177, 321, 139, 427, 429, 372, 256, 174
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/GoTrueClient.ts",
              "line": 130,
              "character": 21
            }
          ]
        },
        {
          "id": 507,
          "name": "NavigatorLockAcquireTimeoutError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 508,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 509,
                  "name": "new NavigatorLockAcquireTimeoutError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 510,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 507,
                    "name": "NavigatorLockAcquireTimeoutError"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "LockAcquireTimeoutError.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "LockAcquireTimeoutError.constructor"
              }
            },
            {
              "id": 511,
              "name": "isAcquireTimeout",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/lib/locks.ts",
                  "line": 24,
                  "character": 18
                }
              ],
              "type": {
                "type": "literal",
                "value": true
              },
              "defaultValue": "true",
              "inheritedFrom": {
                "type": "reference",
                "name": "LockAcquireTimeoutError.isAcquireTimeout"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [508]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [511]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/locks.ts",
              "line": 31,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "LockAcquireTimeoutError"
            }
          ]
        },
        {
          "id": 666,
          "name": "AMREntry",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "An authentication methord reference (AMR) entry.",
            "text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
            "tags": [
              {
                "tag": "see",
                "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
              }
            ]
          },
          "children": [
            {
              "id": 667,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Authentication method name."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 268,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "password"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 668,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": "otp"
                  },
                  {
                    "type": "literal",
                    "value": "oauth"
                  },
                  {
                    "type": "literal",
                    "value": "mfa/totp"
                  }
                ]
              }
            },
            {
              "id": 669,
              "name": "timestamp",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 274,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [667, 669]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 266,
              "character": 17
            }
          ]
        },
        {
          "id": 728,
          "name": "AdminUserAttributes",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 730,
              "name": "app_metadata",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
                "text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 405,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            },
            {
              "id": 733,
              "name": "ban_duration",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Determines how long a user is banned for.",
                "text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 431,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 740,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's email."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 356,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Omit.email"
              }
            },
            {
              "id": 731,
              "name": "email_confirm",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Confirms the user's email address if set to true.",
                "text": "Only a service role can modify.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 412,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 736,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The `id` for the user.",
                "text": "Allows you to overwrite the default `id` set for the user.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 456,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 738,
              "name": "nonce",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                "text": "Call reauthenticate() to obtain the nonce first.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 373,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Omit.nonce"
              }
            },
            {
              "id": 737,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's password."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 366,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Omit.password"
              }
            },
            {
              "id": 735,
              "name": "password_hash",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The `password_hash` for the user's password.",
                "text": "Allows you to specify a password hash for the user. This is useful for migrating a user's password hash from another service.\n\nSupports bcrypt, scrypt (firebase), and argon2 password hashes.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 449,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 739,
              "name": "phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's phone."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 361,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Omit.phone"
              }
            },
            {
              "id": 732,
              "name": "phone_confirm",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Confirms the user's phone number if set to true.",
                "text": "Only a service role can modify.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 419,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 734,
              "name": "role",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The `role` claim set in the user's access token JWT.",
                "text": "When a user signs up, this role is set to `authenticated` by default. You should only modify the `role` if you need to provision several levels of admin access that have different permissions on individual columns in your database.\n\nSetting this role to `service_role` is not recommended as it grants the user admin privileges.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 440,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 729,
              "name": "user_metadata",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                "text": "The `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 395,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [730, 733, 740, 731, 736, 738, 737, 735, 739, 732, 734, 729]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 384,
              "character": 17
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 722,
                  "name": "UserAttributes"
                },
                {
                  "type": "literal",
                  "value": "data"
                }
              ],
              "qualifiedName": "Omit",
              "package": "typescript",
              "name": "Omit"
            }
          ]
        },
        {
          "id": 682,
          "name": "Factor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "A MFA factor.",
            "tags": [
              {
                "tag": "see",
                "text": "{@link GoTrueMFAApi#enroll}"
              },
              {
                "tag": "see",
                "text": "{@link GoTrueMFAApi#listFactors}"
              },
              {
                "tag": "see",
                "text": "{@link GoTrueMFAAdminApi#listFactors}\n"
              }
            ]
          },
          "children": [
            {
              "id": 688,
              "name": "created_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 312,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 685,
              "name": "factor_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Type of factor. `totp` and `phone` supported with this version"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 307,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 686,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": "totp"
                  },
                  {
                    "type": "literal",
                    "value": "phone"
                  }
                ]
              }
            },
            {
              "id": 684,
              "name": "friendly_name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 302,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 683,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "ID of the factor."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 299,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 687,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "Factor's status."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 310,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "verified"
                  },
                  {
                    "type": "literal",
                    "value": "unverified"
                  }
                ]
              }
            },
            {
              "id": 689,
              "name": "updated_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 313,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [688, 685, 684, 683, 687, 689]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 297,
              "character": 17
            }
          ]
        },
        {
          "id": 896,
          "name": "GenerateLinkOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 897,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 747,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            },
            {
              "id": 898,
              "name": "redirectTo",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The URL which will be appended to the email link generated."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 749,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [897, 898]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 741,
              "character": 17
            }
          ]
        },
        {
          "id": 1044,
          "name": "GoTrueAdminMFAApi",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Contains the full multi-factor authentication administration API.",
            "tags": [
              {
                "tag": "expermental",
                "text": "\n"
              }
            ]
          },
          "children": [
            {
              "id": 1048,
              "name": "deleteFactor",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1049,
                  "name": "deleteFactor",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
                    "tags": [
                      {
                        "tag": "see",
                        "text": "{@link GoTrueMFAApi#unenroll}\n"
                      },
                      {
                        "tag": "expermental",
                        "text": "\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1050,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1028,
                        "name": "AuthMFAAdminDeleteFactorParams",
                        "dereferenced": {
                          "id": 1028,
                          "name": "AuthMFAAdminDeleteFactorParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "comment": {
                            "tags": [
                              {
                                "tag": "expermental",
                                "text": "\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1016,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1029,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1030,
                                  "name": "id",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the MFA factor to delete."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1018,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1031,
                                  "name": "userId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the user whose factor is being deleted."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1021,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1030, 1031]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1016,
                                  "character": 45
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1019,
                        "name": "AuthMFAAdminDeleteFactorResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1045,
              "name": "listFactors",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1046,
                  "name": "listFactors",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Lists all factors associated to a user."
                  },
                  "parameters": [
                    {
                      "id": 1047,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1041,
                        "name": "AuthMFAAdminListFactorsParams",
                        "dereferenced": {
                          "id": 1041,
                          "name": "AuthMFAAdminListFactorsParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "comment": {
                            "tags": [
                              {
                                "tag": "expermental",
                                "text": "\n"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1040,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1042,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1043,
                                  "name": "userId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the user."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1042,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1043]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1040,
                                  "character": 44
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1032,
                        "name": "AuthMFAAdminListFactorsResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [1048, 1045]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1050,
              "character": 17
            }
          ]
        },
        {
          "id": 995,
          "name": "GoTrueMFAApi",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "comment": {
            "shortText": "Contains the full multi-factor authentication API."
          },
          "children": [
            {
              "id": 1003,
              "name": "challenge",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1004,
                  "name": "challenge",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
                  },
                  "parameters": [
                    {
                      "id": 1005,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 930,
                        "name": "MFAChallengeParams",
                        "dereferenced": {
                          "id": 930,
                          "name": "MFAChallengeParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 822,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 931,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 933,
                                  "name": "channel",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 826,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "sms"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "whatsapp"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 932,
                                  "name": "factorId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the factor to be challenged. Returned in enroll()."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 824,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [933, 932]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 822,
                                  "character": 33
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 961,
                        "name": "AuthMFAChallengeResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1012,
              "name": "challengeAndVerify",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1013,
                  "name": "challengeAndVerify",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                  },
                  "parameters": [
                    {
                      "id": 1014,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 934,
                        "name": "MFAChallengeAndVerifyParams",
                        "dereferenced": {
                          "id": 934,
                          "name": "MFAChallengeAndVerifyParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 829,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 935,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 937,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Verification code provided by the user."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 833,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 936,
                                  "name": "factorId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the factor being verified. Returned in enroll()."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 831,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [937, 936]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 829,
                                  "character": 42
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 938,
                        "name": "AuthMFAVerifyResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 996,
              "name": "enroll",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 997,
                  "name": "enroll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
                    "text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
                  },
                  "parameters": [
                    {
                      "id": 998,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1078,
                        "name": "MFAEnrollTOTPParams",
                        "dereferenced": {
                          "id": 1078,
                          "name": "MFAEnrollTOTPParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1130,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1079,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1080,
                                  "name": "factorType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The type of factor being enrolled."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1132,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": "totp"
                                  }
                                },
                                {
                                  "id": 1082,
                                  "name": "friendlyName",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Human readable name assigned to the factor."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1136,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1081,
                                  "name": "issuer",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Domain which the user is enrolled with."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1134,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1080, 1082, 1081]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1130,
                                  "character": 34
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1088,
                        "name": "AuthMFAEnrollTOTPResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                },
                {
                  "id": 999,
                  "name": "enroll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1000,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1083,
                        "name": "MFAEnrollPhoneParams",
                        "dereferenced": {
                          "id": 1083,
                          "name": "MFAEnrollPhoneParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1138,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1084,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1085,
                                  "name": "factorType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The type of factor being enrolled."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1140,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "literal",
                                    "value": "phone"
                                  }
                                },
                                {
                                  "id": 1086,
                                  "name": "friendlyName",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Human readable name assigned to the factor."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1142,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 1087,
                                  "name": "phone",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1144,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1085, 1086, 1087]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1138,
                                  "character": 35
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1104,
                        "name": "AuthMFAEnrollPhoneResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                },
                {
                  "id": 1001,
                  "name": "enroll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1002,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 921,
                        "name": "MFAEnrollParams",
                        "dereferenced": {
                          "id": 921,
                          "name": "MFAEnrollParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 804,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "id": 1078,
                                "name": "MFAEnrollTOTPParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 1130,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1079,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 1080,
                                        "name": "factorType",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The type of factor being enrolled."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1132,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "literal",
                                          "value": "totp"
                                        }
                                      },
                                      {
                                        "id": 1082,
                                        "name": "friendlyName",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Human readable name assigned to the factor."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1136,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 1081,
                                        "name": "issuer",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Domain which the user is enrolled with."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1134,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [1080, 1082, 1081]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1130,
                                        "character": 34
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 1083,
                                "name": "MFAEnrollPhoneParams",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 1138,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 1084,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 1085,
                                        "name": "factorType",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "The type of factor being enrolled."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1140,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "literal",
                                          "value": "phone"
                                        }
                                      },
                                      {
                                        "id": 1086,
                                        "name": "friendlyName",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {
                                          "isOptional": true
                                        },
                                        "comment": {
                                          "shortText": "Human readable name assigned to the factor."
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1142,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 1087,
                                        "name": "phone",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "comment": {
                                          "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                                        },
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1144,
                                            "character": 2
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [1085, 1086, 1087]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1138,
                                        "character": 35
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 951,
                        "name": "AuthMFAEnrollResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1017,
              "name": "getAuthenticatorAssuranceLevel",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1018,
                  "name": "getAuthenticatorAssuranceLevel",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
                    "text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 984,
                        "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1015,
              "name": "listFactors",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1016,
                  "name": "listFactors",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the list of MFA factors enabled for this user.",
                    "tags": [
                      {
                        "tag": "see",
                        "text": "{@link GoTrueMFAApi#enroll}"
                      },
                      {
                        "tag": "see",
                        "text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
                      },
                      {
                        "tag": "see",
                        "text": "{@link GoTrueClient#getUser}\n\n"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 972,
                        "name": "AuthMFAListFactorsResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1009,
              "name": "unenroll",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1010,
                  "name": "unenroll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
                  },
                  "parameters": [
                    {
                      "id": 1011,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 922,
                        "name": "MFAUnenrollParams",
                        "dereferenced": {
                          "id": 922,
                          "name": "MFAUnenrollParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 806,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 923,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 924,
                                  "name": "factorId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the factor being unenrolled."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 808,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [924]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 806,
                                  "character": 32
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 952,
                        "name": "AuthMFAUnenrollResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 1006,
              "name": "verify",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 1007,
                  "name": "verify",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
                  },
                  "parameters": [
                    {
                      "id": 1008,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 925,
                        "name": "MFAVerifyParams",
                        "dereferenced": {
                          "id": 925,
                          "name": "MFAVerifyParams",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 811,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 926,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 928,
                                  "name": "challengeId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the challenge being verified. Returned in challenge()."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 816,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 929,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Verification code provided by the user."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 819,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 927,
                                  "name": "factorId",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "ID of the factor being verified. Returned in enroll()."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 813,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [928, 929, 927]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 811,
                                  "character": 30
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 938,
                        "name": "AuthMFAVerifyResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [1003, 1012, 996, 1017, 1015, 1009, 1006]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 935,
              "character": 17
            }
          ]
        },
        {
          "id": 1135,
          "name": "JWK",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 1138,
              "name": "alg",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1228,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1137,
              "name": "key_ops",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1227,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 1139,
              "name": "kid",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1229,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1136,
              "name": "kty",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1226,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "RSA"
                  },
                  {
                    "type": "literal",
                    "value": "EC"
                  },
                  {
                    "type": "literal",
                    "value": "oct"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [1138, 1137, 1139, 1136]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1225,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 1140,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 1141,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        },
        {
          "id": 657,
          "name": "Session",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 660,
              "name": "access_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 241,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 663,
              "name": "expires_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 253,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 662,
              "name": "expires_in",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 249,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 659,
              "name": "provider_refresh_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 237,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 658,
              "name": "provider_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 232,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 661,
              "name": "refresh_token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "A one-time used refresh token that never expires."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 245,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 664,
              "name": "token_type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 254,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 665,
              "name": "user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 255,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 697,
                "name": "User",
                "dereferenced": {
                  "id": 697,
                  "name": "User",
                  "kind": 256,
                  "kindString": "Interface",
                  "flags": {},
                  "children": [
                    {
                      "id": 708,
                      "name": "action_link",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 336,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 699,
                      "name": "app_metadata",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 327,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 690,
                        "name": "UserAppMetadata",
                        "dereferenced": {
                          "id": 690,
                          "name": "UserAppMetadata",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "children": [
                            {
                              "id": 691,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 317,
                                  "character": 2
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [691]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 316,
                              "character": 17
                            }
                          ],
                          "indexSignature": {
                            "id": 692,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 693,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      }
                    },
                    {
                      "id": 701,
                      "name": "aud",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 329,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 702,
                      "name": "confirmation_sent_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 330,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 712,
                      "name": "confirmed_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 340,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 711,
                      "name": "created_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 339,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 709,
                      "name": "email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 337,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 704,
                      "name": "email_change_sent_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 332,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 713,
                      "name": "email_confirmed_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 341,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 721,
                      "name": "factors",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 349,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 682,
                          "name": "Factor"
                        }
                      }
                    },
                    {
                      "id": 698,
                      "name": "id",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 326,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 718,
                      "name": "identities",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 346,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 670,
                          "name": "UserIdentity"
                        }
                      }
                    },
                    {
                      "id": 707,
                      "name": "invited_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 335,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 719,
                      "name": "is_anonymous",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 347,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 720,
                      "name": "is_sso_user",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 348,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 715,
                      "name": "last_sign_in_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 343,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 705,
                      "name": "new_email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 333,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 706,
                      "name": "new_phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 334,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 710,
                      "name": "phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 338,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 714,
                      "name": "phone_confirmed_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 342,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 703,
                      "name": "recovery_sent_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 331,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 716,
                      "name": "role",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 344,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 717,
                      "name": "updated_at",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 345,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 700,
                      "name": "user_metadata",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 328,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 694,
                        "name": "UserMetadata",
                        "dereferenced": {
                          "id": 694,
                          "name": "UserMetadata",
                          "kind": 256,
                          "kindString": "Interface",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 321,
                              "character": 17
                            }
                          ],
                          "indexSignature": {
                            "id": 695,
                            "name": "__index",
                            "kind": 8192,
                            "kindString": "Index signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 696,
                                "name": "key",
                                "kind": 32768,
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [
                        708, 699, 701, 702, 712, 711, 709, 704, 713, 721, 698, 718, 707, 719, 720,
                        715, 705, 706, 710, 714, 703, 716, 717, 700
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 325,
                      "character": 17
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [660, 663, 662, 659, 658, 661, 664, 665]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 228,
              "character": 17
            }
          ]
        },
        {
          "id": 741,
          "name": "Subscription",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 742,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The subscriber UUID. This will be set by the client."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 463,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 743,
              "name": "callback",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 467,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 744,
                  "name": "callback",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "The function to call every time there is an event. eg: (eventName) => {}"
                  },
                  "parameters": [
                    {
                      "id": 745,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 517,
                        "name": "AuthChangeEvent",
                        "dereferenced": {
                          "id": 517,
                          "name": "AuthChangeEvent",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 31,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "INITIAL_SESSION"
                              },
                              {
                                "type": "literal",
                                "value": "PASSWORD_RECOVERY"
                              },
                              {
                                "type": "literal",
                                "value": "SIGNED_IN"
                              },
                              {
                                "type": "literal",
                                "value": "SIGNED_OUT"
                              },
                              {
                                "type": "literal",
                                "value": "TOKEN_REFRESHED"
                              },
                              {
                                "type": "literal",
                                "value": "USER_UPDATED"
                              },
                              {
                                "id": 516,
                                "name": "AuthChangeEventMFA",
                                "kind": 4194304,
                                "kindString": "Type alias",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 29,
                                    "character": 12
                                  }
                                ],
                                "type": {
                                  "type": "literal",
                                  "value": "MFA_CHALLENGE_VERIFIED"
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "id": 746,
                      "name": "session",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 657,
                            "name": "Session"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 747,
              "name": "unsubscribe",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 471,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 748,
                  "name": "unsubscribe",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Call this to remove the listener."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [742]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [743, 747]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 459,
              "character": 17
            }
          ]
        },
        {
          "id": 697,
          "name": "User",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 708,
              "name": "action_link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 336,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 699,
              "name": "app_metadata",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 327,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 690,
                "name": "UserAppMetadata",
                "dereferenced": {
                  "id": 690,
                  "name": "UserAppMetadata",
                  "kind": 256,
                  "kindString": "Interface",
                  "flags": {},
                  "children": [
                    {
                      "id": 691,
                      "name": "provider",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 317,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [691]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 316,
                      "character": 17
                    }
                  ],
                  "indexSignature": {
                    "id": 692,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 693,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              }
            },
            {
              "id": 701,
              "name": "aud",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 329,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 702,
              "name": "confirmation_sent_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 330,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 712,
              "name": "confirmed_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 340,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 711,
              "name": "created_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 339,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 709,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 337,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 704,
              "name": "email_change_sent_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 332,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 713,
              "name": "email_confirmed_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 341,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 721,
              "name": "factors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 349,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 682,
                  "name": "Factor"
                }
              }
            },
            {
              "id": 698,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 326,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 718,
              "name": "identities",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 346,
                  "character": 2
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 670,
                  "name": "UserIdentity"
                }
              }
            },
            {
              "id": 707,
              "name": "invited_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 335,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 719,
              "name": "is_anonymous",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 347,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 720,
              "name": "is_sso_user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 348,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 715,
              "name": "last_sign_in_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 343,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 705,
              "name": "new_email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 333,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 706,
              "name": "new_phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 334,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 710,
              "name": "phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 338,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 714,
              "name": "phone_confirmed_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 342,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 703,
              "name": "recovery_sent_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 331,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 716,
              "name": "role",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 344,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 717,
              "name": "updated_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 345,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 700,
              "name": "user_metadata",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 328,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 694,
                "name": "UserMetadata",
                "dereferenced": {
                  "id": 694,
                  "name": "UserMetadata",
                  "kind": 256,
                  "kindString": "Interface",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 321,
                      "character": 17
                    }
                  ],
                  "indexSignature": {
                    "id": 695,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 696,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                708, 699, 701, 702, 712, 711, 709, 704, 713, 721, 698, 718, 707, 719, 720, 715, 705,
                706, 710, 714, 703, 716, 717, 700
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 325,
              "character": 17
            }
          ]
        },
        {
          "id": 690,
          "name": "UserAppMetadata",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 691,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 317,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [691]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 316,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 692,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 693,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        },
        {
          "id": 722,
          "name": "UserAttributes",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 727,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 381,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            },
            {
              "id": 723,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's email."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 356,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 726,
              "name": "nonce",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The nonce sent for reauthentication if the user's password is to be updated.",
                "text": "Call reauthenticate() to obtain the nonce first.\n"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 373,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 725,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's password."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 366,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 724,
              "name": "phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "comment": {
                "shortText": "The user's phone."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 361,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [727, 723, 726, 725, 724]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 352,
              "character": 17
            }
          ]
        },
        {
          "id": 670,
          "name": "UserIdentity",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 679,
              "name": "created_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 285,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 671,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 278,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 673,
              "name": "identity_data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 280,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 674,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": {
                    "id": 675,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 676,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              }
            },
            {
              "id": 677,
              "name": "identity_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 283,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 680,
              "name": "last_sign_in_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 286,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 678,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 284,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 681,
              "name": "updated_at",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 287,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 672,
              "name": "user_id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 279,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [679, 671, 673, 677, 680, 678, 681, 672]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 277,
              "character": 17
            }
          ]
        },
        {
          "id": 694,
          "name": "UserMetadata",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 321,
              "character": 17
            }
          ],
          "indexSignature": {
            "id": 695,
            "name": "__index",
            "kind": 8192,
            "kindString": "Index signature",
            "flags": {},
            "parameters": [
              {
                "id": 696,
                "name": "key",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        },
        {
          "id": 834,
          "name": "VerifyEmailOtpParams",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 835,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's email address."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 637,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 838,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 642,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 839,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 841,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site.",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 650,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 840,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 644,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [841, 840]
                    }
                  ]
                }
              }
            },
            {
              "id": 836,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The otp sent to the user's email address."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 639,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 837,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's verification type."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 641,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 846,
                "name": "EmailOtpType",
                "dereferenced": {
                  "id": 846,
                  "name": "EmailOtpType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 663,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "signup"
                      },
                      {
                        "type": "literal",
                        "value": "invite"
                      },
                      {
                        "type": "literal",
                        "value": "magiclink"
                      },
                      {
                        "type": "literal",
                        "value": "recovery"
                      },
                      {
                        "type": "literal",
                        "value": "email_change"
                      },
                      {
                        "type": "literal",
                        "value": "email"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [835, 838, 836, 837]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 635,
              "character": 17
            }
          ]
        },
        {
          "id": 826,
          "name": "VerifyMobileOtpParams",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 830,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 623,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 831,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 833,
                      "name": "captchaToken",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Verification token received when the user completes the captcha on the site.",
                        "tags": [
                          {
                            "tag": "deprecated",
                            "text": "\n"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 632,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 832,
                      "name": "redirectTo",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "A URL to send the user to after they are confirmed."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 625,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [833, 832]
                    }
                  ]
                }
              }
            },
            {
              "id": 827,
              "name": "phone",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's phone number."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 618,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 828,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The otp sent to the user's phone number."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 620,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 829,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's verification type."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 622,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 845,
                "name": "MobileOtpType",
                "dereferenced": {
                  "id": 845,
                  "name": "MobileOtpType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 662,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "sms"
                      },
                      {
                        "type": "literal",
                        "value": "phone_change"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [830, 827, 828, 829]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 616,
              "character": 17
            }
          ]
        },
        {
          "id": 842,
          "name": "VerifyTokenHashParams",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 843,
              "name": "token_hash",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The token hash used in an email link"
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 656,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 844,
              "name": "type",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "comment": {
                "shortText": "The user's verification type."
              },
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 659,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 846,
                "name": "EmailOtpType",
                "dereferenced": {
                  "id": 846,
                  "name": "EmailOtpType",
                  "kind": 4194304,
                  "kindString": "Type alias",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 663,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "signup"
                      },
                      {
                        "type": "literal",
                        "value": "invite"
                      },
                      {
                        "type": "literal",
                        "value": "magiclink"
                      },
                      {
                        "type": "literal",
                        "value": "recovery"
                      },
                      {
                        "type": "literal",
                        "value": "email_change"
                      },
                      {
                        "type": "literal",
                        "value": "email"
                      }
                    ]
                  }
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [843, 844]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 654,
              "character": 17
            }
          ]
        },
        {
          "id": 517,
          "name": "AuthChangeEvent",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 31,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "INITIAL_SESSION"
              },
              {
                "type": "literal",
                "value": "PASSWORD_RECOVERY"
              },
              {
                "type": "literal",
                "value": "SIGNED_IN"
              },
              {
                "type": "literal",
                "value": "SIGNED_OUT"
              },
              {
                "type": "literal",
                "value": "TOKEN_REFRESHED"
              },
              {
                "type": "literal",
                "value": "USER_UPDATED"
              },
              {
                "id": 516,
                "name": "AuthChangeEventMFA",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 29,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": "MFA_CHALLENGE_VERIFIED"
                }
              }
            ]
          }
        },
        {
          "id": 516,
          "name": "AuthChangeEventMFA",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 29,
              "character": 12
            }
          ],
          "type": {
            "type": "literal",
            "value": "MFA_CHALLENGE_VERIFIED"
          }
        },
        {
          "id": 802,
          "name": "AuthFlowType",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 584,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "implicit"
              },
              {
                "type": "literal",
                "value": "pkce"
              }
            ]
          }
        },
        {
          "id": 1028,
          "name": "AuthMFAAdminDeleteFactorParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expermental",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1016,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1029,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1030,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the MFA factor to delete."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1018,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1031,
                  "name": "userId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the user whose factor is being deleted."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1021,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1030, 1031]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1016,
                  "character": 45
                }
              ]
            }
          }
        },
        {
          "id": 1019,
          "name": "AuthMFAAdminDeleteFactorResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expermental",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1003,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1020,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1021,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1005,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1022,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1023,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor that was successfully deleted."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1007,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1023]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1005,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 1024,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1009,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1021, 1024]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1004,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1025,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1026,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1011,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 1027,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1011,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1026, 1027]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1011,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1041,
          "name": "AuthMFAAdminListFactorsParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expermental",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1040,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1042,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1043,
                  "name": "userId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the user."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1042,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1043]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1040,
                  "character": 44
                }
              ]
            }
          }
        },
        {
          "id": 1032,
          "name": "AuthMFAAdminListFactorsResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "tags": [
              {
                "tag": "expermental",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1027,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1033,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1034,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1029,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1035,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1036,
                              "name": "factors",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "All factors attached to the user."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1031,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 682,
                                  "name": "Factor"
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1036]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1029,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 1037,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1033,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1034, 1037]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1028,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1038,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1039,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1035,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 1040,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1035,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1039, 1040]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1035,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 961,
          "name": "AuthMFAChallengeResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 873,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 962,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 963,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 875,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 964,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 967,
                              "name": "expires_at",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 883,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 965,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the newly created challenge."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 877,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 966,
                              "name": "type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Factor Type which generated the challenge"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 880,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "totp"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "phone"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [967, 965, 966]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 875,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 968,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 885,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [963, 968]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 874,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 969,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 970,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 887,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 971,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 887,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [970, 971]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 887,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1104,
          "name": "AuthMFAEnrollPhoneResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1182,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1105,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1106,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1184,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1107,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1110,
                              "name": "friendly_name",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1192,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1108,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1186,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1111,
                              "name": "phone",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Phone number of the MFA factor in E.164 format. Used to send messages"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1195,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1109,
                              "name": "type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Type of MFA factor."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1189,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "phone"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1110, 1108, 1111, 1109]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1184,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 1112,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1197,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1106, 1112]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1183,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1113,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1114,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1200,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 1115,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1201,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1114, 1115]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1199,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 951,
          "name": "AuthMFAEnrollResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 861,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 1088,
                "name": "AuthMFAEnrollTOTPResponse",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 1147,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1089,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1090,
                            "name": "data",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1149,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 1091,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 1099,
                                    "name": "friendly_name",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1173,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 1092,
                                    "name": "id",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1151,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 1094,
                                    "name": "totp",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "TOTP enrollment information."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1157,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 1095,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 1096,
                                            "name": "qr_code",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 1161,
                                                "character": 10
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 1097,
                                            "name": "secret",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 1166,
                                                "character": 10
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 1098,
                                            "name": "uri",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "comment": {
                                              "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                            },
                                            "sources": [
                                              {
                                                "fileName": "src/lib/types.ts",
                                                "line": 1170,
                                                "character": 10
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [1096, 1097, 1098]
                                          }
                                        ],
                                        "sources": [
                                          {
                                            "fileName": "src/lib/types.ts",
                                            "line": 1157,
                                            "character": 14
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "id": 1093,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "Type of MFA factor."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1154,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "totp"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [1099, 1092, 1094, 1093]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 1149,
                                    "character": 12
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 1100,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1175,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [1090, 1100]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1148,
                            "character": 4
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1101,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1102,
                            "name": "data",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1178,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "id": 1103,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1179,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 1160,
                              "name": "AuthError"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [1102, 1103]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1177,
                            "character": 4
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "id": 1104,
                "name": "AuthMFAEnrollPhoneResponse",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 1182,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1105,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1106,
                            "name": "data",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1184,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "reflection",
                              "declaration": {
                                "id": 1107,
                                "name": "__type",
                                "kind": 65536,
                                "kindString": "Type literal",
                                "flags": {},
                                "children": [
                                  {
                                    "id": 1110,
                                    "name": "friendly_name",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {
                                      "isOptional": true
                                    },
                                    "comment": {
                                      "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1192,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 1108,
                                    "name": "id",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1186,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 1111,
                                    "name": "phone",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "Phone number of the MFA factor in E.164 format. Used to send messages"
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1195,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "id": 1109,
                                    "name": "type",
                                    "kind": 1024,
                                    "kindString": "Property",
                                    "flags": {},
                                    "comment": {
                                      "shortText": "Type of MFA factor."
                                    },
                                    "sources": [
                                      {
                                        "fileName": "src/lib/types.ts",
                                        "line": 1189,
                                        "character": 8
                                      }
                                    ],
                                    "type": {
                                      "type": "literal",
                                      "value": "phone"
                                    }
                                  }
                                ],
                                "groups": [
                                  {
                                    "title": "Properties",
                                    "kind": 1024,
                                    "children": [1110, 1108, 1111, 1109]
                                  }
                                ],
                                "sources": [
                                  {
                                    "fileName": "src/lib/types.ts",
                                    "line": 1184,
                                    "character": 12
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "id": 1112,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1197,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [1106, 1112]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1183,
                            "character": 4
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 1113,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1114,
                            "name": "data",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1200,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "literal",
                              "value": null
                            }
                          },
                          {
                            "id": 1115,
                            "name": "error",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 1201,
                                "character": 6
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 1160,
                              "name": "AuthError"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [1114, 1115]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1199,
                            "character": 4
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1088,
          "name": "AuthMFAEnrollTOTPResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1147,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1089,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1090,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1149,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1091,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1099,
                              "name": "friendly_name",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Friendly name of the factor, useful for distinguishing between factors"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1173,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1092,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor that was just enrolled (in an unverified state)."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1151,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1094,
                              "name": "totp",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "TOTP enrollment information."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1157,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1095,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1096,
                                      "name": "qr_code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1161,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 1097,
                                      "name": "secret",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1166,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 1098,
                                      "name": "uri",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
                                      },
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 1170,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [1096, 1097, 1098]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1157,
                                      "character": 14
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 1093,
                              "name": "type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Type of MFA factor."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1154,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "totp"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [1099, 1092, 1094, 1093]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 1149,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 1100,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1175,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1090, 1100]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1148,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1101,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1102,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1178,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 1103,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1179,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1102, 1103]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1177,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 984,
          "name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 906,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 985,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 986,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 908,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 987,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 990,
                              "name": "currentAuthenticationMethods",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 925,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 666,
                                  "name": "AMREntry"
                                }
                              }
                            },
                            {
                              "id": 988,
                              "name": "currentLevel",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Current AAL level of the session."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 910,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 983,
                                    "name": "AuthenticatorAssuranceLevels"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 989,
                              "name": "nextLevel",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
                                "tags": [
                                  {
                                    "tag": "see",
                                    "text": "{@link GoTrueMFAApi#challenge}\n"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 918,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 983,
                                    "name": "AuthenticatorAssuranceLevels"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [990, 988, 989]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 908,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 991,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 927,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [986, 991]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 907,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 992,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 993,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 929,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 994,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 929,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [993, 994]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 929,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 972,
          "name": "AuthMFAListFactorsResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 889,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 973,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 974,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 891,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 975,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 976,
                              "name": "all",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "All available factors (verified and unverified)."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 893,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 682,
                                  "name": "Factor"
                                }
                              }
                            },
                            {
                              "id": 978,
                              "name": "phone",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Only verified Phone factors. (A subset of `all`.)"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 898,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 682,
                                  "name": "Factor"
                                }
                              }
                            },
                            {
                              "id": 977,
                              "name": "totp",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Only verified TOTP factors. (A subset of `all`.)"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 896,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "id": 682,
                                  "name": "Factor"
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [976, 978, 977]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 891,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 979,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 900,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [974, 979]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 890,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 980,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 981,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 902,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 982,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 902,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [981, 982]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 902,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 952,
          "name": "AuthMFAUnenrollResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 863,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 953,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 954,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 865,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 955,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 956,
                              "name": "id",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "ID of the factor that was successfully unenrolled."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 867,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [956]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 865,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 957,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 869,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [954, 957]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 864,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 958,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 959,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 871,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 960,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 871,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [959, 960]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 871,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 938,
          "name": "AuthMFAVerifyResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 836,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 939,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 940,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 838,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 941,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 942,
                              "name": "access_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "New access token (JWT) after successful verification."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 840,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 944,
                              "name": "expires_in",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Number of seconds in which the access token will expire."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 846,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 945,
                              "name": "refresh_token",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Refresh token you can use to obtain new access tokens when expired."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 849,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 943,
                              "name": "token_type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Type of token, typically `Bearer`."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 843,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 946,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "Updated user profile."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 852,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 697,
                                "name": "User"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [942, 944, 945, 943, 946]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 838,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 947,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 854,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [940, 947]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 837,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 948,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 949,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 857,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 950,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 858,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [949, 950]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 856,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 581,
          "name": "AuthOtpResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "AuthOtpResponse is returned when OTP is used.",
            "text": "{@see AuthResponse}\n"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 135,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 582,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 583,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 137,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 584,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 587,
                              "name": "messageId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 137,
                                  "character": 41
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 586,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 137,
                                  "character": 26
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 585,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 137,
                                  "character": 14
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [587, 586, 585]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 137,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 588,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 138,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [583, 588]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 136,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 589,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 590,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 141,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 591,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 594,
                              "name": "messageId",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 141,
                                  "character": 41
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 593,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 141,
                                  "character": 26
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 592,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 141,
                                  "character": 14
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [594, 593, 592]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 141,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 595,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 142,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [590, 595]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 140,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 554,
          "name": "AuthResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 97,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 555,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 556,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 99,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 557,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 559,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 101,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 657,
                                    "name": "Session"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 558,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 100,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 697,
                                    "name": "User"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [559, 558]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 99,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 560,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 103,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [556, 560]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 98,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 561,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 562,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 106,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 563,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 565,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 108,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 564,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 107,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [565, 564]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 106,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 566,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 110,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [562, 566]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 105,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 567,
          "name": "AuthResponsePassword",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 113,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 568,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 569,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 115,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 570,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 572,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 117,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 657,
                                    "name": "Session"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 571,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 116,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 697,
                                    "name": "User"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            },
                            {
                              "id": 573,
                              "name": "weak_password",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 118,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 550,
                                    "name": "WeakPassword"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [572, 571, 573]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 115,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 574,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 120,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [569, 574]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 114,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 575,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 576,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 123,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 577,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 579,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 125,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 578,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 124,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [579, 578]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 123,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 580,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 127,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [576, 580]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 122,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 596,
          "name": "AuthTokenResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 145,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 597,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 598,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 147,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 599,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 601,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 149,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 657,
                                "name": "Session"
                              }
                            },
                            {
                              "id": 600,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 148,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 697,
                                "name": "User"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [601, 600]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 147,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 602,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 151,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [598, 602]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 146,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 603,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 604,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 154,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 605,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 607,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 156,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 606,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 155,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [607, 606]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 154,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 608,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 158,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [604, 608]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 153,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 609,
          "name": "AuthTokenResponsePassword",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 161,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 610,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 611,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 163,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 612,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 614,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 165,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 657,
                                "name": "Session"
                              }
                            },
                            {
                              "id": 613,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 164,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 697,
                                "name": "User"
                              }
                            },
                            {
                              "id": 615,
                              "name": "weakPassword",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 166,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 550,
                                "name": "WeakPassword"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [614, 613, 615]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 163,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 616,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 168,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [611, 616]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 162,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 617,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 618,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 171,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 619,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 621,
                              "name": "session",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 173,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 620,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 172,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 622,
                              "name": "weakPassword",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 174,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [621, 620, 622]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 171,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 623,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 176,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [618, 623]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 170,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 983,
          "name": "AuthenticatorAssuranceLevels",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 904,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "aal1"
              },
              {
                "type": "literal",
                "value": "aal2"
              }
            ]
          }
        },
        {
          "id": 1057,
          "name": "CallRefreshTokenResult",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1092,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1058,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1060,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1095,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 1059,
                      "name": "session",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1094,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 657,
                        "name": "Session"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1060, 1059]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1093,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1061,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1063,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1099,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    },
                    {
                      "id": 1062,
                      "name": "session",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1098,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1063, 1062]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1097,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 846,
          "name": "EmailOtpType",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 663,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "signup"
              },
              {
                "type": "literal",
                "value": "invite"
              },
              {
                "type": "literal",
                "value": "magiclink"
              },
              {
                "type": "literal",
                "value": "recovery"
              },
              {
                "type": "literal",
                "value": "email_change"
              },
              {
                "type": "literal",
                "value": "email"
              }
            ]
          }
        },
        {
          "id": 890,
          "name": "GenerateEmailChangeLinkParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 730,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 891,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 893,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 733,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 894,
                  "name": "newEmail",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 737,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 895,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 738,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 896,
                        "name": "GenerateLinkOptions"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ],
                    "qualifiedName": "Pick",
                    "package": "typescript",
                    "name": "Pick"
                  }
                },
                {
                  "id": 892,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 731,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "email_change_current"
                      },
                      {
                        "type": "literal",
                        "value": "email_change_new"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [893, 894, 895, 892]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 730,
                  "character": 44
                }
              ]
            }
          }
        },
        {
          "id": 880,
          "name": "GenerateInviteOrMagiclinkParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 716,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 881,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 883,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 719,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 884,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 720,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 896,
                        "name": "GenerateLinkOptions"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "data"
                          },
                          {
                            "type": "literal",
                            "value": "redirectTo"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Pick",
                    "package": "typescript",
                    "name": "Pick"
                  }
                },
                {
                  "id": 882,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 717,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "invite"
                      },
                      {
                        "type": "literal",
                        "value": "magiclink"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [883, 884, 882]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 716,
                  "character": 46
                }
              ]
            }
          }
        },
        {
          "id": 899,
          "name": "GenerateLinkParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 752,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 874,
                "name": "GenerateSignupLinkParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 709,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 875,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 877,
                        "name": "email",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 711,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 879,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 713,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 896,
                              "name": "GenerateLinkOptions"
                            },
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "data"
                                },
                                {
                                  "type": "literal",
                                  "value": "redirectTo"
                                }
                              ]
                            }
                          ],
                          "qualifiedName": "Pick",
                          "package": "typescript",
                          "name": "Pick"
                        }
                      },
                      {
                        "id": 878,
                        "name": "password",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 712,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 876,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 710,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "literal",
                          "value": "signup"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [877, 879, 878, 876]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 709,
                        "character": 39
                      }
                    ]
                  }
                }
              },
              {
                "id": 880,
                "name": "GenerateInviteOrMagiclinkParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 716,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 881,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 883,
                        "name": "email",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The user's email"
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 719,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 884,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 720,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 896,
                              "name": "GenerateLinkOptions"
                            },
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "literal",
                                  "value": "data"
                                },
                                {
                                  "type": "literal",
                                  "value": "redirectTo"
                                }
                              ]
                            }
                          ],
                          "qualifiedName": "Pick",
                          "package": "typescript",
                          "name": "Pick"
                        }
                      },
                      {
                        "id": 882,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 717,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "invite"
                            },
                            {
                              "type": "literal",
                              "value": "magiclink"
                            }
                          ]
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [883, 884, 882]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 716,
                        "character": 46
                      }
                    ]
                  }
                }
              },
              {
                "id": 885,
                "name": "GenerateRecoveryLinkParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 723,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 886,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 888,
                        "name": "email",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The user's email"
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 726,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 889,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 727,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 896,
                              "name": "GenerateLinkOptions"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ],
                          "qualifiedName": "Pick",
                          "package": "typescript",
                          "name": "Pick"
                        }
                      },
                      {
                        "id": 887,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 724,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "literal",
                          "value": "recovery"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [888, 889, 887]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 723,
                        "character": 41
                      }
                    ]
                  }
                }
              },
              {
                "id": 890,
                "name": "GenerateEmailChangeLinkParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 730,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 891,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 893,
                        "name": "email",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The user's email"
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 733,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 894,
                        "name": "newEmail",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 737,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 895,
                        "name": "options",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 738,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 896,
                              "name": "GenerateLinkOptions"
                            },
                            {
                              "type": "literal",
                              "value": "redirectTo"
                            }
                          ],
                          "qualifiedName": "Pick",
                          "package": "typescript",
                          "name": "Pick"
                        }
                      },
                      {
                        "id": 892,
                        "name": "type",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 731,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "email_change_current"
                            },
                            {
                              "type": "literal",
                              "value": "email_change_new"
                            }
                          ]
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [893, 894, 895, 892]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 730,
                        "character": 44
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 913,
          "name": "GenerateLinkProperties",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "The properties related to the email link generated"
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 775,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 914,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 915,
                  "name": "action_link",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 780,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 916,
                  "name": "email_otp",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 785,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 917,
                  "name": "hashed_token",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The hashed token appended to the action link."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 789,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 918,
                  "name": "redirect_to",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The URL appended to the action link."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 791,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 919,
                  "name": "verification_type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The verification type that the email link is associated to."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 793,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 920,
                    "name": "GenerateLinkType",
                    "dereferenced": {
                      "id": 920,
                      "name": "GenerateLinkType",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 796,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "signup"
                          },
                          {
                            "type": "literal",
                            "value": "invite"
                          },
                          {
                            "type": "literal",
                            "value": "magiclink"
                          },
                          {
                            "type": "literal",
                            "value": "recovery"
                          },
                          {
                            "type": "literal",
                            "value": "email_change_current"
                          },
                          {
                            "type": "literal",
                            "value": "email_change_new"
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [915, 916, 917, 918, 919]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 775,
                  "character": 37
                }
              ]
            }
          }
        },
        {
          "id": 900,
          "name": "GenerateLinkResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 758,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 901,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 902,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 760,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 903,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 904,
                              "name": "properties",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 761,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 913,
                                "name": "GenerateLinkProperties"
                              }
                            },
                            {
                              "id": 905,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 762,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 697,
                                "name": "User"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [904, 905]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 760,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 906,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 764,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [902, 906]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 759,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 907,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 908,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 767,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 909,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 910,
                              "name": "properties",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 768,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            },
                            {
                              "id": 911,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 769,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [910, 911]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 767,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 912,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 771,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [908, 912]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 766,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 920,
          "name": "GenerateLinkType",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 796,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "signup"
              },
              {
                "type": "literal",
                "value": "invite"
              },
              {
                "type": "literal",
                "value": "magiclink"
              },
              {
                "type": "literal",
                "value": "recovery"
              },
              {
                "type": "literal",
                "value": "email_change_current"
              },
              {
                "type": "literal",
                "value": "email_change_new"
              }
            ]
          }
        },
        {
          "id": 885,
          "name": "GenerateRecoveryLinkParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 723,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 886,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 888,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The user's email"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 726,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 889,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 727,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 896,
                        "name": "GenerateLinkOptions"
                      },
                      {
                        "type": "literal",
                        "value": "redirectTo"
                      }
                    ],
                    "qualifiedName": "Pick",
                    "package": "typescript",
                    "name": "Pick"
                  }
                },
                {
                  "id": 887,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 724,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "recovery"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [888, 889, 887]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 723,
                  "character": 41
                }
              ]
            }
          }
        },
        {
          "id": 874,
          "name": "GenerateSignupLinkParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 709,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 875,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 877,
                  "name": "email",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 711,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 879,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 713,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 896,
                        "name": "GenerateLinkOptions"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "data"
                          },
                          {
                            "type": "literal",
                            "value": "redirectTo"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Pick",
                    "package": "typescript",
                    "name": "Pick"
                  }
                },
                {
                  "id": 878,
                  "name": "password",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 712,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 876,
                  "name": "type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 710,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "signup"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [877, 879, 878, 876]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 709,
                  "character": 39
                }
              ]
            }
          }
        },
        {
          "id": 527,
          "name": "GoTrueClientOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 57,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 528,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 536,
                  "name": "autoRefreshToken",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 67,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 541,
                  "name": "debug",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 77,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 542,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 77,
                              "character": 21
                            }
                          ],
                          "signatures": [
                            {
                              "id": 543,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 544,
                                  "name": "message",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 545,
                                  "name": "args",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isRest": true
                                  },
                                  "type": {
                                    "type": "array",
                                    "elementType": {
                                      "type": "intrinsic",
                                      "name": "any"
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 535,
                  "name": "detectSessionInUrl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 65,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 539,
                  "name": "fetch",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 73,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Fetch"
                  }
                },
                {
                  "id": 540,
                  "name": "flowType",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 75,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 802,
                    "name": "AuthFlowType",
                    "dereferenced": {
                      "id": 802,
                      "name": "AuthFlowType",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 584,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "implicit"
                          },
                          {
                            "type": "literal",
                            "value": "pkce"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 547,
                  "name": "hasCustomAuthorizationHeader",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Set to \"true\" if there is a custom authorization header set globally.",
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 88,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 530,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 61,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 531,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 61,
                          "character": 12
                        }
                      ],
                      "indexSignature": {
                        "id": 532,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 533,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "id": 546,
                  "name": "lock",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Provide your own locking mechanism based on the environment. By default no locking is done at this time.",
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 83,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 518,
                    "name": "LockFunc",
                    "dereferenced": {
                      "id": 518,
                      "name": "LockFunc",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 55,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 519,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 55,
                              "character": 23
                            }
                          ],
                          "signatures": [
                            {
                              "id": 520,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                                "tags": [
                                  {
                                    "tag": "experimental",
                                    "text": "\n"
                                  }
                                ]
                              },
                              "typeParameter": [
                                {
                                  "id": 526,
                                  "name": "R",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 521,
                                  "name": "name",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Name of the lock to be acquired."
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 522,
                                  "name": "acquireTimeout",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                },
                                {
                                  "id": 523,
                                  "name": "fn",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The operation to execute when the lock is acquired.\n"
                                  },
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 524,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 55,
                                          "character": 69
                                        }
                                      ],
                                      "signatures": [
                                        {
                                          "id": 525,
                                          "name": "__type",
                                          "kind": 4096,
                                          "kindString": "Call signature",
                                          "flags": {},
                                          "type": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 526,
                                                "name": "R"
                                              }
                                            ],
                                            "qualifiedName": "Promise",
                                            "package": "typescript",
                                            "name": "Promise"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 526,
                                    "name": "R"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "id": 537,
                  "name": "persistSession",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 69,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 538,
                  "name": "storage",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 71,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1051,
                    "name": "SupportedStorage",
                    "dereferenced": {
                      "id": 1051,
                      "name": "SupportedStorage",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1077,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "Storage",
                                    "package": "typescript",
                                    "name": "Storage"
                                  },
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "getItem"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "setItem"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "removeItem"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "Pick",
                                "package": "typescript",
                                "name": "Pick"
                              }
                            ],
                            "name": "PromisifyMethods"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1052,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 1053,
                                  "name": "isServer",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 1087,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [1053]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 1079,
                                  "character": 4
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 534,
                  "name": "storageKey",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 63,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 529,
                  "name": "url",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 59,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [536, 541, 535, 539, 540, 547, 530, 546, 537, 538, 534, 529]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 57,
                  "character": 34
                }
              ]
            }
          }
        },
        {
          "id": 1054,
          "name": "InitializeResult",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1090,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1055,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1056,
                  "name": "error",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1090,
                      "character": 33
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1056]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1090,
                  "character": 31
                }
              ]
            }
          }
        },
        {
          "id": 1116,
          "name": "JwtHeader",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1204,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1117,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1118,
                  "name": "alg",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1205,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "RS256"
                      },
                      {
                        "type": "literal",
                        "value": "ES256"
                      },
                      {
                        "type": "literal",
                        "value": "HS256"
                      }
                    ]
                  }
                },
                {
                  "id": 1119,
                  "name": "kid",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1206,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1120,
                  "name": "typ",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1207,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1118, 1119, 1120]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1204,
                  "character": 24
                }
              ]
            }
          }
        },
        {
          "id": 1131,
          "name": "JwtPayload",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1221,
              "character": 12
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 1121,
                "name": "RequiredClaims"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1132,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1221,
                      "character": 42
                    }
                  ],
                  "indexSignature": {
                    "id": 1133,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 1134,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "id": 518,
          "name": "LockFunc",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 55,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 519,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 55,
                  "character": 23
                }
              ],
              "signatures": [
                {
                  "id": 520,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Provide your own global lock implementation instead of the default\nimplementation. The function should acquire a lock for the duration of the\n`fn` async function, such that no other client instances will be able to\nhold it at the same time.",
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 526,
                      "name": "R",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    }
                  ],
                  "parameters": [
                    {
                      "id": 521,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Name of the lock to be acquired."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 522,
                      "name": "acquireTimeout",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "If negative, no timeout should occur. If positive it\n                      should throw an Error with an `isAcquireTimeout`\n                      property set to true if the operation fails to be\n                      acquired after this much time (ms)."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 523,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The operation to execute when the lock is acquired.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 524,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 55,
                              "character": 69
                            }
                          ],
                          "signatures": [
                            {
                              "id": 525,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 526,
                                    "name": "R"
                                  }
                                ],
                                "qualifiedName": "Promise",
                                "package": "typescript",
                                "name": "Promise"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 526,
                        "name": "R"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 934,
          "name": "MFAChallengeAndVerifyParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 829,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 935,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 937,
                  "name": "code",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Verification code provided by the user."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 833,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 936,
                  "name": "factorId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the factor being verified. Returned in enroll()."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 831,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [937, 936]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 829,
                  "character": 42
                }
              ]
            }
          }
        },
        {
          "id": 930,
          "name": "MFAChallengeParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 822,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 931,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 933,
                  "name": "channel",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Messaging channel to use (e.g. whatsapp or sms). Only relevant for phone factors"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 826,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "sms"
                      },
                      {
                        "type": "literal",
                        "value": "whatsapp"
                      }
                    ]
                  }
                },
                {
                  "id": 932,
                  "name": "factorId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the factor to be challenged. Returned in enroll()."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 824,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [933, 932]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 822,
                  "character": 33
                }
              ]
            }
          }
        },
        {
          "id": 921,
          "name": "MFAEnrollParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 804,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 1078,
                "name": "MFAEnrollTOTPParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 1130,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1079,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 1080,
                        "name": "factorType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The type of factor being enrolled."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1132,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "literal",
                          "value": "totp"
                        }
                      },
                      {
                        "id": 1082,
                        "name": "friendlyName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Human readable name assigned to the factor."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1136,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "issuer",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Domain which the user is enrolled with."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1134,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [1080, 1082, 1081]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 1130,
                        "character": 34
                      }
                    ]
                  }
                }
              },
              {
                "id": 1083,
                "name": "MFAEnrollPhoneParams",
                "kind": 4194304,
                "kindString": "Type alias",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 1138,
                    "character": 12
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1084,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 1085,
                        "name": "factorType",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "The type of factor being enrolled."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1140,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "literal",
                          "value": "phone"
                        }
                      },
                      {
                        "id": 1086,
                        "name": "friendlyName",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "Human readable name assigned to the factor."
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1142,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 1087,
                        "name": "phone",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "comment": {
                          "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                        },
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 1144,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [1085, 1086, 1087]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 1138,
                        "character": 35
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "id": 1083,
          "name": "MFAEnrollPhoneParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1138,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1084,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1085,
                  "name": "factorType",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The type of factor being enrolled."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1140,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "phone"
                  }
                },
                {
                  "id": 1086,
                  "name": "friendlyName",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Human readable name assigned to the factor."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1142,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1087,
                  "name": "phone",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Phone number associated with a factor. Number should conform to E.164 format"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1144,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1085, 1086, 1087]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1138,
                  "character": 35
                }
              ]
            }
          }
        },
        {
          "id": 1078,
          "name": "MFAEnrollTOTPParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1130,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1079,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1080,
                  "name": "factorType",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "The type of factor being enrolled."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1132,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "totp"
                  }
                },
                {
                  "id": 1082,
                  "name": "friendlyName",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Human readable name assigned to the factor."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1136,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1081,
                  "name": "issuer",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Domain which the user is enrolled with."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1134,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1080, 1082, 1081]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1130,
                  "character": 34
                }
              ]
            }
          }
        },
        {
          "id": 922,
          "name": "MFAUnenrollParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 806,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 923,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 924,
                  "name": "factorId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the factor being unenrolled."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 808,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [924]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 806,
                  "character": 32
                }
              ]
            }
          }
        },
        {
          "id": 925,
          "name": "MFAVerifyParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 811,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 926,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 928,
                  "name": "challengeId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the challenge being verified. Returned in challenge()."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 816,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 929,
                  "name": "code",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Verification code provided by the user."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 819,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 927,
                  "name": "factorId",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "ID of the factor being verified. Returned in enroll()."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 813,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [928, 929, 927]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 811,
                  "character": 30
                }
              ]
            }
          }
        },
        {
          "id": 845,
          "name": "MobileOtpType",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 662,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "sms"
              },
              {
                "type": "literal",
                "value": "phone_change"
              }
            ]
          }
        },
        {
          "id": 624,
          "name": "OAuthResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 179,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 625,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 626,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 181,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 627,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 628,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 182,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 515,
                                "name": "Provider"
                              }
                            },
                            {
                              "id": 629,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 183,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [628, 629]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 181,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 630,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 185,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [626, 630]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 180,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 631,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 632,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 188,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 633,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 634,
                              "name": "provider",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 189,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 515,
                                "name": "Provider"
                              }
                            },
                            {
                              "id": 635,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 190,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [634, 635]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 188,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 636,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 192,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [632, 636]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 187,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1071,
          "name": "PageParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1109,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1072,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1073,
                  "name": "page",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The page number"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1111,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1074,
                  "name": "perPage",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Number of items returned per page"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1113,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1073, 1074]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1109,
                  "character": 25
                }
              ]
            }
          }
        },
        {
          "id": 1064,
          "name": "Pagination",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1102,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1065,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1067,
                  "name": "lastPage",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1105,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1066,
                  "name": "nextPage",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1104,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 1068,
                  "name": "total",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1106,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1067, 1066, 1068]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1102,
                  "character": 25
                }
              ],
              "indexSignature": {
                "id": 1069,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 1070,
                    "name": "key",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          }
        },
        {
          "id": 515,
          "name": "Provider",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "One of the providers supported by GoTrue."
          },
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 5,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "apple"
              },
              {
                "type": "literal",
                "value": "azure"
              },
              {
                "type": "literal",
                "value": "bitbucket"
              },
              {
                "type": "literal",
                "value": "discord"
              },
              {
                "type": "literal",
                "value": "facebook"
              },
              {
                "type": "literal",
                "value": "figma"
              },
              {
                "type": "literal",
                "value": "github"
              },
              {
                "type": "literal",
                "value": "gitlab"
              },
              {
                "type": "literal",
                "value": "google"
              },
              {
                "type": "literal",
                "value": "kakao"
              },
              {
                "type": "literal",
                "value": "keycloak"
              },
              {
                "type": "literal",
                "value": "linkedin"
              },
              {
                "type": "literal",
                "value": "linkedin_oidc"
              },
              {
                "type": "literal",
                "value": "notion"
              },
              {
                "type": "literal",
                "value": "slack"
              },
              {
                "type": "literal",
                "value": "slack_oidc"
              },
              {
                "type": "literal",
                "value": "spotify"
              },
              {
                "type": "literal",
                "value": "twitch"
              },
              {
                "type": "literal",
                "value": "twitter"
              },
              {
                "type": "literal",
                "value": "workos"
              },
              {
                "type": "literal",
                "value": "zoom"
              },
              {
                "type": "literal",
                "value": "fly"
              }
            ]
          }
        },
        {
          "id": 1121,
          "name": "RequiredClaims",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1210,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1122,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1129,
                  "name": "aal",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1217,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 983,
                    "name": "AuthenticatorAssuranceLevels",
                    "dereferenced": {
                      "id": 983,
                      "name": "AuthenticatorAssuranceLevels",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 904,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "aal1"
                          },
                          {
                            "type": "literal",
                            "value": "aal2"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "id": 1125,
                  "name": "aud",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1213,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 1126,
                  "name": "exp",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1214,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1127,
                  "name": "iat",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1215,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1123,
                  "name": "iss",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1211,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1128,
                  "name": "role",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1216,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1130,
                  "name": "session_id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1218,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 1124,
                  "name": "sub",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1212,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1129, 1125, 1126, 1127, 1123, 1128, 1130, 1124]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1210,
                  "character": 29
                }
              ]
            }
          }
        },
        {
          "id": 847,
          "name": "ResendParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 665,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 848,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 850,
                      "name": "email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 668,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 851,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 669,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 852,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 854,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 673,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 853,
                              "name": "emailRedirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A URL to send the user to after they have signed-in."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 671,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [854, 853]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 669,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 849,
                      "name": "type",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 667,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 846,
                            "name": "EmailOtpType"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "signup"
                              },
                              {
                                "type": "literal",
                                "value": "email_change"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Extract",
                        "package": "typescript",
                        "name": "Extract"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [850, 851, 849]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 666,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 855,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 858,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 679,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 859,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 860,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 681,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [860]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 679,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 857,
                      "name": "phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 678,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 856,
                      "name": "type",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 677,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 845,
                            "name": "MobileOtpType"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "sms"
                              },
                              {
                                "type": "literal",
                                "value": "phone_change"
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Extract",
                        "package": "typescript",
                        "name": "Extract"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [858, 857, 856]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 676,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 637,
          "name": "SSOResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 195,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 638,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 639,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 197,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 640,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 641,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "comment": {
                                "shortText": "URL to open in a browser which will complete the sign-in flow by\ntaking the user to the identity provider's authentication flow.",
                                "text": "On browsers you can set the URL to `window.location.href` to take\nthe user to the authentication flow.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 205,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [641]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 197,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 642,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 207,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [639, 642]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 196,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 643,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 644,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 210,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    },
                    {
                      "id": 645,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 211,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [644, 645]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 209,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 749,
          "name": "SignInAnonymouslyCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 474,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 750,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 751,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 475,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 752,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 754,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 483,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 753,
                          "name": "data",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                            "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 481,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [754, 753]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 475,
                          "character": 12
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [751]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 474,
                  "character": 43
                }
              ]
            }
          }
        },
        {
          "id": 815,
          "name": "SignInWithIdTokenCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 600,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 816,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 820,
                  "name": "access_token",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If the ID token contains an `at_hash` claim, then the hash of this value is compared to the value in the ID token."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 606,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 821,
                  "name": "nonce",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "If the ID token contains a `nonce` claim, then the hash of this value is compared to the value in the ID token."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 608,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 822,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 609,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 823,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 824,
                          "name": "captchaToken",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Verification token received when the user completes the captcha on the site."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 611,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [824]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 609,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 817,
                  "name": "provider",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "Provider name or OIDC `iss` value identifying which provider should be used to verify the provided token. Supported names: `google`, `apple`, `azure`, `facebook`, `kakao`, `keycloak` (deprecated)."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 602,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "google"
                      },
                      {
                        "type": "literal",
                        "value": "apple"
                      },
                      {
                        "type": "literal",
                        "value": "azure"
                      },
                      {
                        "type": "literal",
                        "value": "facebook"
                      },
                      {
                        "type": "literal",
                        "value": "kakao"
                      },
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 818,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 602,
                                  "character": 76
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "id": 819,
                  "name": "token",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "OIDC ID token issued by the specified provider. The `iss` claim in the ID token must match the supplied provider. Some ID tokens contain an `at_hash` which require that you provide an `access_token` value to be accepted properly. If the token contains a `nonce` claim you must supply the nonce used to obtain the ID token."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 604,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [820, 821, 822, 817, 819]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 600,
                  "character": 43
                }
              ]
            }
          }
        },
        {
          "id": 803,
          "name": "SignInWithOAuthCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 585,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 804,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 806,
                  "name": "options",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 588,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 807,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 810,
                          "name": "queryParams",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "An object of query params"
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 594,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 811,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 594,
                                  "character": 18
                                }
                              ],
                              "indexSignature": {
                                "id": 812,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 813,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          }
                        },
                        {
                          "id": 808,
                          "name": "redirectTo",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A URL to send the user to after they are confirmed."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 590,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 809,
                          "name": "scopes",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "A space-separated list of scopes granted to the OAuth application."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 592,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 814,
                          "name": "skipBrowserRedirect",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 596,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [810, 808, 809, 814]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 588,
                          "character": 12
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 805,
                  "name": "provider",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "shortText": "One of the providers supported by GoTrue."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 587,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 515,
                    "name": "Provider",
                    "dereferenced": {
                      "id": 515,
                      "name": "Provider",
                      "kind": 4194304,
                      "kindString": "Type alias",
                      "flags": {},
                      "comment": {
                        "shortText": "One of the providers supported by GoTrue."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 5,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "apple"
                          },
                          {
                            "type": "literal",
                            "value": "azure"
                          },
                          {
                            "type": "literal",
                            "value": "bitbucket"
                          },
                          {
                            "type": "literal",
                            "value": "discord"
                          },
                          {
                            "type": "literal",
                            "value": "facebook"
                          },
                          {
                            "type": "literal",
                            "value": "figma"
                          },
                          {
                            "type": "literal",
                            "value": "github"
                          },
                          {
                            "type": "literal",
                            "value": "gitlab"
                          },
                          {
                            "type": "literal",
                            "value": "google"
                          },
                          {
                            "type": "literal",
                            "value": "kakao"
                          },
                          {
                            "type": "literal",
                            "value": "keycloak"
                          },
                          {
                            "type": "literal",
                            "value": "linkedin"
                          },
                          {
                            "type": "literal",
                            "value": "linkedin_oidc"
                          },
                          {
                            "type": "literal",
                            "value": "notion"
                          },
                          {
                            "type": "literal",
                            "value": "slack"
                          },
                          {
                            "type": "literal",
                            "value": "slack_oidc"
                          },
                          {
                            "type": "literal",
                            "value": "spotify"
                          },
                          {
                            "type": "literal",
                            "value": "twitch"
                          },
                          {
                            "type": "literal",
                            "value": "twitter"
                          },
                          {
                            "type": "literal",
                            "value": "workos"
                          },
                          {
                            "type": "literal",
                            "value": "zoom"
                          },
                          {
                            "type": "literal",
                            "value": "fly"
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [806, 805]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 585,
                  "character": 41
                }
              ]
            }
          }
        },
        {
          "id": 772,
          "name": "SignInWithPasswordCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 524,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 773,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 774,
                      "name": "email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's email address."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 527,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 776,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 530,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 777,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 778,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 532,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [778]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 530,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 775,
                      "name": "password",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's password."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 529,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [774, 776, 775]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 525,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 779,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 782,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 540,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 783,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 784,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 542,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [784]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 540,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 781,
                      "name": "password",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's password."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 539,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 780,
                      "name": "phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's phone number."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 537,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [782, 781, 780]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 535,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 785,
          "name": "SignInWithPasswordlessCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 546,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 786,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 787,
                      "name": "email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's email address."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 549,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 788,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 550,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 789,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 793,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 562,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 792,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 560,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 790,
                              "name": "emailRedirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The redirect url embedded in the email link"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 552,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 791,
                              "name": "shouldCreateUser",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If set to false, this method will not create a new user. Defaults to true."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 554,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [793, 792, 790, 791]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 550,
                              "character": 16
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [787, 788]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 547,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 794,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 796,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 568,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 797,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 800,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 578,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 801,
                              "name": "channel",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 580,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "sms"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "whatsapp"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 799,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 576,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 798,
                              "name": "shouldCreateUser",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If set to false, this method will not create a new user. Defaults to true."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 570,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [800, 801, 799, 798]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 568,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 795,
                      "name": "phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's phone number."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 567,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [796, 795]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 565,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 861,
          "name": "SignInWithSSO",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 685,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 862,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 864,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 690,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 865,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 867,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 694,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 866,
                              "name": "redirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A URL to send the user to after they have signed-in."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 692,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [867, 866]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 690,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 863,
                      "name": "providerId",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "UUID of the SSO provider to invoke single-sign on to."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 688,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [864, 863]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 686,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 868,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 869,
                      "name": "domain",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "Domain name of the organization for which to invoke single-sign on."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 699,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 870,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 701,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 871,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 873,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 705,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 872,
                              "name": "redirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A URL to send the user to after they have signed-in."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 703,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [873, 872]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 701,
                              "character": 16
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [869, 870]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 697,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1075,
          "name": "SignOut",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1116,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1076,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1077,
                  "name": "scope",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Determines which sessions should be\nlogged out. Global means all\nsessions by this account. Local\nmeans only this session. Others\nmeans all other sessions except the\ncurrent one. When using others,\nthere is no sign-out event fired on\nthe current session!"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1127,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "global"
                      },
                      {
                        "type": "literal",
                        "value": "local"
                      },
                      {
                        "type": "literal",
                        "value": "others"
                      }
                    ]
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [1077]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1116,
                  "character": 22
                }
              ]
            }
          }
        },
        {
          "id": 755,
          "name": "SignUpWithPasswordCredentials",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 487,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 756,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 757,
                      "name": "email",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's email address."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 490,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 759,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 493,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 760,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 763,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site."
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 503,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 762,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 501,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            },
                            {
                              "id": 761,
                              "name": "emailRedirectTo",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The redirect url embedded in the email link"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 495,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [763, 762, 761]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 493,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 758,
                      "name": "password",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's password."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 492,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [757, 759, 758]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 488,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 764,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 767,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 511,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 768,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 770,
                              "name": "captchaToken",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Verification token received when the user completes the captcha on the site. Requires a configured WhatsApp sender on Twilio"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 519,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 771,
                              "name": "channel",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Messaging channel to use (e.g. whatsapp or sms)"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 521,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "sms"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "whatsapp"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 769,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.raw_user_meta_data` column.",
                                "text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 517,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "object"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [770, 771, 769]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 511,
                              "character": 16
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 766,
                      "name": "password",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's password."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 510,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 765,
                      "name": "phone",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "comment": {
                        "shortText": "The user's phone number."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 508,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [767, 766, 765]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 506,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1051,
          "name": "SupportedStorage",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 1077,
              "character": 12
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Storage",
                        "package": "typescript",
                        "name": "Storage"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "getItem"
                          },
                          {
                            "type": "literal",
                            "value": "setItem"
                          },
                          {
                            "type": "literal",
                            "value": "removeItem"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "Pick",
                    "package": "typescript",
                    "name": "Pick"
                  }
                ],
                "name": "PromisifyMethods"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1052,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 1053,
                      "name": "isServer",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "If set to `true` signals to the library that the storage medium is used\non a server and the values may not be authentic, such as reading from\nrequest cookies. Implementations should not set this to true if the client\nis used on a server that reads storage information from authenticated\nsources, such as a secure database or file."
                      },
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1087,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [1053]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 1079,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 646,
          "name": "UserResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 214,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 647,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 648,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 216,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 649,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 650,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 217,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 697,
                                "name": "User"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [650]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 216,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 651,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 219,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": null
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [648, 651]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 215,
                      "character": 4
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 652,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 653,
                      "name": "data",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 222,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 654,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 655,
                              "name": "user",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 223,
                                  "character": 8
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": null
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [655]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 222,
                              "character": 12
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 656,
                      "name": "error",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 225,
                          "character": 6
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 1160,
                        "name": "AuthError"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [653, 656]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 221,
                      "character": 4
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 825,
          "name": "VerifyOtpParams",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 615,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 826,
                "name": "VerifyMobileOtpParams",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "children": [
                  {
                    "id": 830,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 623,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 831,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 833,
                            "name": "captchaToken",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site.",
                              "tags": [
                                {
                                  "tag": "deprecated",
                                  "text": "\n"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 632,
                                "character": 4
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 832,
                            "name": "redirectTo",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "shortText": "A URL to send the user to after they are confirmed."
                            },
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 625,
                                "character": 4
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [833, 832]
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 827,
                    "name": "phone",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's phone number."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 618,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 828,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The otp sent to the user's phone number."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 620,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 829,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's verification type."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 622,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 845,
                      "name": "MobileOtpType",
                      "dereferenced": {
                        "id": 845,
                        "name": "MobileOtpType",
                        "kind": 4194304,
                        "kindString": "Type alias",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 662,
                            "character": 12
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "sms"
                            },
                            {
                              "type": "literal",
                              "value": "phone_change"
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [830, 827, 828, 829]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 616,
                    "character": 17
                  }
                ]
              },
              {
                "id": 834,
                "name": "VerifyEmailOtpParams",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "children": [
                  {
                    "id": 835,
                    "name": "email",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's email address."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 637,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 838,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                      "isOptional": true
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 642,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 839,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 841,
                            "name": "captchaToken",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "shortText": "Verification token received when the user completes the captcha on the site.",
                              "tags": [
                                {
                                  "tag": "deprecated",
                                  "text": "\n"
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 650,
                                "character": 4
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 840,
                            "name": "redirectTo",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {
                              "isOptional": true
                            },
                            "comment": {
                              "shortText": "A URL to send the user to after they are confirmed."
                            },
                            "sources": [
                              {
                                "fileName": "src/lib/types.ts",
                                "line": 644,
                                "character": 4
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [841, 840]
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 836,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The otp sent to the user's email address."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 639,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 837,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's verification type."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 641,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 846,
                      "name": "EmailOtpType",
                      "dereferenced": {
                        "id": 846,
                        "name": "EmailOtpType",
                        "kind": 4194304,
                        "kindString": "Type alias",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 663,
                            "character": 12
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "signup"
                            },
                            {
                              "type": "literal",
                              "value": "invite"
                            },
                            {
                              "type": "literal",
                              "value": "magiclink"
                            },
                            {
                              "type": "literal",
                              "value": "recovery"
                            },
                            {
                              "type": "literal",
                              "value": "email_change"
                            },
                            {
                              "type": "literal",
                              "value": "email"
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [835, 838, 836, 837]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 635,
                    "character": 17
                  }
                ]
              },
              {
                "id": 842,
                "name": "VerifyTokenHashParams",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "children": [
                  {
                    "id": 843,
                    "name": "token_hash",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The token hash used in an email link"
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 656,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 844,
                    "name": "type",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                      "shortText": "The user's verification type."
                    },
                    "sources": [
                      {
                        "fileName": "src/lib/types.ts",
                        "line": 659,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 846,
                      "name": "EmailOtpType",
                      "dereferenced": {
                        "id": 846,
                        "name": "EmailOtpType",
                        "kind": 4194304,
                        "kindString": "Type alias",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/lib/types.ts",
                            "line": 663,
                            "character": 12
                          }
                        ],
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": "signup"
                            },
                            {
                              "type": "literal",
                              "value": "invite"
                            },
                            {
                              "type": "literal",
                              "value": "magiclink"
                            },
                            {
                              "type": "literal",
                              "value": "recovery"
                            },
                            {
                              "type": "literal",
                              "value": "email_change"
                            },
                            {
                              "type": "literal",
                              "value": "email"
                            }
                          ]
                        }
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [843, 844]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/lib/types.ts",
                    "line": 654,
                    "character": 17
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 550,
          "name": "WeakPassword",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 92,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 551,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 553,
                  "name": "message",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 94,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 552,
                  "name": "reasons",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 93,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 548,
                      "name": "WeakPasswordReasons"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [553, 552]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 92,
                  "character": 27
                }
              ]
            }
          }
        },
        {
          "id": 548,
          "name": "WeakPasswordReasons",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/types.ts",
              "line": 91,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "length"
              },
              {
                "type": "literal",
                "value": "characters"
              },
              {
                "type": "literal",
                "value": "pwned"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 549,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 91,
                          "character": 80
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 497,
          "name": "AuthAdminApi",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/AuthAdminApi.ts",
              "line": 3,
              "character": 6
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "id": 1,
              "name": "default"
            }
          },
          "defaultValue": "GoTrueAdminApi"
        },
        {
          "id": 498,
          "name": "AuthClient",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/AuthClient.ts",
              "line": 3,
              "character": 6
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "id": 78,
              "name": "default"
            }
          },
          "defaultValue": "GoTrueClient"
        },
        {
          "id": 512,
          "name": "lockInternals",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isConst": true
          },
          "comment": {
            "tags": [
              {
                "tag": "experimental",
                "text": "\n"
              }
            ]
          },
          "sources": [
            {
              "fileName": "src/lib/locks.ts",
              "line": 6,
              "character": 13
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 513,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 514,
                  "name": "debug",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "comment": {
                    "tags": [
                      {
                        "tag": "experimental",
                        "text": "\n"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/locks.ts",
                      "line": 10,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "!!(\n    globalThis &&\n    supportsLocalStorage() &&\n    globalThis.localStorage &&\n    globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'\n  )"
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [514]
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 1145,
          "name": "isAuthApiError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 41,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1146,
              "name": "isAuthApiError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1147,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1170,
                  "name": "AuthApiError"
                }
              }
            }
          ]
        },
        {
          "id": 1142,
          "name": "isAuthError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 26,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1143,
              "name": "isAuthError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1144,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1160,
                  "name": "AuthError"
                }
              }
            }
          ]
        },
        {
          "id": 1151,
          "name": "isAuthImplicitGrantRedirectError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 105,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1152,
              "name": "isAuthImplicitGrantRedirectError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1153,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1227,
                  "name": "AuthImplicitGrantRedirectError"
                }
              }
            }
          ]
        },
        {
          "id": 1154,
          "name": "isAuthRetryableFetchError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 135,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1155,
              "name": "isAuthRetryableFetchError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1156,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1281,
                  "name": "AuthRetryableFetchError"
                }
              }
            }
          ]
        },
        {
          "id": 1148,
          "name": "isAuthSessionMissingError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 72,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1149,
              "name": "isAuthSessionMissingError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1150,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1202,
                  "name": "AuthSessionMissingError"
                }
              }
            }
          ]
        },
        {
          "id": 1157,
          "name": "isAuthWeakPasswordError",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/errors.ts",
              "line": 157,
              "character": 16
            }
          ],
          "signatures": [
            {
              "id": 1158,
              "name": "isAuthWeakPasswordError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1159,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "id": 1291,
                  "name": "AuthWeakPasswordError"
                }
              }
            }
          ]
        },
        {
          "id": 499,
          "name": "navigatorLock",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "sources": [
            {
              "fileName": "src/lib/locks.ts",
              "line": 59,
              "character": 22
            }
          ],
          "signatures": [
            {
              "id": 500,
              "name": "navigatorLock",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Implements a global exclusive lock using the Navigator LockManager API. It\nis available on all browsers released after 2022-03-15 with Safari being the\nlast one to release support. If the API is not available, this function will\nthrow. Make sure you check availablility before configuring {@link\nGoTrueClient}.",
                "text": "You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\nlocal storage item to `true`.\n\nInternals:\n\nSince the LockManager API does not preserve stack traces for the async\nfunction passed in the `request` method, a trick is used where acquiring the\nlock releases a previously started promise to run the operation in the `fn`\nfunction. The lock waits for that promise to finish (with or without error),\nwhile the function will finally wait for the result anyway.\n"
              },
              "typeParameter": [
                {
                  "id": 501,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 502,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Name of the lock to be acquired."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 503,
                  "name": "acquireTimeout",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "If negative, no timeout. If 0 an error is thrown if\n                      the lock can't be acquired without waiting. If positive, the lock acquire\n                      will time out after so many milliseconds. An error is\n                      a timeout if it has `isAcquireTimeout` set to true."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 504,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operation to run once the lock is acquired.\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 505,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 506,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 501,
                                "name": "R"
                              }
                            ],
                            "qualifiedName": "Promise",
                            "package": "typescript",
                            "name": "Promise"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 501,
                    "name": "R"
                  }
                ],
                "qualifiedName": "Promise",
                "package": "typescript",
                "name": "Promise"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1170, 1160, 1227, 1218, 1303, 1210, 1254, 1281, 1202, 1180, 1291, 1190, 1, 78, 507
          ]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            666, 728, 682, 896, 1044, 995, 1135, 657, 741, 697, 690, 722, 670, 694, 834, 826, 842
          ]
        },
        {
          "title": "Type Aliases",
          "kind": 4194304,
          "children": [
            517, 516, 802, 1028, 1019, 1041, 1032, 961, 1104, 951, 1088, 984, 972, 952, 938, 581,
            554, 567, 596, 609, 983, 1057, 846, 890, 880, 899, 913, 900, 920, 885, 874, 527, 1054,
            1116, 1131, 518, 934, 930, 921, 1083, 1078, 922, 925, 845, 624, 1071, 1064, 515, 1121,
            847, 637, 749, 815, 803, 772, 785, 861, 1075, 755, 1051, 646, 825, 550, 548
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [497, 498, 512]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [1145, 1142, 1151, 1154, 1148, 1157, 499]
        }
      ],
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 0,
      "name": "@supabase/postgrest-js",
      "kind": 1,
      "kindString": "Project",
      "flags": {},
      "originalName": "",
      "children": [
        {
          "id": 631,
          "name": "PostgrestBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isAbstract": true
          },
          "children": [
            {
              "id": 632,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 31,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 633,
                  "name": "new PostgrestBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 634,
                      "name": "Result",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    },
                    {
                      "id": 635,
                      "name": "ThrowOnError",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "default": {
                        "type": "literal",
                        "value": false
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 636,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 634,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default",
                        "dereferenced": {
                          "id": 631,
                          "name": "PostgrestBuilder",
                          "kind": 128,
                          "kindString": "Class",
                          "flags": {
                            "isAbstract": true
                          },
                          "children": "[Circular ~.children.0.children]",
                          "groups": [
                            {
                              "title": "Constructors",
                              "kind": 512,
                              "children": [632]
                            },
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [641, 644, 639, 649, 637, 640, 642, 643, 638]
                            },
                            {
                              "title": "Methods",
                              "kind": 2048,
                              "children": [671, 668, 652, 656, 650]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 30
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 679,
                              "name": "Result",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            },
                            {
                              "id": 680,
                              "name": "ThrowOnError",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "default": {
                                "type": "literal",
                                "value": false
                              }
                            }
                          ],
                          "extendedBy": [
                            {
                              "type": "reference",
                              "id": 499,
                              "name": "PostgrestTransformBuilder"
                            }
                          ],
                          "implementedTypes": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "conditional",
                                  "checkType": {
                                    "type": "reference",
                                    "id": 635,
                                    "name": "ThrowOnError"
                                  },
                                  "extendsType": {
                                    "type": "literal",
                                    "value": true
                                  },
                                  "trueType": {
                                    "type": "reference",
                                    "id": 701,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponseSuccess"
                                  },
                                  "falseType": {
                                    "type": "reference",
                                    "id": 708,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "qualifiedName": "PromiseLike",
                              "package": "typescript",
                              "name": "PromiseLike"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 634,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 635,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 641,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 25,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 644,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 28,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 645,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 646,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 647,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 648,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 639,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 23,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 649,
              "name": "isMaybeSingle",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 29,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 637,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 21,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "GET"
                  },
                  {
                    "type": "literal",
                    "value": "HEAD"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  },
                  {
                    "type": "literal",
                    "value": "PATCH"
                  },
                  {
                    "type": "literal",
                    "value": "DELETE"
                  }
                ]
              }
            },
            {
              "id": 640,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 24,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 642,
              "name": "shouldThrowOnError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 26,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 643,
              "name": "signal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 27,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "AbortSignal",
                "package": "typescript",
                "name": "AbortSignal"
              }
            },
            {
              "id": 638,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 22,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "URL",
                "package": "typescript",
                "name": "URL"
              }
            },
            {
              "id": 671,
              "name": "overrideTypes",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 257,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 672,
                  "name": "overrideTypes",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data` field in the response.",
                    "returns": "A PostgrestBuilder instance with the new type\n",
                    "tags": [
                      {
                        "tag": "example",
                        "text": "\n```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 673,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new type to cast the response data to"
                      }
                    },
                    {
                      "id": 678,
                      "name": "Options",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Optional type configuration (defaults to { merge: true })"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 674,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 675,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 22
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [675]
                            }
                          ]
                        }
                      },
                      "default": {
                        "type": "reflection",
                        "declaration": {
                          "id": 676,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 677,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 44
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": true
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [677]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 634,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            },
                            {
                              "type": "literal",
                              "value": false
                            },
                            {
                              "type": "literal",
                              "value": false
                            }
                          ],
                          "name": "IsValidResultOverride"
                        },
                        "extendsType": {
                          "type": "literal",
                          "value": true
                        },
                        "trueType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 634,
                                "name": "Result"
                              }
                            ],
                            "name": "ContainsNull"
                          },
                          "extendsType": {
                            "type": "literal",
                            "value": true
                          },
                          "trueType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 488,
                                    "name": "NewResult"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "qualifiedName": "NonNullable",
                                    "package": "typescript",
                                    "name": "NonNullable"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 493,
                                    "name": "Options"
                                  }
                                ],
                                "name": "MergePartialResult"
                              }
                            ]
                          },
                          "falseType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 488,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "id": 634,
                                "name": "Result"
                              },
                              {
                                "type": "reference",
                                "id": 493,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        },
                        "falseType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 634,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            }
                          ],
                          "name": "CheckMatchingArrayTypes"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 635,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 668,
              "name": "returns",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 227,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 669,
                  "name": "returns",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data`.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 670,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new result type to override with"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 634,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 670,
                            "name": "NewResult"
                          }
                        ],
                        "name": "CheckMatchingArrayTypes"
                      },
                      {
                        "type": "reference",
                        "id": 635,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 652,
              "name": "setHeader",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 653,
                  "name": "setHeader",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set an HTTP header for the request."
                  },
                  "parameters": [
                    {
                      "id": 654,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 655,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 634,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 635,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 656,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 70,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 657,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 658,
                      "name": "TResult1",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 635,
                          "name": "ThrowOnError"
                        },
                        "extendsType": {
                          "type": "literal",
                          "value": true
                        },
                        "trueType": {
                          "type": "reference",
                          "id": 701,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 634,
                              "name": "Result"
                            }
                          ],
                          "name": "PostgrestResponseSuccess"
                        },
                        "falseType": {
                          "type": "reference",
                          "id": 708,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 634,
                              "name": "Result"
                            }
                          ],
                          "name": "PostgrestSingleResponse"
                        }
                      }
                    },
                    {
                      "id": 659,
                      "name": "TResult2",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 660,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 661,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 662,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 663,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "conditional",
                                        "checkType": {
                                          "type": "reference",
                                          "id": 635,
                                          "name": "ThrowOnError"
                                        },
                                        "extendsType": {
                                          "type": "literal",
                                          "value": true
                                        },
                                        "trueType": {
                                          "type": "reference",
                                          "id": 701,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestResponseSuccess"
                                        },
                                        "falseType": {
                                          "type": "reference",
                                          "id": 708,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestSingleResponse"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 476,
                                            "name": "TResult1"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 664,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 665,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 666,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 667,
                                      "name": "reason",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 477,
                                            "name": "TResult2"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 476,
                            "name": "TResult1"
                          },
                          {
                            "type": "reference",
                            "id": 477,
                            "name": "TResult2"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "name": "PromiseLike.then"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "name": "PromiseLike.then"
              }
            },
            {
              "id": 650,
              "name": "throwOnError",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 651,
                  "name": "throwOnError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                    "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 634,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 635,
                            "name": "ThrowOnError"
                          }
                        ],
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 634,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": true
                          }
                        ],
                        "name": "default"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [632]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [641, 644, 639, 649, 637, 640, 642, 643, 638]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [671, 668, 652, 656, 650]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 30
            }
          ],
          "typeParameter": [
            {
              "id": 679,
              "name": "Result",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 680,
              "name": "ThrowOnError",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "default": {
                "type": "literal",
                "value": false
              }
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 499,
              "name": "PostgrestTransformBuilder"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 635,
                    "name": "ThrowOnError"
                  },
                  "extendsType": {
                    "type": "literal",
                    "value": true
                  },
                  "trueType": {
                    "type": "reference",
                    "id": 701,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 634,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestResponseSuccess"
                  },
                  "falseType": {
                    "type": "reference",
                    "id": 708,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 634,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                }
              ],
              "qualifiedName": "PromiseLike",
              "package": "typescript",
              "name": "PromiseLike"
            }
          ]
        },
        {
          "id": 9,
          "name": "PostgrestClient",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "PostgREST client."
          },
          "children": [
            {
              "id": 10,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 41,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 11,
                  "name": "new PostgrestClient",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Creates a PostgREST client."
                  },
                  "typeParameter": [
                    {
                      "id": 12,
                      "name": "Database",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 13,
                      "name": "SchemaName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          }
                        },
                        "trueType": {
                          "type": "literal",
                          "value": "public"
                        },
                        "falseType": {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 12,
                                "name": "Database"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 14,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericSchema"
                      },
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 13,
                            "name": "SchemaName"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          }
                        },
                        "extendsType": {
                          "type": "reference",
                          "name": "GenericSchema"
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 15,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "URL of the PostgREST endpoint"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 16,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 17,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 20,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 50,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 21,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 22,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Custom fetch\n"
                                      },
                                      "parameters": [
                                        {
                                          "id": 23,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 24,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 18,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Custom headers"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 48,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            },
                            {
                              "id": 19,
                              "name": "schema",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Postgres schema to switch to"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 49,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 13,
                                "name": "SchemaName",
                                "dereferenced": {}
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [20, 18, 19]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 9,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 13,
                        "name": "SchemaName"
                      },
                      {
                        "type": "reference",
                        "id": 14,
                        "name": "Schema"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 28,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 29,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 29,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 30,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 31,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 32,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 26,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 27,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 27,
              "name": "schemaName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 28,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 13,
                "name": "SchemaName",
                "dereferenced": {}
              }
            },
            {
              "id": 25,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 26,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 33,
              "name": "from",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 59,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 34,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a table or a view."
                  },
                  "typeParameter": [
                    {
                      "id": 35,
                      "name": "TableName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 36,
                      "name": "Table",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericTable"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 37,
                      "name": "relation",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The table or view name to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 35,
                        "name": "TableName",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 64,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 14,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 36,
                        "name": "Table"
                      },
                      {
                        "type": "reference",
                        "id": 35,
                        "name": "TableName"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 36,
                          "name": "Table"
                        },
                        "extendsType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 38,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 39,
                                "name": "Relationships",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/PostgrestQueryBuilder.ts",
                                    "line": 10,
                                    "character": 37
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "R"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [39]
                              }
                            ]
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "R"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 40,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a query on a table or a view."
                  },
                  "typeParameter": [
                    {
                      "id": 41,
                      "name": "ViewName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 42,
                      "name": "View",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericView"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 43,
                      "name": "relation",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The table or view name to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 41,
                        "name": "ViewName",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 64,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 14,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 42,
                        "name": "View"
                      },
                      {
                        "type": "reference",
                        "id": 41,
                        "name": "ViewName"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 42,
                          "name": "View"
                        },
                        "extendsType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 44,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 45,
                                "name": "Relationships",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/PostgrestQueryBuilder.ts",
                                    "line": 10,
                                    "character": 37
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "R"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [45]
                              }
                            ]
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "R"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 50,
              "name": "rpc",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 124,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 51,
                  "name": "rpc",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a function call."
                  },
                  "typeParameter": [
                    {
                      "id": 52,
                      "name": "FnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 53,
                      "name": "Fn",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericFunction"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 54,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The function name to call"
                      },
                      "type": {
                        "type": "reference",
                        "id": 52,
                        "name": "FnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 55,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The arguments to pass to the function call"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Args"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 53,
                          "name": "Fn"
                        }
                      },
                      "defaultValue": "{}"
                    },
                    {
                      "id": 56,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 57,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 60,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 134,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 59,
                              "name": "get",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "When set to `true`, the function will be called with\nread-only access mode."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 133,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 58,
                              "name": "head",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestClient.ts",
                                  "line": 132,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [60, 59, 58]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 14,
                        "name": "Schema"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "literal",
                            "value": "Returns"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 53,
                            "name": "Fn"
                          }
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "trueType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "objectType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "intrinsic",
                                "name": "any"
                              },
                              "objectType": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          },
                          "extendsType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          },
                          "trueType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "intrinsic",
                              "name": "any"
                            },
                            "objectType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Returns"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 53,
                          "name": "Fn"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 52,
                        "name": "FnName"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 46,
              "name": "schema",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestClient.ts",
                  "line": 87,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 47,
                  "name": "schema",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Select a schema to query or perform an function (rpc) call.",
                    "text": "The schema needs to be on the list of exposed schemas inside Supabase.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 48,
                      "name": "DynamicSchema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 49,
                      "name": "schema",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The schema to query\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 48,
                        "name": "DynamicSchema",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 9,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      },
                      {
                        "type": "reference",
                        "id": 48,
                        "name": "DynamicSchema"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "id": 48,
                            "name": "DynamicSchema"
                          },
                          "objectType": {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          }
                        },
                        "extendsType": {
                          "type": "reference",
                          "name": "GenericSchema"
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [10]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [28, 26, 27, 25]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [33, 50, 46]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 17,
              "character": 21
            }
          ],
          "typeParameter": [
            {
              "id": 61,
              "name": "Database",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "Types for the schema from the [type\ngenerator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n"
              },
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 62,
              "name": "SchemaName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "Postgres schema to switch to. Must be a string\nliteral, the same one passed to the constructor. If the schema is not\n`\"public\"`, this must be supplied manually.\n"
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "id": 12,
                      "name": "Database"
                    }
                  }
                ]
              },
              "default": {
                "type": "conditional",
                "checkType": {
                  "type": "literal",
                  "value": "public"
                },
                "extendsType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  }
                },
                "trueType": {
                  "type": "literal",
                  "value": "public"
                },
                "falseType": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 63,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "GenericSchema"
              },
              "default": {
                "type": "conditional",
                "checkType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "id": 13,
                    "name": "SchemaName"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  }
                },
                "extendsType": {
                  "type": "reference",
                  "name": "GenericSchema"
                },
                "trueType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "id": 13,
                    "name": "SchemaName"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  }
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            }
          ]
        },
        {
          "id": 681,
          "name": "PostgrestError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Error format",
            "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
          },
          "children": [
            {
              "id": 682,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 11,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 683,
                  "name": "new PostgrestError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 684,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 685,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 689,
                              "name": "code",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestError.ts",
                                  "line": 11,
                                  "character": 73
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 687,
                              "name": "details",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestError.ts",
                                  "line": 11,
                                  "character": 42
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 688,
                              "name": "hint",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestError.ts",
                                  "line": 11,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 686,
                              "name": "message",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestError.ts",
                                  "line": 11,
                                  "character": 25
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [689, 687, 688, 686]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 681,
                    "name": "default"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            },
            {
              "id": 692,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 9,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 690,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 7,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 691,
              "name": "hint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 8,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [682]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [692, 690, 691]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 6,
              "character": 21
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "qualifiedName": "Error",
              "package": "typescript",
              "name": "Error"
            }
          ]
        },
        {
          "id": 151,
          "name": "PostgrestFilterBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 152,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 153,
                  "name": "new PostgrestFilterBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 154,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericSchema"
                      }
                    },
                    {
                      "id": 155,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 156,
                      "name": "Result",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    },
                    {
                      "id": 157,
                      "name": "RelationName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 158,
                      "name": "Relationships",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 159,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 156,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default",
                        "dereferenced": {
                          "id": 631,
                          "name": "PostgrestBuilder",
                          "kind": 128,
                          "kindString": "Class",
                          "flags": {
                            "isAbstract": true
                          },
                          "children": [
                            {
                              "id": 632,
                              "name": "constructor",
                              "kind": 512,
                              "kindString": "Constructor",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 31,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 633,
                                  "name": "new PostgrestBuilder",
                                  "kind": 16384,
                                  "kindString": "Constructor signature",
                                  "flags": {},
                                  "typeParameter": [
                                    {
                                      "id": 634,
                                      "name": "Result",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {}
                                    },
                                    {
                                      "id": 635,
                                      "name": "ThrowOnError",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      },
                                      "default": {
                                        "type": "literal",
                                        "value": false
                                      }
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 636,
                                      "name": "builder",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "literal",
                                            "value": false
                                          }
                                        ],
                                        "name": "default",
                                        "dereferenced": "[Circular ~.children.3.children.0.signatures.0.parameters.0.type.dereferenced]"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 641,
                              "name": "body",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 25,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            },
                            {
                              "id": 644,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 28,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 645,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 646,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 647,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 648,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 639,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 23,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            },
                            {
                              "id": 649,
                              "name": "isMaybeSingle",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 29,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 637,
                              "name": "method",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 21,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "GET"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "HEAD"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "POST"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "PATCH"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "DELETE"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 640,
                              "name": "schema",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 24,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 642,
                              "name": "shouldThrowOnError",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 26,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            },
                            {
                              "id": 643,
                              "name": "signal",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 27,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "AbortSignal",
                                "package": "typescript",
                                "name": "AbortSignal"
                              }
                            },
                            {
                              "id": 638,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 22,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            },
                            {
                              "id": 671,
                              "name": "overrideTypes",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 257,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 672,
                                  "name": "overrideTypes",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Override the type of the returned `data` field in the response.",
                                    "returns": "A PostgrestBuilder instance with the new type\n",
                                    "tags": [
                                      {
                                        "tag": "example",
                                        "text": "\n```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                                      }
                                    ]
                                  },
                                  "typeParameter": [
                                    {
                                      "id": 673,
                                      "name": "NewResult",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The new type to cast the response data to"
                                      }
                                    },
                                    {
                                      "id": 678,
                                      "name": "Options",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Optional type configuration (defaults to { merge: true })"
                                      },
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 674,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 675,
                                              "name": "merge",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/PostgrestBuilder.ts",
                                                  "line": 259,
                                                  "character": 22
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [675]
                                            }
                                          ]
                                        }
                                      },
                                      "default": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 676,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 677,
                                              "name": "merge",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/PostgrestBuilder.ts",
                                                  "line": 259,
                                                  "character": 44
                                                }
                                              ],
                                              "type": {
                                                "type": "literal",
                                                "value": true
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [677]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "conditional",
                                        "checkType": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            },
                                            {
                                              "type": "reference",
                                              "id": 488,
                                              "name": "NewResult"
                                            },
                                            {
                                              "type": "literal",
                                              "value": false
                                            },
                                            {
                                              "type": "literal",
                                              "value": false
                                            }
                                          ],
                                          "name": "IsValidResultOverride"
                                        },
                                        "extendsType": {
                                          "type": "literal",
                                          "value": true
                                        },
                                        "trueType": {
                                          "type": "conditional",
                                          "checkType": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 634,
                                                "name": "Result"
                                              }
                                            ],
                                            "name": "ContainsNull"
                                          },
                                          "extendsType": {
                                            "type": "literal",
                                            "value": true
                                          },
                                          "trueType": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "reference",
                                                    "id": 488,
                                                    "name": "NewResult"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 634,
                                                        "name": "Result"
                                                      }
                                                    ],
                                                    "qualifiedName": "NonNullable",
                                                    "package": "typescript",
                                                    "name": "NonNullable"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "id": 493,
                                                    "name": "Options"
                                                  }
                                                ],
                                                "name": "MergePartialResult"
                                              }
                                            ]
                                          },
                                          "falseType": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 488,
                                                "name": "NewResult"
                                              },
                                              {
                                                "type": "reference",
                                                "id": 634,
                                                "name": "Result"
                                              },
                                              {
                                                "type": "reference",
                                                "id": 493,
                                                "name": "Options"
                                              }
                                            ],
                                            "name": "MergePartialResult"
                                          }
                                        },
                                        "falseType": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            },
                                            {
                                              "type": "reference",
                                              "id": 488,
                                              "name": "NewResult"
                                            }
                                          ],
                                          "name": "CheckMatchingArrayTypes"
                                        }
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 668,
                              "name": "returns",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 227,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 669,
                                  "name": "returns",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Override the type of the returned `data`.",
                                    "tags": [
                                      {
                                        "tag": "deprecated",
                                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n"
                                      }
                                    ]
                                  },
                                  "typeParameter": [
                                    {
                                      "id": 670,
                                      "name": "NewResult",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The new result type to override with"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 670,
                                            "name": "NewResult"
                                          }
                                        ],
                                        "name": "CheckMatchingArrayTypes"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 652,
                              "name": "setHeader",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 64,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 653,
                                  "name": "setHeader",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Set an HTTP header for the request."
                                  },
                                  "parameters": [
                                    {
                                      "id": 654,
                                      "name": "name",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 655,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 656,
                              "name": "then",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 70,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 657,
                                  "name": "then",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "typeParameter": [
                                    {
                                      "id": 658,
                                      "name": "TResult1",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "default": {
                                        "type": "conditional",
                                        "checkType": {
                                          "type": "reference",
                                          "id": 635,
                                          "name": "ThrowOnError"
                                        },
                                        "extendsType": {
                                          "type": "literal",
                                          "value": true
                                        },
                                        "trueType": {
                                          "type": "reference",
                                          "id": 701,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestResponseSuccess"
                                        },
                                        "falseType": {
                                          "type": "reference",
                                          "id": 708,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestSingleResponse"
                                        }
                                      }
                                    },
                                    {
                                      "id": 659,
                                      "name": "TResult2",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "default": {
                                        "type": "intrinsic",
                                        "name": "never"
                                      }
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 660,
                                      "name": "onfulfilled",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 661,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "signatures": [
                                                {
                                                  "id": 662,
                                                  "name": "__type",
                                                  "kind": 4096,
                                                  "kindString": "Call signature",
                                                  "flags": {},
                                                  "parameters": [
                                                    {
                                                      "id": 663,
                                                      "name": "value",
                                                      "kind": 32768,
                                                      "kindString": "Parameter",
                                                      "flags": {},
                                                      "type": {
                                                        "type": "conditional",
                                                        "checkType": {
                                                          "type": "reference",
                                                          "id": 635,
                                                          "name": "ThrowOnError"
                                                        },
                                                        "extendsType": {
                                                          "type": "literal",
                                                          "value": true
                                                        },
                                                        "trueType": {
                                                          "type": "reference",
                                                          "id": 701,
                                                          "typeArguments": [
                                                            {
                                                              "type": "reference",
                                                              "id": 634,
                                                              "name": "Result"
                                                            }
                                                          ],
                                                          "name": "PostgrestResponseSuccess"
                                                        },
                                                        "falseType": {
                                                          "type": "reference",
                                                          "id": 708,
                                                          "typeArguments": [
                                                            {
                                                              "type": "reference",
                                                              "id": 634,
                                                              "name": "Result"
                                                            }
                                                          ],
                                                          "name": "PostgrestSingleResponse"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "reference",
                                                        "id": 476,
                                                        "name": "TResult1"
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "typeArguments": [
                                                          {
                                                            "type": "reference",
                                                            "id": 476,
                                                            "name": "TResult1"
                                                          }
                                                        ],
                                                        "qualifiedName": "PromiseLike",
                                                        "package": "typescript",
                                                        "name": "PromiseLike"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 664,
                                      "name": "onrejected",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 665,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "signatures": [
                                                {
                                                  "id": 666,
                                                  "name": "__type",
                                                  "kind": 4096,
                                                  "kindString": "Call signature",
                                                  "flags": {},
                                                  "parameters": [
                                                    {
                                                      "id": 667,
                                                      "name": "reason",
                                                      "kind": 32768,
                                                      "kindString": "Parameter",
                                                      "flags": {},
                                                      "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "reference",
                                                        "id": 477,
                                                        "name": "TResult2"
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "typeArguments": [
                                                          {
                                                            "type": "reference",
                                                            "id": 477,
                                                            "name": "TResult2"
                                                          }
                                                        ],
                                                        "qualifiedName": "PromiseLike",
                                                        "package": "typescript",
                                                        "name": "PromiseLike"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "id": 476,
                                            "name": "TResult1"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 477,
                                            "name": "TResult2"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  },
                                  "implementationOf": {
                                    "type": "reference",
                                    "name": "PromiseLike.then"
                                  }
                                }
                              ],
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            },
                            {
                              "id": 650,
                              "name": "throwOnError",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 56,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 651,
                                  "name": "throwOnError",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                    "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                                  },
                                  "type": {
                                    "type": "intersection",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 635,
                                            "name": "ThrowOnError"
                                          }
                                        ],
                                        "name": "default"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "literal",
                                            "value": true
                                          }
                                        ],
                                        "name": "default"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ],
                          "groups": [
                            {
                              "title": "Constructors",
                              "kind": 512,
                              "children": [632]
                            },
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [641, 644, 639, 649, 637, 640, 642, 643, 638]
                            },
                            {
                              "title": "Methods",
                              "kind": 2048,
                              "children": [671, 668, 652, 656, 650]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 30
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 679,
                              "name": "Result",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            },
                            {
                              "id": 680,
                              "name": "ThrowOnError",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "default": {
                                "type": "literal",
                                "value": false
                              }
                            }
                          ],
                          "extendedBy": [
                            {
                              "type": "reference",
                              "id": 499,
                              "name": "PostgrestTransformBuilder"
                            }
                          ],
                          "implementedTypes": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "conditional",
                                  "checkType": {
                                    "type": "reference",
                                    "id": 635,
                                    "name": "ThrowOnError"
                                  },
                                  "extendsType": {
                                    "type": "literal",
                                    "value": true
                                  },
                                  "trueType": {
                                    "type": "reference",
                                    "id": 701,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponseSuccess"
                                  },
                                  "falseType": {
                                    "type": "reference",
                                    "id": 708,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "qualifiedName": "PromiseLike",
                              "package": "typescript",
                              "name": "PromiseLike"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 501,
                    "name": "default.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 500,
                "name": "default.constructor"
              }
            },
            {
              "id": 459,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 25,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 591,
                "name": "default.body"
              }
            },
            {
              "id": 462,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 28,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 463,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 464,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 465,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 466,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 594,
                "name": "default.fetch"
              }
            },
            {
              "id": 457,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 23,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 589,
                "name": "default.headers"
              }
            },
            {
              "id": 467,
              "name": "isMaybeSingle",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 29,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 599,
                "name": "default.isMaybeSingle"
              }
            },
            {
              "id": 455,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 21,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "GET"
                  },
                  {
                    "type": "literal",
                    "value": "HEAD"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  },
                  {
                    "type": "literal",
                    "value": "PATCH"
                  },
                  {
                    "type": "literal",
                    "value": "DELETE"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 587,
                "name": "default.method"
              }
            },
            {
              "id": 458,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 24,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 590,
                "name": "default.schema"
              }
            },
            {
              "id": 460,
              "name": "shouldThrowOnError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 26,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false",
              "inheritedFrom": {
                "type": "reference",
                "id": 592,
                "name": "default.shouldThrowOnError"
              }
            },
            {
              "id": 461,
              "name": "signal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 27,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "AbortSignal",
                "package": "typescript",
                "name": "AbortSignal"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 593,
                "name": "default.signal"
              }
            },
            {
              "id": 456,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 22,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "URL",
                "package": "typescript",
                "name": "URL"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 588,
                "name": "default.url"
              }
            },
            {
              "id": 427,
              "name": "abortSignal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 180,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 428,
                  "name": "abortSignal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the AbortSignal for the fetch request."
                  },
                  "parameters": [
                    {
                      "id": 429,
                      "name": "signal",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The AbortSignal to use for the fetch request\n"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "AbortSignal",
                        "package": "typescript",
                        "name": "AbortSignal"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 560,
                    "name": "default.abortSignal"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 559,
                "name": "default.abortSignal"
              }
            },
            {
              "id": 271,
              "name": "containedBy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 342,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 272,
                  "name": "containedBy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 273,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 274,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 273,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 275,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 273,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 276,
                  "name": "containedBy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
                  },
                  "parameters": [
                    {
                      "id": 277,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 278,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            }
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 263,
              "name": "contains",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 315,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 264,
                  "name": "contains",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 265,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 266,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 265,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 267,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 265,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 268,
                  "name": "contains",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
                  },
                  "parameters": [
                    {
                      "id": 269,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 270,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The jsonb, array, or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            }
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 436,
              "name": "csv",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 221,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 437,
                  "name": "csv",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a string in CSV format."
                  },
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 569,
                    "name": "default.csv"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 568,
                "name": "default.csv"
              }
            },
            {
              "id": 160,
              "name": "eq",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 87,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 161,
                  "name": "eq",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is equal to `value`.",
                    "text": "To check if the value of `column` is NULL, you should use `.is()` instead.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 162,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 163,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 162,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 164,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 154,
                              "name": "Schema"
                            },
                            {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            },
                            {
                              "type": "reference",
                              "id": 162,
                              "name": "ColumnName"
                            }
                          ],
                          "name": "ResolveFilterValue"
                        },
                        "extendsType": {
                          "type": "intrinsic",
                          "name": "never"
                        },
                        "trueType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "falseType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 154,
                                "name": "Schema"
                              },
                              {
                                "type": "reference",
                                "id": 155,
                                "name": "Row"
                              },
                              {
                                "type": "reference",
                                "id": 162,
                                "name": "ColumnName"
                              }
                            ],
                            "name": "ResolveFilterValue"
                          },
                          "extendsType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "trueType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "name": "ResolvedFilterValue"
                              }
                            ],
                            "qualifiedName": "NonNullable",
                            "package": "typescript",
                            "name": "NonNullable"
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 440,
              "name": "explain",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 259,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 441,
                  "name": "explain",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as the EXPLAIN plan for the query.",
                    "text": "You need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method.\n"
                  },
                  "parameters": [
                    {
                      "id": 442,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 443,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 444,
                              "name": "analyze",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 267,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 447,
                              "name": "buffers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on buffer usage\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 270,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 449,
                              "name": "format",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 272,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "text"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "json"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 446,
                              "name": "settings",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 269,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 445,
                              "name": "verbose",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 268,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 448,
                              "name": "wal",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on WAL record generation\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 271,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [444, 447, 449, 446, 445, 448]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "qualifiedName": "Record",
                              "package": "typescript",
                              "name": "Record"
                            }
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 573,
                    "name": "default.explain"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 572,
                "name": "default.explain"
              }
            },
            {
              "id": 366,
              "name": "filter",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 569,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 367,
                  "name": "filter",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                    "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 368,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 369,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 368,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 370,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The operator to filter with, following PostgREST syntax"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "FilterOperator"
                          },
                          {
                            "type": "literal",
                            "value": "not.eq"
                          },
                          {
                            "type": "literal",
                            "value": "not.neq"
                          },
                          {
                            "type": "literal",
                            "value": "not.gt"
                          },
                          {
                            "type": "literal",
                            "value": "not.gte"
                          },
                          {
                            "type": "literal",
                            "value": "not.lt"
                          },
                          {
                            "type": "literal",
                            "value": "not.lte"
                          },
                          {
                            "type": "literal",
                            "value": "not.like"
                          },
                          {
                            "type": "literal",
                            "value": "not.ilike"
                          },
                          {
                            "type": "literal",
                            "value": "not.is"
                          },
                          {
                            "type": "literal",
                            "value": "not.in"
                          },
                          {
                            "type": "literal",
                            "value": "not.cs"
                          },
                          {
                            "type": "literal",
                            "value": "not.cd"
                          },
                          {
                            "type": "literal",
                            "value": "not.sl"
                          },
                          {
                            "type": "literal",
                            "value": "not.sr"
                          },
                          {
                            "type": "literal",
                            "value": "not.nxl"
                          },
                          {
                            "type": "literal",
                            "value": "not.nxr"
                          },
                          {
                            "type": "literal",
                            "value": "not.adj"
                          },
                          {
                            "type": "literal",
                            "value": "not.ov"
                          },
                          {
                            "type": "literal",
                            "value": "not.fts"
                          },
                          {
                            "type": "literal",
                            "value": "not.plfts"
                          },
                          {
                            "type": "literal",
                            "value": "not.phfts"
                          },
                          {
                            "type": "literal",
                            "value": "not.wfts"
                          }
                        ]
                      }
                    },
                    {
                      "id": 371,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with, following PostgREST syntax\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 372,
                  "name": "filter",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                    "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
                  },
                  "parameters": [
                    {
                      "id": 373,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 374,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The operator to filter with, following PostgREST syntax"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 375,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with, following PostgREST syntax\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 438,
              "name": "geojson",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 229,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 439,
                  "name": "geojson",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
                  },
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 571,
                    "name": "default.geojson"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 570,
                "name": "default.geojson"
              }
            },
            {
              "id": 170,
              "name": "gt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 120,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 171,
                  "name": "gt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is greater than `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 172,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 173,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 172,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 174,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 172,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 175,
                  "name": "gt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is greater than `value`."
                  },
                  "parameters": [
                    {
                      "id": 176,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 177,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 178,
              "name": "gte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 133,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 179,
                  "name": "gte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is greater than or equal to `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 180,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 181,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 180,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 182,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 180,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 183,
                  "name": "gte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is greater than or equal to `value`."
                  },
                  "parameters": [
                    {
                      "id": 184,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 185,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 226,
              "name": "ilike",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 217,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 227,
                  "name": "ilike",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 228,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 229,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 228,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 230,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The pattern to match with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 231,
                  "name": "ilike",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
                  },
                  "parameters": [
                    {
                      "id": 232,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 233,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The pattern to match with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 234,
              "name": "ilikeAllOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 230,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 235,
                  "name": "ilikeAllOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches all of `patterns` case-insensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 236,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 237,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 236,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 238,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 239,
                  "name": "ilikeAllOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches all of `patterns` case-insensitively."
                  },
                  "parameters": [
                    {
                      "id": 240,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 241,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 242,
              "name": "ilikeAnyOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 246,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 243,
                  "name": "ilikeAnyOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches any of `patterns` case-insensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 244,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 245,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 244,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 246,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 247,
                  "name": "ilikeAnyOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches any of `patterns` case-insensitively."
                  },
                  "parameters": [
                    {
                      "id": 248,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 249,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 258,
              "name": "in",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 290,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 259,
                  "name": "in",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is included in the `values` array."
                  },
                  "typeParameter": [
                    {
                      "id": 260,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 261,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 260,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 262,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values array to filter with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "conditional",
                            "checkType": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "id": 154,
                                  "name": "Schema"
                                },
                                {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                },
                                {
                                  "type": "reference",
                                  "id": 260,
                                  "name": "ColumnName"
                                }
                              ],
                              "name": "ResolveFilterValue"
                            },
                            "extendsType": {
                              "type": "intrinsic",
                              "name": "never"
                            },
                            "trueType": {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            "falseType": {
                              "type": "conditional",
                              "checkType": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 154,
                                    "name": "Schema"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 155,
                                    "name": "Row"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 260,
                                    "name": "ColumnName"
                                  }
                                ],
                                "name": "ResolveFilterValue"
                              },
                              "extendsType": {
                                "type": "reference",
                                "name": "ResolvedFilterValue"
                              },
                              "trueType": {
                                "type": "reference",
                                "name": "ResolvedFilterValue"
                              },
                              "falseType": {
                                "type": "intrinsic",
                                "name": "never"
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 250,
              "name": "is",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 262,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 251,
                  "name": "is",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` IS `value`.",
                    "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 252,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 253,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 252,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 254,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 252,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              },
                              {
                                "type": "literal",
                                "value": null
                              }
                            ]
                          },
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 252,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              },
                              {
                                "type": "literal",
                                "value": false
                              }
                            ]
                          },
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 252,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              },
                              {
                                "type": "literal",
                                "value": true
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 255,
                  "name": "is",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` IS `value`.",
                    "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
                  },
                  "parameters": [
                    {
                      "id": 256,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 257,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 202,
              "name": "like",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 172,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 203,
                  "name": "like",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 204,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 205,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 204,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 206,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The pattern to match with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 207,
                  "name": "like",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
                  },
                  "parameters": [
                    {
                      "id": 208,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 209,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The pattern to match with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 210,
              "name": "likeAllOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 185,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 211,
                  "name": "likeAllOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches all of `patterns` case-sensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 212,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 213,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 212,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 214,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 215,
                  "name": "likeAllOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches all of `patterns` case-sensitively."
                  },
                  "parameters": [
                    {
                      "id": 216,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 217,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 218,
              "name": "likeAnyOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 201,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 219,
                  "name": "likeAnyOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches any of `patterns` case-sensitively."
                  },
                  "typeParameter": [
                    {
                      "id": 220,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 221,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 220,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 222,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 223,
                  "name": "likeAnyOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` matches any of `patterns` case-sensitively."
                  },
                  "parameters": [
                    {
                      "id": 224,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 225,
                      "name": "patterns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The patterns to match with\n"
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 412,
              "name": "limit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 131,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 413,
                  "name": "limit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limit the query result by `count`."
                  },
                  "parameters": [
                    {
                      "id": 414,
                      "name": "count",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The maximum number of rows to return"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 415,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 416,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 417,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 136,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 418,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 136,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [417, 418]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 545,
                    "name": "default.limit"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 544,
                "name": "default.limit"
              }
            },
            {
              "id": 186,
              "name": "lt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 146,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 187,
                  "name": "lt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is less than `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 188,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 189,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 188,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 190,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 188,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 191,
                  "name": "lt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is less than `value`."
                  },
                  "parameters": [
                    {
                      "id": 192,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 193,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 194,
              "name": "lte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 159,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 195,
                  "name": "lte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is less than or equal to `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 196,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 197,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 196,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 198,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 196,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 199,
                  "name": "lte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is less than or equal to `value`."
                  },
                  "parameters": [
                    {
                      "id": 200,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 201,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 343,
              "name": "match",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 502,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 344,
                  "name": "match",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
                  },
                  "typeParameter": [
                    {
                      "id": 345,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 346,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 345,
                            "name": "ColumnName"
                          },
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 345,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 347,
                  "name": "match",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
                  },
                  "parameters": [
                    {
                      "id": 348,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 433,
              "name": "maybeSingle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 204,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 434,
                  "name": "maybeSingle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a single object instead of an array of objects.",
                    "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 435,
                      "name": "ResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 156,
                          "name": "Result"
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "ResultOne"
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "ResultOne"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 435,
                            "name": "ResultOne"
                          }
                        ]
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 566,
                    "name": "default.maybeSingle"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 565,
                "name": "default.maybeSingle"
              }
            },
            {
              "id": 165,
              "name": "neq",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 108,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 166,
                  "name": "neq",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows where `column` is not equal to `value`."
                  },
                  "typeParameter": [
                    {
                      "id": 167,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 168,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 167,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 169,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with\n"
                      },
                      "type": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 154,
                              "name": "Schema"
                            },
                            {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            },
                            {
                              "type": "reference",
                              "id": 167,
                              "name": "ColumnName"
                            }
                          ],
                          "name": "ResolveFilterValue"
                        },
                        "extendsType": {
                          "type": "intrinsic",
                          "name": "never"
                        },
                        "trueType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "falseType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 154,
                                "name": "Schema"
                              },
                              {
                                "type": "reference",
                                "id": 155,
                                "name": "Row"
                              },
                              {
                                "type": "reference",
                                "id": 167,
                                "name": "ColumnName"
                              }
                            ],
                            "name": "ResolveFilterValue"
                          },
                          "extendsType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "trueType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 349,
              "name": "not",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 518,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 350,
                  "name": "not",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows which doesn't satisfy the filter.",
                    "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 351,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 352,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 351,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 353,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                      },
                      "type": {
                        "type": "reference",
                        "name": "FilterOperator"
                      }
                    },
                    {
                      "id": 354,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with, following PostgREST syntax\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 351,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 355,
                  "name": "not",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows which doesn't satisfy the filter.",
                    "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
                  },
                  "parameters": [
                    {
                      "id": 356,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 357,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 358,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The value to filter with, following PostgREST syntax\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 359,
              "name": "or",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 557,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 360,
                  "name": "or",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Match only rows which satisfy at least one of the filters.",
                    "text": "Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure it's properly sanitized.\n\nIt's currently not possible to do an `.or()` filter across multiple tables.\n"
                  },
                  "parameters": [
                    {
                      "id": 361,
                      "name": "filters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The filters to use, following PostgREST syntax"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 362,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 363,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 364,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Deprecated, use `referencedTable` instead\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 562,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 365,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to filter on referenced tables\ninstead of the parent table"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 562,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [364, 365]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 381,
              "name": "order",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 55,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 382,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 383,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 384,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "reference",
                        "id": 383,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 385,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 386,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 387,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the result will be in ascending order"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 388,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 389,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to order a referenced table by\nits columns"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [387, 388, 389]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 514,
                    "name": "default.order"
                  }
                },
                {
                  "id": 390,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
                  },
                  "parameters": [
                    {
                      "id": 391,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 392,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 393,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 394,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the result will be in ascending order"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 395,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 396,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to order a referenced table by\nits columns"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [394, 395, 396]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 522,
                    "name": "default.order"
                  }
                },
                {
                  "id": 397,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 398,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 399,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "reference",
                        "id": 398,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 400,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 401,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 402,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 404,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            },
                            {
                              "id": 403,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [402, 404, 403]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 529,
                    "name": "default.order"
                  }
                },
                {
                  "id": 405,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 406,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 407,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 408,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 409,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 411,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 410,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [409, 411, 410]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 537,
                    "name": "default.order"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 513,
                "name": "default.order"
              }
            },
            {
              "id": 319,
              "name": "overlaps",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 441,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 320,
                  "name": "overlaps",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
                  },
                  "typeParameter": [
                    {
                      "id": 321,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 322,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The array or range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 321,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 323,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The array or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "reference",
                                  "id": 321,
                                  "name": "ColumnName"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "id": 155,
                                  "name": "Row"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 324,
                  "name": "overlaps",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
                  },
                  "parameters": [
                    {
                      "id": 325,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The array or range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 326,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The array or range value to filter with\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "typeOperator",
                            "operator": "readonly",
                            "target": {
                              "type": "array",
                              "elementType": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 486,
              "name": "overrideTypes",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 257,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 487,
                  "name": "overrideTypes",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data` field in the response.",
                    "returns": "A PostgrestBuilder instance with the new type\n",
                    "tags": [
                      {
                        "tag": "example",
                        "text": "\n```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 488,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new type to cast the response data to"
                      }
                    },
                    {
                      "id": 493,
                      "name": "Options",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Optional type configuration (defaults to { merge: true })"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 489,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 490,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 22
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [490]
                            }
                          ]
                        }
                      },
                      "default": {
                        "type": "reflection",
                        "declaration": {
                          "id": 491,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 492,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 44
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": true
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [492]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 156,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            },
                            {
                              "type": "literal",
                              "value": false
                            },
                            {
                              "type": "literal",
                              "value": false
                            }
                          ],
                          "name": "IsValidResultOverride"
                        },
                        "extendsType": {
                          "type": "literal",
                          "value": true
                        },
                        "trueType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 156,
                                "name": "Result"
                              }
                            ],
                            "name": "ContainsNull"
                          },
                          "extendsType": {
                            "type": "literal",
                            "value": true
                          },
                          "trueType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 488,
                                    "name": "NewResult"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 156,
                                        "name": "Result"
                                      }
                                    ],
                                    "qualifiedName": "NonNullable",
                                    "package": "typescript",
                                    "name": "NonNullable"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 493,
                                    "name": "Options"
                                  }
                                ],
                                "name": "MergePartialResult"
                              }
                            ]
                          },
                          "falseType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 488,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "id": 156,
                                "name": "Result"
                              },
                              {
                                "type": "reference",
                                "id": 493,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        },
                        "falseType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 156,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            }
                          ],
                          "name": "CheckMatchingArrayTypes"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 619,
                    "name": "default.overrideTypes"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 618,
                "name": "default.overrideTypes"
              }
            },
            {
              "id": 419,
              "name": "range",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 158,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 420,
                  "name": "range",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limit the query result by starting at an offset `from` and ending at the offset `to`.\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\nand fourth rows of the query."
                  },
                  "parameters": [
                    {
                      "id": 421,
                      "name": "from",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The starting index from which to limit the result"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 422,
                      "name": "to",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The last index to which to limit the result"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 423,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 424,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 425,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 164,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 426,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 164,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [425, 426]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 552,
                    "name": "default.range"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 551,
                "name": "default.range"
              }
            },
            {
              "id": 311,
              "name": "rangeAdjacent",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 426,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 312,
                  "name": "rangeAdjacent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
                  },
                  "typeParameter": [
                    {
                      "id": 313,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 314,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 313,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 315,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 316,
                  "name": "rangeAdjacent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
                  },
                  "parameters": [
                    {
                      "id": 317,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 318,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 279,
              "name": "rangeGt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 368,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 280,
                  "name": "rangeGt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
                  },
                  "typeParameter": [
                    {
                      "id": 281,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 282,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 281,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 283,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 284,
                  "name": "rangeGt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
                  },
                  "parameters": [
                    {
                      "id": 285,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 286,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 287,
              "name": "rangeGte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 382,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 288,
                  "name": "rangeGte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
                  },
                  "typeParameter": [
                    {
                      "id": 289,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 290,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 289,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 291,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 292,
                  "name": "rangeGte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
                  },
                  "parameters": [
                    {
                      "id": 293,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 294,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 295,
              "name": "rangeLt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 397,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 296,
                  "name": "rangeLt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
                  },
                  "typeParameter": [
                    {
                      "id": 297,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 298,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 297,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 299,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 300,
                  "name": "rangeLt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
                  },
                  "parameters": [
                    {
                      "id": 301,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 302,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 303,
              "name": "rangeLte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 411,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 304,
                  "name": "rangeLte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
                  },
                  "typeParameter": [
                    {
                      "id": 305,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 306,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 305,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 307,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 308,
                  "name": "rangeLte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
                  },
                  "parameters": [
                    {
                      "id": 309,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 310,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The range to filter with\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 452,
              "name": "returns",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 312,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 453,
                  "name": "returns",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data`.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 454,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new result type to override with"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 156,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 454,
                            "name": "NewResult"
                          }
                        ],
                        "name": "CheckMatchingArrayTypes"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 585,
                    "name": "default.returns"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 584,
                "name": "default.returns"
              }
            },
            {
              "id": 450,
              "name": "rollback",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 297,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 451,
                  "name": "rollback",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Rollback the query.",
                    "text": "`data` will still be returned, but the query is not committed.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 583,
                    "name": "default.rollback"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 582,
                "name": "default.rollback"
              }
            },
            {
              "id": 376,
              "name": "select",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 21,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 377,
                  "name": "select",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a SELECT on the query result.",
                    "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 378,
                      "name": "Query",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "literal",
                        "value": "*"
                      }
                    },
                    {
                      "id": 379,
                      "name": "NewResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 712,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 154,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 155,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 157,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 158,
                            "name": "Relationships"
                          },
                          {
                            "type": "reference",
                            "id": 378,
                            "name": "Query"
                          }
                        ],
                        "name": "GetResult"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 380,
                      "name": "columns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The columns to retrieve, separated by commas\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 378,
                        "name": "Query",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 379,
                          "name": "NewResultOne"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 509,
                    "name": "default.select"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 508,
                "name": "default.select"
              }
            },
            {
              "id": 470,
              "name": "setHeader",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 471,
                  "name": "setHeader",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set an HTTP header for the request."
                  },
                  "parameters": [
                    {
                      "id": 472,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 473,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 603,
                    "name": "default.setHeader"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 602,
                "name": "default.setHeader"
              }
            },
            {
              "id": 430,
              "name": "single",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 191,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 431,
                  "name": "single",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a single object instead of an array of objects.",
                    "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 432,
                      "name": "ResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 156,
                          "name": "Result"
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "ResultOne"
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "ResultOne"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 432,
                        "name": "ResultOne"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 563,
                    "name": "default.single"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 562,
                "name": "default.single"
              }
            },
            {
              "id": 327,
              "name": "textSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestFilterBuilder.ts",
                  "line": 464,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 328,
                  "name": "textSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
                  },
                  "typeParameter": [
                    {
                      "id": 329,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 330,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The text or tsvector column to filter on"
                      },
                      "type": {
                        "type": "reference",
                        "id": 329,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 331,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The query text to match with"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 332,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 333,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 334,
                              "name": "config",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The text search configuration to use"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 467,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 335,
                              "name": "type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Change how the `query` text is interpreted\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 467,
                                  "character": 33
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "plain"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "phrase"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "websearch"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [334, 335]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 336,
                  "name": "textSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
                  },
                  "parameters": [
                    {
                      "id": 337,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The text or tsvector column to filter on"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 338,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The query text to match with"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 339,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 340,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 341,
                              "name": "config",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The text search configuration to use"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 472,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 342,
                              "name": "type",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Change how the `query` text is interpreted\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestFilterBuilder.ts",
                                  "line": 472,
                                  "character": 33
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "plain"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "phrase"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "websearch"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [341, 342]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 474,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 70,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 475,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 476,
                      "name": "TResult1",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 708,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 156,
                            "name": "Result"
                          }
                        ],
                        "name": "PostgrestSingleResponse"
                      }
                    },
                    {
                      "id": 477,
                      "name": "TResult2",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 478,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 479,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 480,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 481,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 708,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 156,
                                            "name": "Result"
                                          }
                                        ],
                                        "name": "PostgrestSingleResponse"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 476,
                                            "name": "TResult1"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 482,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 483,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 484,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 485,
                                      "name": "reason",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 477,
                                            "name": "TResult2"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 476,
                            "name": "TResult1"
                          },
                          {
                            "type": "reference",
                            "id": 477,
                            "name": "TResult2"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 607,
                    "name": "default.then"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 606,
                "name": "default.then"
              }
            },
            {
              "id": 468,
              "name": "throwOnError",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 469,
                  "name": "throwOnError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                    "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "id": 151,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 154,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 155,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 156,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 157,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 158,
                            "name": "Relationships"
                          }
                        ],
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 156,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": true
                          }
                        ],
                        "name": "default"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 601,
                    "name": "default.throwOnError"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 600,
                "name": "default.throwOnError"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [152]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [459, 462, 457, 467, 455, 458, 460, 461, 456]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                427, 271, 263, 436, 160, 440, 366, 438, 170, 178, 226, 234, 242, 258, 250, 202, 210,
                218, 412, 186, 194, 343, 433, 165, 349, 359, 381, 319, 486, 419, 311, 279, 287, 295,
                303, 452, 450, 376, 470, 430, 327, 474, 468
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 72,
              "character": 21
            }
          ],
          "typeParameter": [
            {
              "id": 494,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "GenericSchema"
              }
            },
            {
              "id": 495,
              "name": "Row",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 496,
              "name": "Result",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 497,
              "name": "RelationName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 498,
              "name": "Relationships",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 499,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 154,
                  "name": "Schema"
                },
                {
                  "type": "reference",
                  "id": 155,
                  "name": "Row"
                },
                {
                  "type": "reference",
                  "id": 156,
                  "name": "Result"
                },
                {
                  "type": "reference",
                  "id": 157,
                  "name": "RelationName"
                },
                {
                  "type": "reference",
                  "id": 158,
                  "name": "Relationships"
                }
              ],
              "name": "default"
            }
          ]
        },
        {
          "id": 64,
          "name": "PostgrestQueryBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 65,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 66,
                  "name": "new PostgrestQueryBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 67,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericSchema"
                      }
                    },
                    {
                      "id": 68,
                      "name": "Relation",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "GenericTable"
                          },
                          {
                            "type": "reference",
                            "name": "GenericView"
                          }
                        ]
                      }
                    },
                    {
                      "id": 69,
                      "name": "RelationName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 72,
                      "name": "Relationships",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        },
                        "extendsType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 70,
                            "name": "__type",
                            "kind": 65536,
                            "kindString": "Type literal",
                            "flags": {},
                            "children": [
                              {
                                "id": 71,
                                "name": "Relationships",
                                "kind": 1024,
                                "kindString": "Property",
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/PostgrestQueryBuilder.ts",
                                    "line": 10,
                                    "character": 37
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "name": "R"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "kind": 1024,
                                "children": [71]
                              }
                            ]
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "R"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 73,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "qualifiedName": "URL",
                        "package": "typescript",
                        "name": "URL"
                      }
                    },
                    {
                      "id": 74,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 75,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 78,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 27,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 79,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 80,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 81,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 82,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 76,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 25,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            },
                            {
                              "id": 77,
                              "name": "schema",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 26,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [78, 76, 77]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 64,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 68,
                        "name": "Relation"
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 87,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 16,
                  "character": 2
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 88,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 89,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 90,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 91,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 84,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 13,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 85,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 86,
              "name": "signal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 15,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "AbortSignal",
                "package": "typescript",
                "name": "AbortSignal"
              }
            },
            {
              "id": 83,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 12,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "URL",
                "package": "typescript",
                "name": "URL"
              }
            },
            {
              "id": 140,
              "name": "delete",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 357,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 141,
                  "name": "delete",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a DELETE on the table or view.",
                    "text": "By default, deleted rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
                  },
                  "parameters": [
                    {
                      "id": 142,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 143,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 144,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count deleted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 360,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [144]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 101,
              "name": "insert",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 101,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 102,
                  "name": "insert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform an INSERT into the table or view.",
                    "text": "By default, inserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 103,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 104,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 103,
                        "name": "Row",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 105,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 106,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 107,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count inserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 104,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [107]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 108,
                  "name": "insert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform an INSERT into the table or view.",
                    "text": "By default, inserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 109,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 110,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows.\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 109,
                          "name": "Row"
                        }
                      }
                    },
                    {
                      "id": 111,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 112,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 113,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count inserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 110,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 114,
                              "name": "defaultToNull",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Make missing fields default to `null`.\nOtherwise, use the default value for the column. Only applies for bulk\ninserts.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 111,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [113, 114]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 92,
              "name": "select",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 93,
                  "name": "select",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a SELECT query on the table or view."
                  },
                  "typeParameter": [
                    {
                      "id": 94,
                      "name": "Query",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "literal",
                        "value": "*"
                      }
                    },
                    {
                      "id": 95,
                      "name": "ResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 712,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 67,
                            "name": "Schema"
                          },
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "Row"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 68,
                              "name": "Relation"
                            }
                          },
                          {
                            "type": "reference",
                            "id": 69,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 72,
                            "name": "Relationships"
                          },
                          {
                            "type": "reference",
                            "id": 94,
                            "name": "Query"
                          }
                        ],
                        "name": "GetResult"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 96,
                      "name": "columns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 94,
                        "name": "Query",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 97,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 98,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 100,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count rows in the table or view.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 67,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 99,
                              "name": "head",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 66,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [100, 99]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 95,
                          "name": "ResultOne"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 133,
              "name": "update",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 309,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 134,
                  "name": "update",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform an UPDATE on the table or view.",
                    "text": "By default, updated rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 135,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 136,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values to update with\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 135,
                        "name": "Row",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 137,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 138,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 139,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count updated rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 314,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [139]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 115,
              "name": "upsert",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestQueryBuilder.ts",
                  "line": 184,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 116,
                  "name": "upsert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto `onConflict`, `.upsert()` allows you to perform the equivalent of\n`.insert()` if a row with the corresponding `onConflict` columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n`ignoreDuplicates`.",
                    "text": "By default, upserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 117,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 118,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 117,
                        "name": "Row",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 119,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 120,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 123,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count upserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 189,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 122,
                              "name": "ignoreDuplicates",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, duplicate rows are ignored. If\n`false`, duplicate rows are merged with existing rows.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 188,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 121,
                              "name": "onConflict",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n`onConflict` columns are equal.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 187,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [123, 122, 121]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 124,
                  "name": "upsert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto `onConflict`, `.upsert()` allows you to perform the equivalent of\n`.insert()` if a row with the corresponding `onConflict` columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n`ignoreDuplicates`.",
                    "text": "By default, upserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 125,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 126,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows.\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 125,
                          "name": "Row"
                        }
                      }
                    },
                    {
                      "id": 127,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 128,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 131,
                              "name": "count",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Count algorithm to use to count upserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 197,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "exact"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "planned"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "estimated"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 132,
                              "name": "defaultToNull",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Make missing fields default to `null`.\nOtherwise, use the default value for the column. This only applies when\ninserting new rows, not when merging with existing rows under\n`ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 198,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 130,
                              "name": "ignoreDuplicates",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, duplicate rows are ignored. If\n`false`, duplicate rows are merged with existing rows.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 196,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 129,
                              "name": "onConflict",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n`onConflict` columns are equal.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestQueryBuilder.ts",
                                  "line": 195,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [131, 132, 130, 129]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [65]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [87, 84, 85, 86, 83]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [140, 101, 92, 133, 115]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 6,
              "character": 21
            }
          ],
          "typeParameter": [
            {
              "id": 145,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "GenericSchema"
              }
            },
            {
              "id": 146,
              "name": "Relation",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "name": "GenericTable"
                  },
                  {
                    "type": "reference",
                    "name": "GenericView"
                  }
                ]
              }
            },
            {
              "id": 147,
              "name": "RelationName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 150,
              "name": "Relationships",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 68,
                  "name": "Relation"
                },
                "extendsType": {
                  "type": "reflection",
                  "declaration": {
                    "id": 148,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 149,
                        "name": "Relationships",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestQueryBuilder.ts",
                            "line": 10,
                            "character": 37
                          }
                        ],
                        "type": {
                          "type": "inferred",
                          "name": "R"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [149]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/PostgrestQueryBuilder.ts",
                        "line": 10,
                        "character": 35
                      }
                    ]
                  }
                },
                "trueType": {
                  "type": "reference",
                  "name": "R"
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            }
          ]
        },
        {
          "id": 499,
          "name": "PostgrestTransformBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 500,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 501,
                  "name": "new PostgrestTransformBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 502,
                      "name": "Schema",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "GenericSchema"
                      }
                    },
                    {
                      "id": 503,
                      "name": "Row",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    },
                    {
                      "id": 504,
                      "name": "Result",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    },
                    {
                      "id": 505,
                      "name": "RelationName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 506,
                      "name": "Relationships",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 507,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 504,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default",
                        "dereferenced": {
                          "id": 631,
                          "name": "PostgrestBuilder",
                          "kind": 128,
                          "kindString": "Class",
                          "flags": {
                            "isAbstract": true
                          },
                          "children": [
                            {
                              "id": 632,
                              "name": "constructor",
                              "kind": 512,
                              "kindString": "Constructor",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 31,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 633,
                                  "name": "new PostgrestBuilder",
                                  "kind": 16384,
                                  "kindString": "Constructor signature",
                                  "flags": {},
                                  "typeParameter": [
                                    {
                                      "id": 634,
                                      "name": "Result",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {}
                                    },
                                    {
                                      "id": 635,
                                      "name": "ThrowOnError",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      },
                                      "default": {
                                        "type": "literal",
                                        "value": false
                                      }
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 636,
                                      "name": "builder",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "literal",
                                            "value": false
                                          }
                                        ],
                                        "name": "default",
                                        "dereferenced": "[Circular ~.children.5.children.0.signatures.0.parameters.0.type.dereferenced]"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 641,
                              "name": "body",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 25,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            },
                            {
                              "id": 644,
                              "name": "fetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 28,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 645,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 646,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 647,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 648,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 639,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 23,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            },
                            {
                              "id": 649,
                              "name": "isMaybeSingle",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 29,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 637,
                              "name": "method",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 21,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "GET"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "HEAD"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "POST"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "PATCH"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "DELETE"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 640,
                              "name": "schema",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 24,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 642,
                              "name": "shouldThrowOnError",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 26,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            },
                            {
                              "id": 643,
                              "name": "signal",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true,
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 27,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "AbortSignal",
                                "package": "typescript",
                                "name": "AbortSignal"
                              }
                            },
                            {
                              "id": 638,
                              "name": "url",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isProtected": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 22,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            },
                            {
                              "id": 671,
                              "name": "overrideTypes",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 257,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 672,
                                  "name": "overrideTypes",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Override the type of the returned `data` field in the response.",
                                    "returns": "A PostgrestBuilder instance with the new type\n",
                                    "tags": [
                                      {
                                        "tag": "example",
                                        "text": "\n```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                                      }
                                    ]
                                  },
                                  "typeParameter": [
                                    {
                                      "id": 673,
                                      "name": "NewResult",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The new type to cast the response data to"
                                      }
                                    },
                                    {
                                      "id": 678,
                                      "name": "Options",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "Optional type configuration (defaults to { merge: true })"
                                      },
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 674,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 675,
                                              "name": "merge",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {
                                                "isOptional": true
                                              },
                                              "sources": [
                                                {
                                                  "fileName": "src/PostgrestBuilder.ts",
                                                  "line": 259,
                                                  "character": 22
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [675]
                                            }
                                          ]
                                        }
                                      },
                                      "default": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 676,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 677,
                                              "name": "merge",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/PostgrestBuilder.ts",
                                                  "line": 259,
                                                  "character": 44
                                                }
                                              ],
                                              "type": {
                                                "type": "literal",
                                                "value": true
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [677]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "conditional",
                                        "checkType": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            },
                                            {
                                              "type": "reference",
                                              "id": 488,
                                              "name": "NewResult"
                                            },
                                            {
                                              "type": "literal",
                                              "value": false
                                            },
                                            {
                                              "type": "literal",
                                              "value": false
                                            }
                                          ],
                                          "name": "IsValidResultOverride"
                                        },
                                        "extendsType": {
                                          "type": "literal",
                                          "value": true
                                        },
                                        "trueType": {
                                          "type": "conditional",
                                          "checkType": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 634,
                                                "name": "Result"
                                              }
                                            ],
                                            "name": "ContainsNull"
                                          },
                                          "extendsType": {
                                            "type": "literal",
                                            "value": true
                                          },
                                          "trueType": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": null
                                              },
                                              {
                                                "type": "reference",
                                                "typeArguments": [
                                                  {
                                                    "type": "reference",
                                                    "id": 488,
                                                    "name": "NewResult"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 634,
                                                        "name": "Result"
                                                      }
                                                    ],
                                                    "qualifiedName": "NonNullable",
                                                    "package": "typescript",
                                                    "name": "NonNullable"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "id": 493,
                                                    "name": "Options"
                                                  }
                                                ],
                                                "name": "MergePartialResult"
                                              }
                                            ]
                                          },
                                          "falseType": {
                                            "type": "reference",
                                            "typeArguments": [
                                              {
                                                "type": "reference",
                                                "id": 488,
                                                "name": "NewResult"
                                              },
                                              {
                                                "type": "reference",
                                                "id": 634,
                                                "name": "Result"
                                              },
                                              {
                                                "type": "reference",
                                                "id": 493,
                                                "name": "Options"
                                              }
                                            ],
                                            "name": "MergePartialResult"
                                          }
                                        },
                                        "falseType": {
                                          "type": "reference",
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            },
                                            {
                                              "type": "reference",
                                              "id": 488,
                                              "name": "NewResult"
                                            }
                                          ],
                                          "name": "CheckMatchingArrayTypes"
                                        }
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 668,
                              "name": "returns",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 227,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 669,
                                  "name": "returns",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Override the type of the returned `data`.",
                                    "tags": [
                                      {
                                        "tag": "deprecated",
                                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n"
                                      }
                                    ]
                                  },
                                  "typeParameter": [
                                    {
                                      "id": 670,
                                      "name": "NewResult",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "comment": {
                                        "shortText": "The new result type to override with"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 670,
                                            "name": "NewResult"
                                          }
                                        ],
                                        "name": "CheckMatchingArrayTypes"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 652,
                              "name": "setHeader",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 64,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 653,
                                  "name": "setHeader",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Set an HTTP header for the request."
                                  },
                                  "parameters": [
                                    {
                                      "id": 654,
                                      "name": "name",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 655,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 631,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 635,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  }
                                }
                              ]
                            },
                            {
                              "id": 656,
                              "name": "then",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 70,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 657,
                                  "name": "then",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "typeParameter": [
                                    {
                                      "id": 658,
                                      "name": "TResult1",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "default": {
                                        "type": "conditional",
                                        "checkType": {
                                          "type": "reference",
                                          "id": 635,
                                          "name": "ThrowOnError"
                                        },
                                        "extendsType": {
                                          "type": "literal",
                                          "value": true
                                        },
                                        "trueType": {
                                          "type": "reference",
                                          "id": 701,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestResponseSuccess"
                                        },
                                        "falseType": {
                                          "type": "reference",
                                          "id": 708,
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "id": 634,
                                              "name": "Result"
                                            }
                                          ],
                                          "name": "PostgrestSingleResponse"
                                        }
                                      }
                                    },
                                    {
                                      "id": 659,
                                      "name": "TResult2",
                                      "kind": 131072,
                                      "kindString": "Type parameter",
                                      "flags": {},
                                      "default": {
                                        "type": "intrinsic",
                                        "name": "never"
                                      }
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 660,
                                      "name": "onfulfilled",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 661,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "signatures": [
                                                {
                                                  "id": 662,
                                                  "name": "__type",
                                                  "kind": 4096,
                                                  "kindString": "Call signature",
                                                  "flags": {},
                                                  "parameters": [
                                                    {
                                                      "id": 663,
                                                      "name": "value",
                                                      "kind": 32768,
                                                      "kindString": "Parameter",
                                                      "flags": {},
                                                      "type": {
                                                        "type": "conditional",
                                                        "checkType": {
                                                          "type": "reference",
                                                          "id": 635,
                                                          "name": "ThrowOnError"
                                                        },
                                                        "extendsType": {
                                                          "type": "literal",
                                                          "value": true
                                                        },
                                                        "trueType": {
                                                          "type": "reference",
                                                          "id": 701,
                                                          "typeArguments": [
                                                            {
                                                              "type": "reference",
                                                              "id": 634,
                                                              "name": "Result"
                                                            }
                                                          ],
                                                          "name": "PostgrestResponseSuccess"
                                                        },
                                                        "falseType": {
                                                          "type": "reference",
                                                          "id": 708,
                                                          "typeArguments": [
                                                            {
                                                              "type": "reference",
                                                              "id": 634,
                                                              "name": "Result"
                                                            }
                                                          ],
                                                          "name": "PostgrestSingleResponse"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "reference",
                                                        "id": 476,
                                                        "name": "TResult1"
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "typeArguments": [
                                                          {
                                                            "type": "reference",
                                                            "id": 476,
                                                            "name": "TResult1"
                                                          }
                                                        ],
                                                        "qualifiedName": "PromiseLike",
                                                        "package": "typescript",
                                                        "name": "PromiseLike"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 664,
                                      "name": "onrejected",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "reflection",
                                            "declaration": {
                                              "id": 665,
                                              "name": "__type",
                                              "kind": 65536,
                                              "kindString": "Type literal",
                                              "flags": {},
                                              "signatures": [
                                                {
                                                  "id": 666,
                                                  "name": "__type",
                                                  "kind": 4096,
                                                  "kindString": "Call signature",
                                                  "flags": {},
                                                  "parameters": [
                                                    {
                                                      "id": 667,
                                                      "name": "reason",
                                                      "kind": 32768,
                                                      "kindString": "Parameter",
                                                      "flags": {},
                                                      "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                      }
                                                    }
                                                  ],
                                                  "type": {
                                                    "type": "union",
                                                    "types": [
                                                      {
                                                        "type": "reference",
                                                        "id": 477,
                                                        "name": "TResult2"
                                                      },
                                                      {
                                                        "type": "reference",
                                                        "typeArguments": [
                                                          {
                                                            "type": "reference",
                                                            "id": 477,
                                                            "name": "TResult2"
                                                          }
                                                        ],
                                                        "qualifiedName": "PromiseLike",
                                                        "package": "typescript",
                                                        "name": "PromiseLike"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "id": 476,
                                            "name": "TResult1"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 477,
                                            "name": "TResult2"
                                          }
                                        ]
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  },
                                  "implementationOf": {
                                    "type": "reference",
                                    "name": "PromiseLike.then"
                                  }
                                }
                              ],
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            },
                            {
                              "id": 650,
                              "name": "throwOnError",
                              "kind": 2048,
                              "kindString": "Method",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 56,
                                  "character": 2
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 651,
                                  "name": "throwOnError",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                    "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                                  },
                                  "type": {
                                    "type": "intersection",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "reference",
                                            "id": 635,
                                            "name": "ThrowOnError"
                                          }
                                        ],
                                        "name": "default"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 631,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 634,
                                            "name": "Result"
                                          },
                                          {
                                            "type": "literal",
                                            "value": true
                                          }
                                        ],
                                        "name": "default"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ],
                          "groups": [
                            {
                              "title": "Constructors",
                              "kind": 512,
                              "children": [632]
                            },
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [641, 644, 639, 649, 637, 640, 642, 643, 638]
                            },
                            {
                              "title": "Methods",
                              "kind": 2048,
                              "children": [671, 668, 652, 656, 650]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 30
                            }
                          ],
                          "typeParameter": [
                            {
                              "id": 679,
                              "name": "Result",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {}
                            },
                            {
                              "id": 680,
                              "name": "ThrowOnError",
                              "kind": 131072,
                              "kindString": "Type parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "default": {
                                "type": "literal",
                                "value": false
                              }
                            }
                          ],
                          "extendedBy": [
                            {
                              "type": "reference",
                              "id": 499,
                              "name": "PostgrestTransformBuilder"
                            }
                          ],
                          "implementedTypes": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "conditional",
                                  "checkType": {
                                    "type": "reference",
                                    "id": 635,
                                    "name": "ThrowOnError"
                                  },
                                  "extendsType": {
                                    "type": "literal",
                                    "value": true
                                  },
                                  "trueType": {
                                    "type": "reference",
                                    "id": 701,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestResponseSuccess"
                                  },
                                  "falseType": {
                                    "type": "reference",
                                    "id": 708,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 634,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "qualifiedName": "PromiseLike",
                              "package": "typescript",
                              "name": "PromiseLike"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 633,
                    "name": "default.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 632,
                "name": "default.constructor"
              }
            },
            {
              "id": 591,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 25,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 641,
                "name": "default.body"
              }
            },
            {
              "id": 594,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 28,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 595,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 596,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 597,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 598,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 644,
                "name": "default.fetch"
              }
            },
            {
              "id": 589,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 23,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 639,
                "name": "default.headers"
              }
            },
            {
              "id": 599,
              "name": "isMaybeSingle",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 29,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 649,
                "name": "default.isMaybeSingle"
              }
            },
            {
              "id": 587,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 21,
                  "character": 12
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "GET"
                  },
                  {
                    "type": "literal",
                    "value": "HEAD"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  },
                  {
                    "type": "literal",
                    "value": "PATCH"
                  },
                  {
                    "type": "literal",
                    "value": "DELETE"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 637,
                "name": "default.method"
              }
            },
            {
              "id": 590,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 24,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 640,
                "name": "default.schema"
              }
            },
            {
              "id": 592,
              "name": "shouldThrowOnError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 26,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false",
              "inheritedFrom": {
                "type": "reference",
                "id": 642,
                "name": "default.shouldThrowOnError"
              }
            },
            {
              "id": 593,
              "name": "signal",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 27,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "AbortSignal",
                "package": "typescript",
                "name": "AbortSignal"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 643,
                "name": "default.signal"
              }
            },
            {
              "id": 588,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 22,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "qualifiedName": "URL",
                "package": "typescript",
                "name": "URL"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 638,
                "name": "default.url"
              }
            },
            {
              "id": 559,
              "name": "abortSignal",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 180,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 560,
                  "name": "abortSignal",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set the AbortSignal for the fetch request."
                  },
                  "parameters": [
                    {
                      "id": 561,
                      "name": "signal",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The AbortSignal to use for the fetch request\n"
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "AbortSignal",
                        "package": "typescript",
                        "name": "AbortSignal"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 568,
              "name": "csv",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 221,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 569,
                  "name": "csv",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a string in CSV format."
                  },
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 572,
              "name": "explain",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 259,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 573,
                  "name": "explain",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as the EXPLAIN plan for the query.",
                    "text": "You need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method.\n"
                  },
                  "parameters": [
                    {
                      "id": 574,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters\n"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 575,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 576,
                              "name": "analyze",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 267,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 579,
                              "name": "buffers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on buffer usage\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 270,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 581,
                              "name": "format",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 272,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "text"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "json"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 578,
                              "name": "settings",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 269,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 577,
                              "name": "verbose",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 268,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 580,
                              "name": "wal",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, include information on WAL record generation\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 271,
                                  "character": 4
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [576, 579, 581, 578, 577, 580]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "qualifiedName": "Record",
                              "package": "typescript",
                              "name": "Record"
                            }
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ],
                        "name": "default"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 570,
              "name": "geojson",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 229,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 571,
                  "name": "geojson",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
                  },
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 544,
              "name": "limit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 131,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 545,
                  "name": "limit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limit the query result by `count`."
                  },
                  "parameters": [
                    {
                      "id": 546,
                      "name": "count",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The maximum number of rows to return"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 547,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 548,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 549,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 136,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 550,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 136,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [549, 550]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 565,
              "name": "maybeSingle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 204,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 566,
                  "name": "maybeSingle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a single object instead of an array of objects.",
                    "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 567,
                      "name": "ResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 504,
                          "name": "Result"
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "ResultOne"
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "ResultOne"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "id": 435,
                            "name": "ResultOne"
                          }
                        ]
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 513,
              "name": "order",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 55,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 514,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 515,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 516,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "reference",
                        "id": 383,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 517,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 518,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 519,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the result will be in ascending order"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 520,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 521,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to order a referenced table by\nits columns"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 57,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [519, 520, 521]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 522,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
                  },
                  "parameters": [
                    {
                      "id": 523,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 524,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 525,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 526,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, the result will be in ascending order"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 527,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 528,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to order a referenced table by\nits columns"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 61,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [526, 527, 528]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 529,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 530,
                      "name": "ColumnName",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 531,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "reference",
                        "id": 398,
                        "name": "ColumnName",
                        "dereferenced": {}
                      }
                    },
                    {
                      "id": 532,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 533,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 534,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 536,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            },
                            {
                              "id": 535,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 68,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [534, 536, 535]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                },
                {
                  "id": 537,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Order the query result by `column`.",
                    "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 538,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The column to order by"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 539,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 540,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 541,
                              "name": "ascending",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 543,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 59
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 542,
                              "name": "nullsFirst",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 75,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [541, 543, 542]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 618,
              "name": "overrideTypes",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 257,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 619,
                  "name": "overrideTypes",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data` field in the response.",
                    "returns": "A PostgrestBuilder instance with the new type\n",
                    "tags": [
                      {
                        "tag": "example",
                        "text": "\n```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 620,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new type to cast the response data to"
                      }
                    },
                    {
                      "id": 625,
                      "name": "Options",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Optional type configuration (defaults to { merge: true })"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 621,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 622,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 22
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [622]
                            }
                          ]
                        }
                      },
                      "default": {
                        "type": "reflection",
                        "declaration": {
                          "id": 623,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 624,
                              "name": "merge",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/PostgrestBuilder.ts",
                                  "line": 259,
                                  "character": 44
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": true
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [624]
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 504,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            },
                            {
                              "type": "literal",
                              "value": false
                            },
                            {
                              "type": "literal",
                              "value": false
                            }
                          ],
                          "name": "IsValidResultOverride"
                        },
                        "extendsType": {
                          "type": "literal",
                          "value": true
                        },
                        "trueType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 504,
                                "name": "Result"
                              }
                            ],
                            "name": "ContainsNull"
                          },
                          "extendsType": {
                            "type": "literal",
                            "value": true
                          },
                          "trueType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 488,
                                    "name": "NewResult"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 504,
                                        "name": "Result"
                                      }
                                    ],
                                    "qualifiedName": "NonNullable",
                                    "package": "typescript",
                                    "name": "NonNullable"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 493,
                                    "name": "Options"
                                  }
                                ],
                                "name": "MergePartialResult"
                              }
                            ]
                          },
                          "falseType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 488,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "id": 504,
                                "name": "Result"
                              },
                              {
                                "type": "reference",
                                "id": 493,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        },
                        "falseType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 504,
                              "name": "Result"
                            },
                            {
                              "type": "reference",
                              "id": 488,
                              "name": "NewResult"
                            }
                          ],
                          "name": "CheckMatchingArrayTypes"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 672,
                    "name": "default.overrideTypes"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 671,
                "name": "default.overrideTypes"
              }
            },
            {
              "id": 551,
              "name": "range",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 158,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 552,
                  "name": "range",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limit the query result by starting at an offset `from` and ending at the offset `to`.\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\nand fourth rows of the query."
                  },
                  "parameters": [
                    {
                      "id": 553,
                      "name": "from",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The starting index from which to limit the result"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 554,
                      "name": "to",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The last index to which to limit the result"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 555,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Named parameters"
                      },
                      "originalName": "__namedParameters",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 556,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 557,
                              "name": "foreignTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 164,
                                  "character": 9
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 558,
                              "name": "referencedTable",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                              },
                              "sources": [
                                {
                                  "fileName": "src/PostgrestTransformBuilder.ts",
                                  "line": 164,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [557, 558]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 584,
              "name": "returns",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 312,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 585,
                  "name": "returns",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Override the type of the returned `data`.",
                    "tags": [
                      {
                        "tag": "deprecated",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n"
                      }
                    ]
                  },
                  "typeParameter": [
                    {
                      "id": 586,
                      "name": "NewResult",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The new result type to override with"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 504,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 454,
                            "name": "NewResult"
                          }
                        ],
                        "name": "CheckMatchingArrayTypes"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 669,
                    "name": "default.returns"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 668,
                "name": "default.returns"
              }
            },
            {
              "id": 582,
              "name": "rollback",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 297,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 583,
                  "name": "rollback",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Rollback the query.",
                    "text": "`data` will still be returned, but the query is not committed.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 508,
              "name": "select",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 21,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 509,
                  "name": "select",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Perform a SELECT on the query result.",
                    "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 510,
                      "name": "Query",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "default": {
                        "type": "literal",
                        "value": "*"
                      }
                    },
                    {
                      "id": 511,
                      "name": "NewResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 712,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 502,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 503,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 505,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 506,
                            "name": "Relationships"
                          },
                          {
                            "type": "reference",
                            "id": 378,
                            "name": "Query"
                          }
                        ],
                        "name": "GetResult"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 512,
                      "name": "columns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "shortText": "The columns to retrieve, separated by commas\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 378,
                        "name": "Query",
                        "dereferenced": {}
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "id": 379,
                          "name": "NewResultOne"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 602,
              "name": "setHeader",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 64,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 603,
                  "name": "setHeader",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Set an HTTP header for the request."
                  },
                  "parameters": [
                    {
                      "id": 604,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 605,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 499,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 502,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 503,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 504,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 653,
                    "name": "default.setHeader"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 652,
                "name": "default.setHeader"
              }
            },
            {
              "id": 562,
              "name": "single",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestTransformBuilder.ts",
                  "line": 191,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 563,
                  "name": "single",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return `data` as a single object instead of an array of objects.",
                    "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
                  },
                  "typeParameter": [
                    {
                      "id": 564,
                      "name": "ResultOne",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 504,
                          "name": "Result"
                        },
                        "extendsType": {
                          "type": "array",
                          "elementType": {
                            "type": "reference",
                            "name": "ResultOne"
                          }
                        },
                        "trueType": {
                          "type": "reference",
                          "name": "ResultOne"
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 631,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 432,
                        "name": "ResultOne"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                }
              ]
            },
            {
              "id": 606,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 70,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 607,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 608,
                      "name": "TResult1",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "id": 708,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 504,
                            "name": "Result"
                          }
                        ],
                        "name": "PostgrestSingleResponse"
                      }
                    },
                    {
                      "id": 609,
                      "name": "TResult2",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 610,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 611,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 612,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 613,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "id": 708,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 504,
                                            "name": "Result"
                                          }
                                        ],
                                        "name": "PostgrestSingleResponse"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 476,
                                            "name": "TResult1"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 614,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 615,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 616,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 617,
                                      "name": "reason",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 477,
                                            "name": "TResult2"
                                          }
                                        ],
                                        "qualifiedName": "PromiseLike",
                                        "package": "typescript",
                                        "name": "PromiseLike"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 476,
                            "name": "TResult1"
                          },
                          {
                            "type": "reference",
                            "id": 477,
                            "name": "TResult2"
                          }
                        ]
                      }
                    ],
                    "qualifiedName": "PromiseLike",
                    "package": "typescript",
                    "name": "PromiseLike"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 657,
                    "name": "default.then"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 656,
                "name": "default.then"
              }
            },
            {
              "id": 600,
              "name": "throwOnError",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/PostgrestBuilder.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 601,
                  "name": "throwOnError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                    "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "id": 499,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 502,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 503,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 504,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 505,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 506,
                            "name": "Relationships"
                          }
                        ],
                        "name": "default"
                      },
                      {
                        "type": "reference",
                        "id": 631,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 504,
                            "name": "Result"
                          },
                          {
                            "type": "literal",
                            "value": true
                          }
                        ],
                        "name": "default"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 651,
                    "name": "default.throwOnError"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 650,
                "name": "default.throwOnError"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [500]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [591, 594, 589, 599, 587, 590, 592, 593, 588]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                559, 568, 572, 570, 544, 565, 513, 618, 551, 584, 582, 508, 602, 562, 606, 600
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 5,
              "character": 21
            }
          ],
          "typeParameter": [
            {
              "id": 626,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "GenericSchema"
              }
            },
            {
              "id": 627,
              "name": "Row",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 628,
              "name": "Result",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 629,
              "name": "RelationName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 630,
              "name": "Relationships",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 631,
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 504,
                  "name": "Result"
                }
              ],
              "name": "default"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 151,
              "name": "PostgrestFilterBuilder"
            }
          ]
        },
        {
          "id": 695,
          "name": "PostgrestResponseFailure",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 698,
              "name": "count",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 24,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": null
              }
            },
            {
              "id": 697,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 23,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": null
              }
            },
            {
              "id": 696,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 22,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 681,
                "name": "default",
                "dereferenced": {
                  "id": 681,
                  "name": "PostgrestError",
                  "kind": 128,
                  "kindString": "Class",
                  "flags": {},
                  "comment": {
                    "shortText": "Error format",
                    "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
                  },
                  "children": [
                    {
                      "id": 682,
                      "name": "constructor",
                      "kind": 512,
                      "kindString": "Constructor",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/PostgrestError.ts",
                          "line": 11,
                          "character": 2
                        }
                      ],
                      "signatures": [
                        {
                          "id": 683,
                          "name": "new PostgrestError",
                          "kind": 16384,
                          "kindString": "Constructor signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 684,
                              "name": "context",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 685,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 689,
                                      "name": "code",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/PostgrestError.ts",
                                          "line": 11,
                                          "character": 73
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 687,
                                      "name": "details",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/PostgrestError.ts",
                                          "line": 11,
                                          "character": 42
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 688,
                                      "name": "hint",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/PostgrestError.ts",
                                          "line": 11,
                                          "character": 59
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    },
                                    {
                                      "id": 686,
                                      "name": "message",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/PostgrestError.ts",
                                          "line": 11,
                                          "character": 25
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [689, 687, 688, 686]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 681,
                            "name": "default"
                          },
                          "overwrites": {
                            "type": "reference",
                            "name": "Error.constructor"
                          }
                        }
                      ],
                      "overwrites": {
                        "type": "reference",
                        "name": "Error.constructor"
                      }
                    },
                    {
                      "id": 692,
                      "name": "code",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/PostgrestError.ts",
                          "line": 9,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 690,
                      "name": "details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/PostgrestError.ts",
                          "line": 7,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 691,
                      "name": "hint",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/PostgrestError.ts",
                          "line": 8,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Constructors",
                      "kind": 512,
                      "children": [682]
                    },
                    {
                      "title": "Properties",
                      "kind": 1024,
                      "children": [692, 690, 691]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 6,
                      "character": 21
                    }
                  ],
                  "extendedTypes": [
                    {
                      "type": "reference",
                      "qualifiedName": "Error",
                      "package": "typescript",
                      "name": "Error"
                    }
                  ]
                }
              }
            },
            {
              "id": 699,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 13,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestResponseBase.status"
              }
            },
            {
              "id": 700,
              "name": "statusText",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestResponseBase.statusText"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [698, 697, 696, 699, 700]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 21,
              "character": 17
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "PostgrestResponseBase"
            }
          ]
        },
        {
          "id": 701,
          "name": "PostgrestResponseSuccess",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 704,
              "name": "count",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 19,
                  "character": 2
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 703,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "type": {
                "type": "reference",
                "id": 707,
                "name": "T",
                "dereferenced": {}
              }
            },
            {
              "id": 702,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 17,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": null
              }
            },
            {
              "id": 705,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 13,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestResponseBase.status"
              }
            },
            {
              "id": 706,
              "name": "statusText",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 14,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PostgrestResponseBase.statusText"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [704, 703, 702, 705, 706]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 16,
              "character": 17
            }
          ],
          "typeParameter": [
            {
              "id": 707,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "PostgrestResponseBase"
            }
          ]
        },
        {
          "id": 710,
          "name": "PostgrestMaybeSingleResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 31,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 711,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reference",
            "id": 708,
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 711,
                    "name": "T"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            ],
            "name": "PostgrestSingleResponse"
          }
        },
        {
          "id": 693,
          "name": "PostgrestResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 32,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 694,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "reference",
            "id": 708,
            "typeArguments": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 694,
                  "name": "T"
                }
              }
            ],
            "name": "PostgrestSingleResponse"
          }
        },
        {
          "id": 708,
          "name": "PostgrestSingleResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 30,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 709,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "id": 701,
                "name": "PostgrestResponseSuccess",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "children": [
                  {
                    "id": 704,
                    "name": "count",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 19,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        }
                      ]
                    }
                  },
                  {
                    "id": 703,
                    "name": "data",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 18,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 707,
                      "name": "T",
                      "dereferenced": {}
                    }
                  },
                  {
                    "id": 702,
                    "name": "error",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 17,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": null
                    }
                  },
                  {
                    "id": 705,
                    "name": "status",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 13,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "PostgrestResponseBase.status"
                    }
                  },
                  {
                    "id": 706,
                    "name": "statusText",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 14,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "PostgrestResponseBase.statusText"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [704, 703, 702, 705, 706]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 16,
                    "character": 17
                  }
                ],
                "typeParameter": [
                  {
                    "id": 707,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "extendedTypes": [
                  {
                    "type": "reference",
                    "name": "PostgrestResponseBase"
                  }
                ]
              },
              {
                "id": 695,
                "name": "PostgrestResponseFailure",
                "kind": 256,
                "kindString": "Interface",
                "flags": {},
                "children": [
                  {
                    "id": 698,
                    "name": "count",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 24,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": null
                    }
                  },
                  {
                    "id": 697,
                    "name": "data",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 23,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": null
                    }
                  },
                  {
                    "id": 696,
                    "name": "error",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 22,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 681,
                      "name": "default",
                      "dereferenced": {
                        "id": 681,
                        "name": "PostgrestError",
                        "kind": 128,
                        "kindString": "Class",
                        "flags": {},
                        "comment": {
                          "shortText": "Error format",
                          "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
                        },
                        "children": [
                          {
                            "id": 682,
                            "name": "constructor",
                            "kind": 512,
                            "kindString": "Constructor",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestError.ts",
                                "line": 11,
                                "character": 2
                              }
                            ],
                            "signatures": [
                              {
                                "id": 683,
                                "name": "new PostgrestError",
                                "kind": 16384,
                                "kindString": "Constructor signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 684,
                                    "name": "context",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "reflection",
                                      "declaration": {
                                        "id": 685,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {},
                                        "children": [
                                          {
                                            "id": 689,
                                            "name": "code",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/PostgrestError.ts",
                                                "line": 11,
                                                "character": 73
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 687,
                                            "name": "details",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/PostgrestError.ts",
                                                "line": 11,
                                                "character": 42
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 688,
                                            "name": "hint",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/PostgrestError.ts",
                                                "line": 11,
                                                "character": 59
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          },
                                          {
                                            "id": 686,
                                            "name": "message",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {},
                                            "sources": [
                                              {
                                                "fileName": "src/PostgrestError.ts",
                                                "line": 11,
                                                "character": 25
                                              }
                                            ],
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "groups": [
                                          {
                                            "title": "Properties",
                                            "kind": 1024,
                                            "children": [689, 687, 688, 686]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "id": 681,
                                  "name": "default"
                                },
                                "overwrites": {
                                  "type": "reference",
                                  "name": "Error.constructor"
                                }
                              }
                            ],
                            "overwrites": {
                              "type": "reference",
                              "name": "Error.constructor"
                            }
                          },
                          {
                            "id": 692,
                            "name": "code",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestError.ts",
                                "line": 9,
                                "character": 2
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 690,
                            "name": "details",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestError.ts",
                                "line": 7,
                                "character": 2
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          },
                          {
                            "id": 691,
                            "name": "hint",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestError.ts",
                                "line": 8,
                                "character": 2
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Constructors",
                            "kind": 512,
                            "children": [682]
                          },
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [692, 690, 691]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 6,
                            "character": 21
                          }
                        ],
                        "extendedTypes": [
                          {
                            "type": "reference",
                            "qualifiedName": "Error",
                            "package": "typescript",
                            "name": "Error"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "id": 699,
                    "name": "status",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 13,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "PostgrestResponseBase.status"
                    }
                  },
                  {
                    "id": 700,
                    "name": "statusText",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/types.ts",
                        "line": 14,
                        "character": 2
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "PostgrestResponseBase.statusText"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [698, 697, 696, 699, 700]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 21,
                    "character": 17
                  }
                ],
                "extendedTypes": [
                  {
                    "type": "reference",
                    "name": "PostgrestResponseBase"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 712,
          "name": "UnstableGetResult",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "comment": {
            "shortText": "Main entry point for constructing the result type of a PostgREST query."
          },
          "sources": [
            {
              "fileName": "src/select-query-parser/result.ts",
              "line": 33,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 713,
              "name": "Schema",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "Database schema."
              },
              "type": {
                "type": "reference",
                "name": "GenericSchema"
              }
            },
            {
              "id": 714,
              "name": "Row",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "The type of a row in the current table."
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 715,
              "name": "RelationName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "The name of the current table or view."
              }
            },
            {
              "id": 716,
              "name": "Relationships",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "Relationships of the current table."
              }
            },
            {
              "id": 717,
              "name": "Query",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "comment": {
                "shortText": "The select query string literal to parse.\n"
              },
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 713,
                  "name": "Schema"
                }
              ],
              "name": "IsAny"
            },
            "extendsType": {
              "type": "literal",
              "value": true
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 717,
                    "name": "Query"
                  }
                ],
                "name": "ParseQuery"
              },
              "extendsType": {
                "type": "inferred",
                "name": "ParsedQuery"
              },
              "trueType": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "name": "ParsedQuery"
                },
                "extendsType": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "Ast.Node"
                  }
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 715,
                    "name": "RelationName"
                  },
                  "extendsType": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "trueType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "ParsedQuery"
                      }
                    ],
                    "name": "ProcessNodesWithoutSchema"
                  },
                  "falseType": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "name": "ParsedQuery"
                }
              },
              "falseType": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            "falseType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "id": 716,
                "name": "Relationships"
              },
              "extendsType": {
                "type": "literal",
                "value": null
              },
              "trueType": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 717,
                      "name": "Query"
                    }
                  ],
                  "name": "ParseQuery"
                },
                "extendsType": {
                  "type": "inferred",
                  "name": "ParsedQuery"
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "name": "ParsedQuery"
                  },
                  "extendsType": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "Ast.Node"
                    }
                  },
                  "trueType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "ParsedQuery"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "id": 715,
                          "name": "RelationName"
                        },
                        "extendsType": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "trueType": {
                          "type": "reference",
                          "id": 715,
                          "name": "RelationName"
                        },
                        "falseType": {
                          "type": "literal",
                          "value": "rpc_call"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 714,
                        "name": "Row"
                      }
                    ],
                    "name": "RPCCallNodes"
                  },
                  "falseType": {
                    "type": "reference",
                    "name": "ParsedQuery"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "id": 714,
                  "name": "Row"
                }
              },
              "falseType": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 717,
                      "name": "Query"
                    }
                  ],
                  "name": "ParseQuery"
                },
                "extendsType": {
                  "type": "inferred",
                  "name": "ParsedQuery"
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "name": "ParsedQuery"
                  },
                  "extendsType": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "Ast.Node"
                    }
                  },
                  "trueType": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 715,
                      "name": "RelationName"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "id": 716,
                        "name": "Relationships"
                      },
                      "extendsType": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "GenericRelationship"
                        }
                      },
                      "trueType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 713,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 714,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 715,
                            "name": "RelationName"
                          },
                          {
                            "type": "reference",
                            "id": 716,
                            "name": "Relationships"
                          },
                          {
                            "type": "reference",
                            "name": "ParsedQuery"
                          }
                        ],
                        "name": "ProcessNodes"
                      },
                      "falseType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "literal",
                            "value": "Invalid Relationships cannot infer result type"
                          }
                        ],
                        "name": "SelectQueryError"
                      }
                    },
                    "falseType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "literal",
                          "value": "Invalid RelationName cannot infer result type"
                        }
                      ],
                      "name": "SelectQueryError"
                    }
                  },
                  "falseType": {
                    "type": "reference",
                    "name": "ParsedQuery"
                  }
                },
                "falseType": {
                  "type": "intrinsic",
                  "name": "never"
                }
              }
            }
          }
        },
        {
          "id": 1,
          "name": "default",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 17,
              "character": 0
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 7,
                  "name": "PostgrestBuilder",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 631,
                      "name": "default"
                    }
                  }
                },
                {
                  "id": 3,
                  "name": "PostgrestClient",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 9,
                      "name": "default"
                    }
                  }
                },
                {
                  "id": 8,
                  "name": "PostgrestError",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 681,
                      "name": "default"
                    }
                  }
                },
                {
                  "id": 5,
                  "name": "PostgrestFilterBuilder",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 151,
                      "name": "default"
                    }
                  }
                },
                {
                  "id": 4,
                  "name": "PostgrestQueryBuilder",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 64,
                      "name": "default"
                    }
                  }
                },
                {
                  "id": 6,
                  "name": "PostgrestTransformBuilder",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "type": {
                    "type": "query",
                    "queryType": {
                      "type": "reference",
                      "id": 499,
                      "name": "default"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [7, 3, 8, 5, 4, 6]
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [631, 9, 681, 151, 64, 499]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [695, 701]
        },
        {
          "title": "Type Aliases",
          "kind": 4194304,
          "children": [710, 693, 708, 712]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [1]
        }
      ],
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 2,
          "character": 0
        }
      ]
    },
    {
      "id": 0,
      "name": "@supabase/realtime-js",
      "variant": "project",
      "kind": 1,
      "flags": {},
      "children": [
        {
          "id": 618,
          "name": "REALTIME_LISTEN_TYPES",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "children": [
            {
              "id": 619,
              "name": "BROADCAST",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 98,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L98"
                }
              ],
              "type": {
                "type": "literal",
                "value": "broadcast"
              }
            },
            {
              "id": 621,
              "name": "POSTGRES_CHANGES",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 100,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L100"
                }
              ],
              "type": {
                "type": "literal",
                "value": "postgres_changes"
              }
            },
            {
              "id": 620,
              "name": "PRESENCE",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 99,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L99"
                }
              ],
              "type": {
                "type": "literal",
                "value": "presence"
              }
            },
            {
              "id": 622,
              "name": "SYSTEM",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 101,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L101"
                }
              ],
              "type": {
                "type": "literal",
                "value": "system"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [619, 621, 620, 622]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 97,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L97"
            }
          ]
        },
        {
          "id": 623,
          "name": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "children": [
            {
              "id": 624,
              "name": "ALL",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 91,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L91"
                }
              ],
              "type": {
                "type": "literal",
                "value": "*"
              }
            },
            {
              "id": 627,
              "name": "DELETE",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 94,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L94"
                }
              ],
              "type": {
                "type": "literal",
                "value": "DELETE"
              }
            },
            {
              "id": 625,
              "name": "INSERT",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 92,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L92"
                }
              ],
              "type": {
                "type": "literal",
                "value": "INSERT"
              }
            },
            {
              "id": 626,
              "name": "UPDATE",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 93,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L93"
                }
              ],
              "type": {
                "type": "literal",
                "value": "UPDATE"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [624, 627, 625, 626]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 90,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L90"
            }
          ]
        },
        {
          "id": 628,
          "name": "REALTIME_PRESENCE_LISTEN_EVENTS",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "children": [
            {
              "id": 630,
              "name": "JOIN",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L37"
                }
              ],
              "type": {
                "type": "literal",
                "value": "join"
              }
            },
            {
              "id": 631,
              "name": "LEAVE",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 38,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L38"
                }
              ],
              "type": {
                "type": "literal",
                "value": "leave"
              }
            },
            {
              "id": 629,
              "name": "SYNC",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 36,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L36"
                }
              ],
              "type": {
                "type": "literal",
                "value": "sync"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [630, 631, 629]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimePresence.ts",
              "line": 35,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L35"
            }
          ]
        },
        {
          "id": 632,
          "name": "REALTIME_SUBSCRIBE_STATES",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "children": [
            {
              "id": 636,
              "name": "CHANNEL_ERROR",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 108,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L108"
                }
              ],
              "type": {
                "type": "literal",
                "value": "CHANNEL_ERROR"
              }
            },
            {
              "id": 635,
              "name": "CLOSED",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 107,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L107"
                }
              ],
              "type": {
                "type": "literal",
                "value": "CLOSED"
              }
            },
            {
              "id": 633,
              "name": "SUBSCRIBED",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 105,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L105"
                }
              ],
              "type": {
                "type": "literal",
                "value": "SUBSCRIBED"
              }
            },
            {
              "id": 634,
              "name": "TIMED_OUT",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 106,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L106"
                }
              ],
              "type": {
                "type": "literal",
                "value": "TIMED_OUT"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [636, 635, 633, 634]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 104,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L104"
            }
          ]
        },
        {
          "id": 65,
          "name": "RealtimeChannel",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A channel is the basic building block of Realtime\nand narrows the scope of data flow to subscribed clients.\nYou can think of a channel as a chatroom where participants are able to see who's online\nand send and receive messages."
              }
            ]
          },
          "children": [
            {
              "id": 76,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 147,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L147"
                }
              ],
              "signatures": [
                {
                  "id": 77,
                  "name": "RealtimeChannel",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 147,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L147"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 78,
                      "name": "topic",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Topic name can be any string."
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 79,
                      "name": "params",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 359,
                        "name": "RealtimeChannelOptions",
                        "package": "@supabase/realtime-js"
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 80,
                      "name": "socket",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 372,
                        "name": "RealtimeClient",
                        "package": "@supabase/realtime-js",
                        "qualifiedName": "default"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 81,
              "name": "bindings",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 128,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L128"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 82,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 128,
                      "character": 12,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L128"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 83,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 129,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L129"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 84,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reflection",
                          "declaration": {
                            "id": 85,
                            "name": "__type",
                            "variant": "declaration",
                            "kind": 65536,
                            "flags": {},
                            "children": [
                              {
                                "id": 91,
                                "name": "callback",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/RealtimeChannel.ts",
                                    "line": 132,
                                    "character": 6,
                                    "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L132"
                                  }
                                ],
                                "type": {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                                    "qualifiedName": "Function"
                                  },
                                  "name": "Function",
                                  "package": "typescript"
                                }
                              },
                              {
                                "id": 87,
                                "name": "filter",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/RealtimeChannel.ts",
                                    "line": 131,
                                    "character": 6,
                                    "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L131"
                                  }
                                ],
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 88,
                                    "name": "__type",
                                    "variant": "declaration",
                                    "kind": 65536,
                                    "flags": {},
                                    "sources": [
                                      {
                                        "fileName": "src/RealtimeChannel.ts",
                                        "line": 131,
                                        "character": 14,
                                        "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L131"
                                      }
                                    ],
                                    "indexSignatures": [
                                      {
                                        "id": 89,
                                        "name": "__index",
                                        "variant": "signature",
                                        "kind": 8192,
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/RealtimeChannel.ts",
                                            "line": 131,
                                            "character": 16,
                                            "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L131"
                                          }
                                        ],
                                        "parameters": [
                                          {
                                            "id": 90,
                                            "name": "key",
                                            "variant": "param",
                                            "kind": 32768,
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "any"
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "id": 92,
                                "name": "id",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "src/RealtimeChannel.ts",
                                    "line": 133,
                                    "character": 6,
                                    "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L133"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 86,
                                "name": "type",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "src/RealtimeChannel.ts",
                                    "line": 130,
                                    "character": 6,
                                    "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L130"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "children": [91, 87, 92, 86]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "src/RealtimeChannel.ts",
                                "line": 129,
                                "character": 19,
                                "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L129"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "defaultValue": "{}"
            },
            {
              "id": 100,
              "name": "broadcastEndpointURL",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 143,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L143"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 95,
              "name": "joinedOnce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 138,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L138"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 96,
              "name": "joinPush",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 139,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L139"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/push.ts",
                  "qualifiedName": "default"
                },
                "name": "Push",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 104,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 150,
                  "character": 11,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L150"
                }
              ],
              "type": {
                "type": "reference",
                "target": 359,
                "name": "RealtimeChannelOptions",
                "package": "@supabase/realtime-js"
              },
              "defaultValue": "..."
            },
            {
              "id": 99,
              "name": "presence",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 142,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L142"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1,
                "name": "RealtimePresence",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 102,
              "name": "private",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 145,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L145"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 98,
              "name": "pushBuffer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 141,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L141"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "src/lib/push.ts",
                    "qualifiedName": "default"
                  },
                  "name": "Push",
                  "package": "@supabase/realtime-js",
                  "qualifiedName": "default"
                }
              },
              "defaultValue": "[]"
            },
            {
              "id": 97,
              "name": "rejoinTimer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 140,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L140"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/timer.ts",
                  "qualifiedName": "default"
                },
                "name": "Timer",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 105,
              "name": "socket",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 151,
                  "character": 11,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L151"
                }
              ],
              "type": {
                "type": "reference",
                "target": 372,
                "name": "RealtimeClient",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 94,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 137,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L137"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/constants.ts",
                  "qualifiedName": "CHANNEL_STATES"
                },
                "name": "CHANNEL_STATES",
                "package": "@supabase/realtime-js"
              },
              "defaultValue": "CHANNEL_STATES.closed"
            },
            {
              "id": 101,
              "name": "subTopic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 144,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L144"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 93,
              "name": "timeout",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 136,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L136"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 103,
              "name": "topic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Topic name can be any string."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 149,
                  "character": 11,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L149"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 137,
              "name": "on",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 350,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L350"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 355,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L355"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 360,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L360"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 365,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L365"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 370,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L370"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 375,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L375"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 380,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L380"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 391,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L391"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 400,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L400"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 409,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L409"
                },
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 414,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L414"
                }
              ],
              "signatures": [
                {
                  "id": 138,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 350,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L350"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 139,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "presence"
                      }
                    },
                    {
                      "id": 140,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 141,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 142,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 352,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L352"
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "sync"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [142]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 352,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L352"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 143,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 144,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 353,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L353"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 145,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 353,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L353"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 146,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 355,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L355"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 147,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 148,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 355,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L355"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 149,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 355,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L355"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 150,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 151,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "presence"
                      }
                    },
                    {
                      "id": 152,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 153,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 154,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 357,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L357"
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "join"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [154]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 357,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L357"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 155,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 156,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 358,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L358"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 157,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 358,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L358"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 158,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 588,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 147,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePresenceJoinPayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 159,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 360,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L360"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 160,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 161,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 360,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L360"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 162,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 360,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L360"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 163,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 164,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "presence"
                      }
                    },
                    {
                      "id": 165,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 166,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 167,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 362,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L362"
                                }
                              ],
                              "type": {
                                "type": "literal",
                                "value": "leave"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [167]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 362,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L362"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 168,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 169,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 363,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L363"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 170,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 363,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L363"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 171,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 598,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 160,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePresenceLeavePayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 172,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 365,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L365"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 173,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 174,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 365,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L365"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 175,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 365,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L365"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 176,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 177,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "postgres_changes"
                      }
                    },
                    {
                      "id": 178,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 547,
                        "typeArguments": [
                          {
                            "type": "literal",
                            "value": "*"
                          }
                        ],
                        "name": "RealtimePostgresChangesFilter",
                        "package": "@supabase/realtime-js"
                      }
                    },
                    {
                      "id": 179,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 180,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 368,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L368"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 181,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 368,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L368"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 182,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 554,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 173,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePostgresChangesPayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 183,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 370,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L370"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 184,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 185,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 370,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L370"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 186,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 370,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L370"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 187,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 188,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "postgres_changes"
                      }
                    },
                    {
                      "id": 189,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 547,
                        "typeArguments": [
                          {
                            "type": "literal",
                            "value": "INSERT"
                          }
                        ],
                        "name": "RealtimePostgresChangesFilter",
                        "package": "@supabase/realtime-js"
                      }
                    },
                    {
                      "id": 190,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 191,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 373,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L373"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 192,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 373,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L373"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 193,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 559,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 184,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePostgresInsertPayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 194,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 375,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L375"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 195,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 196,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 375,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L375"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 197,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 375,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L375"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 198,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 199,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "postgres_changes"
                      }
                    },
                    {
                      "id": 200,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 547,
                        "typeArguments": [
                          {
                            "type": "literal",
                            "value": "UPDATE"
                          }
                        ],
                        "name": "RealtimePostgresChangesFilter",
                        "package": "@supabase/realtime-js"
                      }
                    },
                    {
                      "id": 201,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 202,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 378,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L378"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 203,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 378,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L378"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 204,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 569,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 195,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePostgresUpdatePayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 205,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 380,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L380"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 206,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 207,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 380,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L380"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 208,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 380,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L380"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 209,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 210,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "postgres_changes"
                      }
                    },
                    {
                      "id": 211,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 547,
                        "typeArguments": [
                          {
                            "type": "literal",
                            "value": "DELETE"
                          }
                        ],
                        "name": "RealtimePostgresChangesFilter",
                        "package": "@supabase/realtime-js"
                      }
                    },
                    {
                      "id": 212,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 213,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 383,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L383"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 214,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 383,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L383"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 215,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 578,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 206,
                                        "name": "T",
                                        "package": "@supabase/realtime-js",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "RealtimePostgresDeletePayload",
                                    "package": "@supabase/realtime-js"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 216,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The following is placed here to display on supabase.com/docs/reference/javascript/subscribe."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 391,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L391"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 217,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "One of \"broadcast\", \"presence\", or \"postgres_changes\"."
                          }
                        ]
                      },
                      "type": {
                        "type": "literal",
                        "value": "broadcast"
                      }
                    },
                    {
                      "id": 218,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Custom object specific to the Realtime feature detailing which payloads to receive."
                          }
                        ]
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 219,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 220,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 393,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L393"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [220]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 393,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L393"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 221,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Function to be invoked when event handler is triggered."
                          }
                        ]
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 222,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 394,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L394"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 223,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 394,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L394"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 224,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 225,
                                      "name": "__type",
                                      "variant": "declaration",
                                      "kind": 65536,
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 227,
                                          "name": "event",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 396,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L396"
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 226,
                                          "name": "type",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 395,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L395"
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "broadcast"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "children": [227, 226]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/RealtimeChannel.ts",
                                          "line": 394,
                                          "character": 24,
                                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L394"
                                        }
                                      ],
                                      "indexSignatures": [
                                        {
                                          "id": 228,
                                          "name": "__index",
                                          "variant": "signature",
                                          "kind": 8192,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 397,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L397"
                                            }
                                          ],
                                          "parameters": [
                                            {
                                              "id": 229,
                                              "name": "key",
                                              "variant": "param",
                                              "kind": 32768,
                                              "flags": {},
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "any"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 230,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 400,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L400"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 231,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 232,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 400,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L400"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 233,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 400,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L400"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 234,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 235,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "broadcast"
                      }
                    },
                    {
                      "id": 236,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 237,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 238,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 402,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L402"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [238]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 402,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L402"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 239,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 240,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 403,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L403"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 241,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 403,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L403"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 242,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 243,
                                      "name": "__type",
                                      "variant": "declaration",
                                      "kind": 65536,
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 245,
                                          "name": "event",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 405,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L405"
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 246,
                                          "name": "payload",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 406,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L406"
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "target": 231,
                                            "name": "T",
                                            "package": "@supabase/realtime-js",
                                            "refersToTypeParameter": true
                                          }
                                        },
                                        {
                                          "id": 244,
                                          "name": "type",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/RealtimeChannel.ts",
                                              "line": 404,
                                              "character": 6,
                                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L404"
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "broadcast"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "children": [245, 246, 244]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/RealtimeChannel.ts",
                                          "line": 403,
                                          "character": 24,
                                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L403"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                },
                {
                  "id": 247,
                  "name": "on",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an event handler that listens to changes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 409,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L409"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 248,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 249,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 409,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L409"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 250,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 409,
                                  "character": 17,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L409"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 251,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 252,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "literal",
                        "value": "system"
                      }
                    },
                    {
                      "id": 253,
                      "name": "filter",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 254,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    },
                    {
                      "id": 255,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 256,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 412,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L412"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 257,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 412,
                                  "character": 14,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L412"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 258,
                                  "name": "payload",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 114,
              "name": "presenceState",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 315,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L315"
                }
              ],
              "signatures": [
                {
                  "id": 115,
                  "name": "presenceState",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 315,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L315"
                    }
                  ],
                  "typeParameters": [
                    {
                      "id": 116,
                      "name": "T",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 117,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 316,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L316"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 118,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 316,
                                  "character": 16,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L316"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 119,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      },
                      "default": {
                        "type": "reflection",
                        "declaration": {
                          "id": 120,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 608,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 116,
                        "name": "T",
                        "package": "@supabase/realtime-js",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "RealtimePresenceState",
                    "package": "@supabase/realtime-js"
                  }
                }
              ]
            },
            {
              "id": 259,
              "name": "send",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 430,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L430"
                }
              ],
              "signatures": [
                {
                  "id": 260,
                  "name": "send",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Sends a message into the channel."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 430,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L430"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 261,
                      "name": "args",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Arguments to send to channel"
                          }
                        ]
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 262,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 264,
                              "name": "event",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "The name of the event being sent"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 433,
                                  "character": 6,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L433"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 265,
                              "name": "payload",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Payload to be sent"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 434,
                                  "character": 6,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L434"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            },
                            {
                              "id": 263,
                              "name": "type",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "The type of event to send"
                                  }
                                ]
                              },
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 432,
                                  "character": 6,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L432"
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": "presence"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "broadcast"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "postgres_changes"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [264, 265, 263]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 431,
                              "character": 10,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L431"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 266,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 435,
                                  "character": 6,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L435"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 267,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 268,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Options to be used during the send process"
                          }
                        ]
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 269,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 437,
                              "character": 10,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L437"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 270,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 437,
                                  "character": 12,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L437"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 271,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 371,
                        "name": "RealtimeChannelSendResponse",
                        "package": "@supabase/realtime-js"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 106,
              "name": "subscribe",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 213,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L213"
                }
              ],
              "signatures": [
                {
                  "id": 107,
                  "name": "subscribe",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Subscribe registers your client with the server"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 213,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L213"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 108,
                      "name": "callback",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 109,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 214,
                              "character": 15,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L214"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 110,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 214,
                                  "character": 15,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L214"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 111,
                                  "name": "status",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "target": 632,
                                    "name": "REALTIME_SUBSCRIBE_STATES",
                                    "package": "@supabase/realtime-js"
                                  }
                                },
                                {
                                  "id": 112,
                                  "name": "err",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Error"
                                    },
                                    "name": "Error",
                                    "package": "typescript"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 113,
                      "name": "timeout",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 121,
              "name": "track",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 321,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L321"
                }
              ],
              "signatures": [
                {
                  "id": 122,
                  "name": "track",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 321,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L321"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 123,
                      "name": "payload",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 124,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 322,
                              "character": 13,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L322"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 125,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 322,
                                  "character": 15,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L322"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 126,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 127,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 128,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 323,
                              "character": 10,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L323"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 129,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 323,
                                  "character": 12,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L323"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 130,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 371,
                        "name": "RealtimeChannelSendResponse",
                        "package": "@supabase/realtime-js"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 278,
              "name": "unsubscribe",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 507,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L507"
                }
              ],
              "signatures": [
                {
                  "id": 279,
                  "name": "unsubscribe",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Leaves the channel.\n\nUnsubscribes from server events, and instructs channel to terminate on server.\nTriggers onClose() hooks.\n\nTo receive leave acknowledgements, use the a "
                      },
                      {
                        "kind": "code",
                        "text": "`receive`"
                      },
                      {
                        "kind": "text",
                        "text": " hook to bind to the server ack, ie:\nchannel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 507,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L507"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 280,
                      "name": "timeout",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "error"
                          },
                          {
                            "type": "literal",
                            "value": "ok"
                          },
                          {
                            "type": "literal",
                            "value": "timed out"
                          }
                        ]
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 131,
              "name": "untrack",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 335,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L335"
                }
              ],
              "signatures": [
                {
                  "id": 132,
                  "name": "untrack",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 335,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L335"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 133,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 134,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 336,
                              "character": 10,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L336"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 135,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 336,
                                  "character": 12,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L336"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 136,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 371,
                        "name": "RealtimeChannelSendResponse",
                        "package": "@supabase/realtime-js"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 272,
              "name": "updateJoinPayload",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 494,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L494"
                }
              ],
              "signatures": [
                {
                  "id": 273,
                  "name": "updateJoinPayload",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 494,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L494"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 274,
                      "name": "payload",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 275,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 494,
                              "character": 29,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L494"
                            }
                          ],
                          "indexSignatures": [
                            {
                              "id": 276,
                              "name": "__index",
                              "variant": "signature",
                              "kind": 8192,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 494,
                                  "character": 31,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L494"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 277,
                                  "name": "key",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [76]
            },
            {
              "title": "Properties",
              "children": [81, 100, 95, 96, 104, 99, 102, 98, 97, 105, 94, 101, 93, 103]
            },
            {
              "title": "Methods",
              "children": [137, 114, 259, 106, 121, 278, 131, 272]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 127,
              "character": 21,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L127"
            }
          ]
        },
        {
          "id": 372,
          "name": "RealtimeClient",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 373,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 144,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L144"
                }
              ],
              "signatures": [
                {
                  "id": 374,
                  "name": "RealtimeClient",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Initializes the Socket."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 144,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L144"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 375,
                      "name": "endPoint",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)"
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 376,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 515,
                        "name": "RealtimeClientOptions",
                        "package": "@supabase/realtime-js",
                        "highlightedProperties": {
                          "transport": [
                            {
                              "kind": "text",
                              "text": "The Websocket Transport, for example WebSocket. This can be a custom implementation"
                            }
                          ],
                          "timeout": [
                            {
                              "kind": "text",
                              "text": "The default timeout in milliseconds to trigger push timeouts."
                            }
                          ],
                          "params": [
                            {
                              "kind": "text",
                              "text": "The optional params to pass when connecting."
                            }
                          ],
                          "headers": [
                            {
                              "kind": "text",
                              "text": "The optional headers to pass when connecting."
                            }
                          ],
                          "heartbeatIntervalMs": [
                            {
                              "kind": "text",
                              "text": "The millisec interval to send a heartbeat message."
                            }
                          ],
                          "logger": [
                            {
                              "kind": "text",
                              "text": "The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log("
                            },
                            {
                              "kind": "code",
                              "text": "`${kind}: ${msg}`"
                            },
                            {
                              "kind": "text",
                              "text": ", data) }"
                            }
                          ],
                          "logLevel": [
                            {
                              "kind": "text",
                              "text": "Sets the log level for Realtime"
                            }
                          ],
                          "encode": [
                            {
                              "kind": "text",
                              "text": "The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))"
                            }
                          ],
                          "decode": [
                            {
                              "kind": "text",
                              "text": "The function to decode incoming messages. Defaults to Serializer's decode."
                            }
                          ],
                          "reconnectAfterMs": [
                            {
                              "kind": "text",
                              "text": "he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off."
                            }
                          ],
                          "worker": [
                            {
                              "kind": "text",
                              "text": "Use Web Worker to set a side flow. Defaults to false."
                            }
                          ],
                          "workerUrl": [
                            {
                              "kind": "text",
                              "text": "The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive."
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 372,
                    "name": "RealtimeClient",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 419,
              "name": "accessToken",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 121,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L121"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 420,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 121,
                          "character": 16,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L121"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 421,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeClient.ts",
                              "line": 121,
                              "character": 16,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L121"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 377,
              "name": "accessTokenValue",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 87,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L87"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 378,
              "name": "apiKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 88,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L88"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 379,
              "name": "channels",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 89,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L89"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 65,
                  "name": "RealtimeChannel",
                  "package": "@supabase/realtime-js",
                  "qualifiedName": "default"
                }
              },
              "defaultValue": "[]"
            },
            {
              "id": 402,
              "name": "conn",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 106,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L106"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "WebSocketLike"
                    },
                    "name": "WebSocketLike",
                    "package": "@supabase/realtime-js"
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 400,
              "name": "decode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 104,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L104"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Function"
                },
                "name": "Function",
                "package": "typescript"
              }
            },
            {
              "id": 399,
              "name": "encode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 103,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L103"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Function"
                },
                "name": "Function",
                "package": "typescript"
              }
            },
            {
              "id": 380,
              "name": "endPoint",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 90,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L90"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "''"
            },
            {
              "id": 411,
              "name": "fetch",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 120,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L120"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 412,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                      "line": 28708,
                      "character": 17
                    },
                    {
                      "fileName": "node_modules/@types/node/globals.d.ts",
                      "line": 374,
                      "character": 13
                    }
                  ],
                  "signatures": [
                    {
                      "id": 413,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch)"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                          "line": 28708,
                          "character": 17
                        }
                      ],
                      "parameters": [
                        {
                          "id": 414,
                          "name": "input",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "RequestInfo"
                                },
                                "name": "RequestInfo",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "URL"
                                },
                                "name": "URL",
                                "package": "typescript"
                              }
                            ]
                          }
                        },
                        {
                          "id": 415,
                          "name": "init",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "RequestInit"
                            },
                            "name": "RequestInit",
                            "package": "typescript"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "Response"
                            },
                            "name": "Response",
                            "package": "typescript"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 416,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Window/fetch)"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/node/globals.d.ts",
                          "line": 374,
                          "character": 13
                        }
                      ],
                      "parameters": [
                        {
                          "id": 417,
                          "name": "input",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "Request"
                                },
                                "name": "Request",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "URL"
                                },
                                "name": "URL",
                                "package": "typescript"
                              }
                            ]
                          }
                        },
                        {
                          "id": 418,
                          "name": "init",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "RequestInit"
                            },
                            "name": "RequestInit",
                            "package": "typescript"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "Response"
                            },
                            "name": "Response",
                            "package": "typescript"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 382,
              "name": "headers",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 92,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L92"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 383,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 92,
                      "character": 12,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L92"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 384,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 92,
                          "character": 14,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L92"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 385,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              },
              "defaultValue": "DEFAULT_HEADERS"
            },
            {
              "id": 392,
              "name": "heartbeatIntervalMs",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 96,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L96"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "25000"
            },
            {
              "id": 393,
              "name": "heartbeatTimer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 97,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L97"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/@types/node/timers.d.ts",
                      "qualifiedName": "__global.NodeJS.Timeout"
                    },
                    "name": "Timeout",
                    "package": "@types/node",
                    "qualifiedName": "__global.NodeJS.Timeout"
                  }
                ]
              },
              "defaultValue": "undefined"
            },
            {
              "id": 381,
              "name": "httpEndpoint",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 91,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L91"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "''"
            },
            {
              "id": 397,
              "name": "logger",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 101,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L101"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Function"
                },
                "name": "Function",
                "package": "typescript"
              },
              "defaultValue": "noop"
            },
            {
              "id": 398,
              "name": "logLevel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 102,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L102"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/constants.ts",
                  "qualifiedName": "LOG_LEVEL"
                },
                "name": "LOG_LEVEL",
                "package": "@supabase/realtime-js"
              }
            },
            {
              "id": 386,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 93,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L93"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 387,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 93,
                      "character": 11,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L93"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 388,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 93,
                          "character": 13,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L93"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 389,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              },
              "defaultValue": "{}"
            },
            {
              "id": 394,
              "name": "pendingHeartbeatRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 98,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L98"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 401,
              "name": "reconnectAfterMs",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 105,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L105"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Function"
                },
                "name": "Function",
                "package": "typescript"
              }
            },
            {
              "id": 396,
              "name": "reconnectTimer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 100,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L100"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/timer.ts",
                  "qualifiedName": "default"
                },
                "name": "Timer",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 395,
              "name": "ref",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 99,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L99"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 403,
              "name": "sendBuffer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 107,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L107"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                    "qualifiedName": "Function"
                  },
                  "name": "Function",
                  "package": "typescript"
                }
              },
              "defaultValue": "[]"
            },
            {
              "id": 404,
              "name": "serializer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 108,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L108"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/lib/serializer.ts",
                  "qualifiedName": "default"
                },
                "name": "Serializer",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              },
              "defaultValue": "..."
            },
            {
              "id": 405,
              "name": "stateChangeCallbacks",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 109,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L109"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 406,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 408,
                      "name": "close",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 111,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L111"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                            "qualifiedName": "Function"
                          },
                          "name": "Function",
                          "package": "typescript"
                        }
                      }
                    },
                    {
                      "id": 409,
                      "name": "error",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 112,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L112"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                            "qualifiedName": "Function"
                          },
                          "name": "Function",
                          "package": "typescript"
                        }
                      }
                    },
                    {
                      "id": 410,
                      "name": "message",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 113,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L113"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                            "qualifiedName": "Function"
                          },
                          "name": "Function",
                          "package": "typescript"
                        }
                      }
                    },
                    {
                      "id": 407,
                      "name": "open",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 110,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L110"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                            "qualifiedName": "Function"
                          },
                          "name": "Function",
                          "package": "typescript"
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [408, 409, 410, 407]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 109,
                      "character": 24,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L109"
                    }
                  ]
                }
              },
              "defaultValue": "..."
            },
            {
              "id": 390,
              "name": "timeout",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 94,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L94"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "DEFAULT_TIMEOUT"
            },
            {
              "id": 391,
              "name": "transport",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 95,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L95"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "WebSocketLikeConstructor"
                    },
                    "name": "WebSocketLikeConstructor",
                    "package": "@supabase/realtime-js"
                  }
                ]
              }
            },
            {
              "id": 422,
              "name": "worker",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 122,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L122"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 424,
              "name": "workerRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 124,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L124"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Worker"
                },
                "name": "Worker",
                "package": "typescript"
              }
            },
            {
              "id": 423,
              "name": "workerUrl",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 123,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L123"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 449,
              "name": "channel",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 331,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L331"
                }
              ],
              "signatures": [
                {
                  "id": 450,
                  "name": "channel",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 331,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L331"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 451,
                      "name": "topic",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 452,
                      "name": "params",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 359,
                        "name": "RealtimeChannelOptions",
                        "package": "@supabase/realtime-js"
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 65,
                    "name": "RealtimeChannel",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 425,
              "name": "connect",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 202,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L202"
                }
              ],
              "signatures": [
                {
                  "id": 426,
                  "name": "connect",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Connects the socket, unless already connected."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 202,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L202"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 445,
              "name": "connectionState",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 311,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L311"
                }
              ],
              "signatures": [
                {
                  "id": 446,
                  "name": "connectionState",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns the current state of the socket."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 311,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L311"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/lib/constants.ts",
                      "qualifiedName": "CONNECTION_STATE"
                    },
                    "name": "CONNECTION_STATE",
                    "package": "@supabase/realtime-js"
                  }
                }
              ]
            },
            {
              "id": 429,
              "name": "disconnect",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 252,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L252"
                }
              ],
              "signatures": [
                {
                  "id": 430,
                  "name": "disconnect",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Disconnects the socket."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 252,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L252"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 431,
                      "name": "code",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "A numeric status code to send on disconnect."
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 432,
                      "name": "reason",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "A custom reason for the disconnect."
                          }
                        ]
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 427,
              "name": "endpointURL",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 239,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L239"
                }
              ],
              "signatures": [
                {
                  "id": 428,
                  "name": "endpointURL",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns the URL of the websocket."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "string The URL of the websocket."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 239,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L239"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 461,
              "name": "flushSendBuffer",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L421"
                }
              ],
              "signatures": [
                {
                  "id": 462,
                  "name": "flushSendBuffer",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Flushes send buffer"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 421,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L421"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 433,
              "name": "getChannels",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 270,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L270"
                }
              ],
              "signatures": [
                {
                  "id": 434,
                  "name": "getChannels",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns all created channels"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 270,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L270"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 65,
                      "name": "RealtimeChannel",
                      "package": "@supabase/realtime-js",
                      "qualifiedName": "default"
                    }
                  }
                }
              ]
            },
            {
              "id": 447,
              "name": "isConnected",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 327,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L327"
                }
              ],
              "signatures": [
                {
                  "id": 448,
                  "name": "isConnected",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns "
                      },
                      {
                        "kind": "code",
                        "text": "`true`"
                      },
                      {
                        "kind": "text",
                        "text": " is the connection is open."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 327,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L327"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 440,
              "name": "log",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 304,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L304"
                }
              ],
              "signatures": [
                {
                  "id": 441,
                  "name": "log",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Logs the message.\n\nFor customized logging, "
                      },
                      {
                        "kind": "code",
                        "text": "`this.logger`"
                      },
                      {
                        "kind": "text",
                        "text": " can be overridden."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 304,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L304"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 442,
                      "name": "kind",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 443,
                      "name": "msg",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 444,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 453,
              "name": "push",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 345,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L345"
                }
              ],
              "signatures": [
                {
                  "id": 454,
                  "name": "push",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Push out a message if the socket is connected.\n\nIf the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 345,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L345"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 455,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 540,
                        "name": "RealtimeMessage",
                        "package": "@supabase/realtime-js"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 438,
              "name": "removeAllChannels",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 291,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L291"
                }
              ],
              "signatures": [
                {
                  "id": 439,
                  "name": "removeAllChannels",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unsubscribes and removes all channels"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 291,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L291"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": 617,
                          "name": "RealtimeRemoveChannelResponse",
                          "package": "@supabase/realtime-js"
                        }
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 435,
              "name": "removeChannel",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 278,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L278"
                }
              ],
              "signatures": [
                {
                  "id": 436,
                  "name": "removeChannel",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unsubscribes and removes a single channel"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 278,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L278"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 437,
                      "name": "channel",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "A RealtimeChannel instance"
                          }
                        ]
                      },
                      "type": {
                        "type": "reference",
                        "target": 65,
                        "name": "RealtimeChannel",
                        "package": "@supabase/realtime-js",
                        "qualifiedName": "default"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 617,
                        "name": "RealtimeRemoveChannelResponse",
                        "package": "@supabase/realtime-js"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 459,
              "name": "sendHeartbeat",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 395,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L395"
                }
              ],
              "signatures": [
                {
                  "id": 460,
                  "name": "sendHeartbeat",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Sends a heartbeat message if the socket is connected."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 395,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L395"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 456,
              "name": "setAuth",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 369,
                  "character": 8,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L369"
                }
              ],
              "signatures": [
                {
                  "id": 457,
                  "name": "setAuth",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n\nIf param is null it will use the "
                      },
                      {
                        "kind": "code",
                        "text": "`accessToken`"
                      },
                      {
                        "kind": "text",
                        "text": " callback function or the token set on the client.\n\nOn callback used, it will set the value of the token internal to the client."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 369,
                      "character": 8,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L369"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 458,
                      "name": "token",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "A JWT string to override the token set on the client."
                          }
                        ]
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      },
                      "defaultValue": "null"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [373]
            },
            {
              "title": "Properties",
              "children": [
                419, 377, 378, 379, 402, 400, 399, 380, 411, 382, 392, 393, 381, 397, 398, 386, 394,
                401, 396, 395, 403, 404, 405, 390, 391, 422, 424, 423
              ]
            },
            {
              "title": "Methods",
              "children": [449, 425, 445, 429, 427, 461, 433, 447, 440, 453, 438, 435, 459, 456]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimeClient.ts",
              "line": 86,
              "character": 21,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L86"
            }
          ]
        },
        {
          "id": 1,
          "name": "RealtimePresence",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 36,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 84,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L84"
                }
              ],
              "signatures": [
                {
                  "id": 37,
                  "name": "RealtimePresence",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Initializes the Presence."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 84,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L84"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 38,
                      "name": "channel",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The RealtimeChannel"
                          }
                        ]
                      },
                      "type": {
                        "type": "reference",
                        "target": 65,
                        "name": "RealtimeChannel",
                        "package": "@supabase/realtime-js",
                        "qualifiedName": "default"
                      }
                    },
                    {
                      "id": 39,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The options,\n       for example "
                          },
                          {
                            "kind": "code",
                            "text": "`{events: {state: 'state', diff: 'diff'}}`"
                          }
                        ]
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/@types/phoenix/index.d.ts",
                          "qualifiedName": "PresenceOpts"
                        },
                        "name": "PresenceOpts",
                        "package": "@types/phoenix"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 1,
                    "name": "RealtimePresence",
                    "package": "@supabase/realtime-js",
                    "qualifiedName": "default"
                  }
                }
              ]
            },
            {
              "id": 44,
              "name": "caller",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 67,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L67"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 45,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 46,
                      "name": "onJoin",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 68,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L68"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/@types/phoenix/index.d.ts",
                          "qualifiedName": "PresenceOnJoinCallback"
                        },
                        "name": "PresenceOnJoinCallback",
                        "package": "@types/phoenix"
                      }
                    },
                    {
                      "id": 47,
                      "name": "onLeave",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 69,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L69"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/@types/phoenix/index.d.ts",
                          "qualifiedName": "PresenceOnLeaveCallback"
                        },
                        "name": "PresenceOnLeaveCallback",
                        "package": "@types/phoenix"
                      }
                    },
                    {
                      "id": 48,
                      "name": "onSync",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 70,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L70"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 49,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimePresence.ts",
                              "line": 70,
                              "character": 12,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L70"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 50,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/RealtimePresence.ts",
                                  "line": 70,
                                  "character": 12,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L70"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [46, 47, 48]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 67,
                      "character": 10,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L67"
                    }
                  ]
                }
              },
              "defaultValue": "..."
            },
            {
              "id": 51,
              "name": "channel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The RealtimeChannel"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 84,
                  "character": 21,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L84"
                }
              ],
              "type": {
                "type": "reference",
                "target": 65,
                "name": "RealtimeChannel",
                "package": "@supabase/realtime-js",
                "qualifiedName": "default"
              }
            },
            {
              "id": 43,
              "name": "joinRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 66,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L66"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "defaultValue": "null"
            },
            {
              "id": 42,
              "name": "pendingDiffs",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 65,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L65"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "src/RealtimePresence.ts",
                    "qualifiedName": "RawPresenceDiff"
                  },
                  "name": "RawPresenceDiff",
                  "package": "@supabase/realtime-js"
                }
              },
              "defaultValue": "[]"
            },
            {
              "id": 40,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 64,
                  "character": 2,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L64"
                }
              ],
              "type": {
                "type": "reference",
                "target": 608,
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 41,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {}
                    }
                  }
                ],
                "name": "RealtimePresenceState",
                "package": "@supabase/realtime-js"
              },
              "defaultValue": "{}"
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [36]
            },
            {
              "title": "Properties",
              "children": [44, 51, 43, 42, 40]
            }
          ],
          "sources": [
            {
              "fileName": "src/RealtimePresence.ts",
              "line": 63,
              "character": 21,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L63"
            }
          ]
        },
        {
          "id": 359,
          "name": "RealtimeChannelOptions",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 16,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L16"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 360,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 361,
                  "name": "config",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 17,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L17"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 362,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 363,
                          "name": "broadcast",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "self option enables client to receive message it broadcast\nack option instructs server to acknowledge that broadcast message was received"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 22,
                              "character": 4,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L22"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 364,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "children": [
                                {
                                  "id": 366,
                                  "name": "ack",
                                  "variant": "declaration",
                                  "kind": 1024,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/RealtimeChannel.ts",
                                      "line": 22,
                                      "character": 34,
                                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L22"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 365,
                                  "name": "self",
                                  "variant": "declaration",
                                  "kind": 1024,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/RealtimeChannel.ts",
                                      "line": 22,
                                      "character": 18,
                                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L22"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "children": [366, 365]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 22,
                                  "character": 16,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L22"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 367,
                          "name": "presence",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "key option is used to track presence payload across clients"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 26,
                              "character": 4,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L26"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 368,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "children": [
                                {
                                  "id": 369,
                                  "name": "key",
                                  "variant": "declaration",
                                  "kind": 1024,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/RealtimeChannel.ts",
                                      "line": 26,
                                      "character": 17,
                                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L26"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "children": [369]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/RealtimeChannel.ts",
                                  "line": 26,
                                  "character": 15,
                                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L26"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 370,
                          "name": "private",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "defines if the channel is private or not and if RLS policies will be used to check data"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 30,
                              "character": 4,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L30"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [363, 367, 370]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 17,
                          "character": 10,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L17"
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [361]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 16,
                  "character": 37,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L16"
                }
              ]
            }
          }
        },
        {
          "id": 371,
          "name": "RealtimeChannelSendResponse",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 88,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L88"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "ok"
              },
              {
                "type": "literal",
                "value": "timed out"
              },
              {
                "type": "literal",
                "value": "error"
              }
            ]
          }
        },
        {
          "id": 515,
          "name": "RealtimeClientOptions",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeClient.ts",
              "line": 60,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L60"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 516,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 537,
                  "name": "accessToken",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 76,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L76"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 538,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 76,
                          "character": 16,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L76"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 539,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "literal",
                                    "value": null
                                  }
                                ]
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 522,
                  "name": "decode",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 66,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L66"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Function"
                    },
                    "name": "Function",
                    "package": "typescript"
                  }
                },
                {
                  "id": 521,
                  "name": "encode",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 65,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L65"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Function"
                    },
                    "name": "Function",
                    "package": "typescript"
                  }
                },
                {
                  "id": 534,
                  "name": "fetch",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 73,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L73"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "Fetch"
                    },
                    "name": "Fetch",
                    "package": "@supabase/realtime-js"
                  }
                },
                {
                  "id": 524,
                  "name": "headers",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 68,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L68"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 525,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 68,
                          "character": 12,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L68"
                        }
                      ],
                      "indexSignatures": [
                        {
                          "id": 526,
                          "name": "__index",
                          "variant": "signature",
                          "kind": 8192,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeClient.ts",
                              "line": 68,
                              "character": 14,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L68"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 527,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 519,
                  "name": "heartbeatIntervalMs",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 63,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L63"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 532,
                  "name": "log_level",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 71,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L71"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "LogLevel"
                    },
                    "name": "LogLevel",
                    "package": "@supabase/realtime-js"
                  }
                },
                {
                  "id": 520,
                  "name": "logger",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 64,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L64"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Function"
                    },
                    "name": "Function",
                    "package": "typescript"
                  }
                },
                {
                  "id": 533,
                  "name": "logLevel",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 72,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L72"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "LogLevel"
                    },
                    "name": "LogLevel",
                    "package": "@supabase/realtime-js"
                  }
                },
                {
                  "id": 528,
                  "name": "params",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 69,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L69"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 529,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeClient.ts",
                          "line": 69,
                          "character": 11,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L69"
                        }
                      ],
                      "indexSignatures": [
                        {
                          "id": 530,
                          "name": "__index",
                          "variant": "signature",
                          "kind": 8192,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeClient.ts",
                              "line": 69,
                              "character": 13,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L69"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 531,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 523,
                  "name": "reconnectAfterMs",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 67,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L67"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Function"
                    },
                    "name": "Function",
                    "package": "typescript"
                  }
                },
                {
                  "id": 518,
                  "name": "timeout",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 62,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L62"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 517,
                  "name": "transport",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 61,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L61"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/RealtimeClient.ts",
                      "qualifiedName": "WebSocketLikeConstructor"
                    },
                    "name": "WebSocketLikeConstructor",
                    "package": "@supabase/realtime-js"
                  }
                },
                {
                  "id": 535,
                  "name": "worker",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 74,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L74"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 536,
                  "name": "workerUrl",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 75,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L75"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    537, 522, 521, 534, 524, 519, 532, 520, 533, 528, 523, 518, 517, 535, 536
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 60,
                  "character": 36,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L60"
                }
              ]
            }
          }
        },
        {
          "id": 540,
          "name": "RealtimeMessage",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeClient.ts",
              "line": 32,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L32"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 541,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 543,
                  "name": "event",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 34,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L34"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 546,
                  "name": "join_ref",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 37,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L37"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 544,
                  "name": "payload",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 35,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L35"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 545,
                  "name": "ref",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 36,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L36"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 542,
                  "name": "topic",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeClient.ts",
                      "line": 33,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L33"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [543, 546, 544, 545, 542]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimeClient.ts",
                  "line": 32,
                  "character": 30,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L32"
                }
              ]
            }
          }
        },
        {
          "id": 547,
          "name": "RealtimePostgresChangesFilter",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 67,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L67"
            }
          ],
          "typeParameters": [
            {
              "id": 553,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "templateLiteral",
                "head": "",
                "tail": [
                  [
                    {
                      "type": "reference",
                      "target": 623,
                      "name": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT",
                      "package": "@supabase/realtime-js"
                    },
                    ""
                  ]
                ]
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 548,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 549,
                  "name": "event",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The type of database change to listen to."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 73,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L73"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 553,
                    "name": "T",
                    "package": "@supabase/realtime-js",
                    "refersToTypeParameter": true
                  }
                },
                {
                  "id": 552,
                  "name": "filter",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Receive database changes when filter is matched."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 85,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L85"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 550,
                  "name": "schema",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The database schema to listen to."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 77,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L77"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 551,
                  "name": "table",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The database table to listen to."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 81,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L81"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [549, 552, 550, 551]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimeChannel.ts",
                  "line": 69,
                  "character": 4,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L69"
                }
              ]
            }
          }
        },
        {
          "id": 554,
          "name": "RealtimePostgresChangesPayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 62,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L62"
            }
          ],
          "typeParameters": [
            {
              "id": 555,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 556,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 62,
                      "character": 53,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L62"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 557,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 62,
                          "character": 55,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L62"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 558,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 559,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 555,
                    "name": "T",
                    "package": "@supabase/realtime-js",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "RealtimePostgresInsertPayload",
                "package": "@supabase/realtime-js"
              },
              {
                "type": "reference",
                "target": 569,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 555,
                    "name": "T",
                    "package": "@supabase/realtime-js",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "RealtimePostgresUpdatePayload",
                "package": "@supabase/realtime-js"
              },
              {
                "type": "reference",
                "target": 578,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 555,
                    "name": "T",
                    "package": "@supabase/realtime-js",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "RealtimePostgresDeletePayload",
                "package": "@supabase/realtime-js"
              }
            ]
          }
        },
        {
          "id": 578,
          "name": "RealtimePostgresDeletePayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 55,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L55"
            }
          ],
          "typeParameters": [
            {
              "id": 584,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 585,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 55,
                      "character": 52,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L55"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 586,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 55,
                          "character": 54,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L55"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 587,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/RealtimeChannel.ts",
                  "qualifiedName": "RealtimePostgresChangesPayloadBase"
                },
                "name": "RealtimePostgresChangesPayloadBase",
                "package": "@supabase/realtime-js"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 579,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 580,
                      "name": "eventType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 57,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L57"
                        }
                      ],
                      "type": {
                        "type": "templateLiteral",
                        "head": "",
                        "tail": [
                          [
                            {
                              "type": "reference",
                              "target": 627,
                              "name": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE",
                              "package": "@supabase/realtime-js"
                            },
                            ""
                          ]
                        ]
                      }
                    },
                    {
                      "id": 581,
                      "name": "new",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 58,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L58"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 582,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 58,
                              "character": 9,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L58"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 583,
                      "name": "old",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 59,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L59"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Partial"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 584,
                            "name": "T",
                            "package": "@supabase/realtime-js",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "Partial",
                        "package": "typescript"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [580, 581, 583]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 56,
                      "character": 39,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L56"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 559,
          "name": "RealtimePostgresInsertPayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 41,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L41"
            }
          ],
          "typeParameters": [
            {
              "id": 565,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 566,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 41,
                      "character": 52,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L41"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 567,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 41,
                          "character": 54,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L41"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 568,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/RealtimeChannel.ts",
                  "qualifiedName": "RealtimePostgresChangesPayloadBase"
                },
                "name": "RealtimePostgresChangesPayloadBase",
                "package": "@supabase/realtime-js"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 560,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 561,
                      "name": "eventType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 43,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L43"
                        }
                      ],
                      "type": {
                        "type": "templateLiteral",
                        "head": "",
                        "tail": [
                          [
                            {
                              "type": "reference",
                              "target": 625,
                              "name": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT",
                              "package": "@supabase/realtime-js"
                            },
                            ""
                          ]
                        ]
                      }
                    },
                    {
                      "id": 562,
                      "name": "new",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 44,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L44"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 565,
                        "name": "T",
                        "package": "@supabase/realtime-js",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 563,
                      "name": "old",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 45,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L45"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 564,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/RealtimeChannel.ts",
                              "line": 45,
                              "character": 9,
                              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L45"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [561, 562, 563]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 42,
                      "character": 39,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L42"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 569,
          "name": "RealtimePostgresUpdatePayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 48,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L48"
            }
          ],
          "typeParameters": [
            {
              "id": 574,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 575,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 48,
                      "character": 52,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L48"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 576,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 48,
                          "character": 54,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L48"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 577,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "src/RealtimeChannel.ts",
                  "qualifiedName": "RealtimePostgresChangesPayloadBase"
                },
                "name": "RealtimePostgresChangesPayloadBase",
                "package": "@supabase/realtime-js"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 570,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 571,
                      "name": "eventType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 50,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L50"
                        }
                      ],
                      "type": {
                        "type": "templateLiteral",
                        "head": "",
                        "tail": [
                          [
                            {
                              "type": "reference",
                              "target": 626,
                              "name": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE",
                              "package": "@supabase/realtime-js"
                            },
                            ""
                          ]
                        ]
                      }
                    },
                    {
                      "id": 572,
                      "name": "new",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 51,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L51"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 574,
                        "name": "T",
                        "package": "@supabase/realtime-js",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 573,
                      "name": "old",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimeChannel.ts",
                          "line": 52,
                          "character": 4,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L52"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Partial"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 574,
                            "name": "T",
                            "package": "@supabase/realtime-js",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "Partial",
                        "package": "typescript"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [571, 572, 573]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/RealtimeChannel.ts",
                      "line": 49,
                      "character": 39,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L49"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 588,
          "name": "RealtimePresenceJoinPayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimePresence.ts",
              "line": 21,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L21"
            }
          ],
          "typeParameters": [
            {
              "id": 594,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 595,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 21,
                      "character": 50,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L21"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 596,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 21,
                          "character": 52,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L21"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 597,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 589,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 592,
                  "name": "currentPresences",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 24,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L24"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "src/RealtimePresence.ts",
                        "qualifiedName": "Presence"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 594,
                          "name": "T",
                          "package": "@supabase/realtime-js",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Presence",
                      "package": "@supabase/realtime-js"
                    }
                  }
                },
                {
                  "id": 590,
                  "name": "event",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 22,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L22"
                    }
                  ],
                  "type": {
                    "type": "templateLiteral",
                    "head": "",
                    "tail": [
                      [
                        {
                          "type": "reference",
                          "target": 630,
                          "name": "REALTIME_PRESENCE_LISTEN_EVENTS.JOIN",
                          "package": "@supabase/realtime-js"
                        },
                        ""
                      ]
                    ]
                  }
                },
                {
                  "id": 591,
                  "name": "key",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 23,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L23"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 593,
                  "name": "newPresences",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 25,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L25"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "src/RealtimePresence.ts",
                        "qualifiedName": "Presence"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 594,
                          "name": "T",
                          "package": "@supabase/realtime-js",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Presence",
                      "package": "@supabase/realtime-js"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [592, 590, 591, 593]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 21,
                  "character": 76,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L21"
                }
              ]
            }
          }
        },
        {
          "id": 598,
          "name": "RealtimePresenceLeavePayload",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimePresence.ts",
              "line": 28,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L28"
            }
          ],
          "typeParameters": [
            {
              "id": 604,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 605,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 28,
                      "character": 51,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L28"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 606,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 28,
                          "character": 53,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L28"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 607,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 599,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 602,
                  "name": "currentPresences",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 31,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L31"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "src/RealtimePresence.ts",
                        "qualifiedName": "Presence"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 604,
                          "name": "T",
                          "package": "@supabase/realtime-js",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Presence",
                      "package": "@supabase/realtime-js"
                    }
                  }
                },
                {
                  "id": 600,
                  "name": "event",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 29,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L29"
                    }
                  ],
                  "type": {
                    "type": "templateLiteral",
                    "head": "",
                    "tail": [
                      [
                        {
                          "type": "reference",
                          "target": 631,
                          "name": "REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE",
                          "package": "@supabase/realtime-js"
                        },
                        ""
                      ]
                    ]
                  }
                },
                {
                  "id": 601,
                  "name": "key",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 30,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L30"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 603,
                  "name": "leftPresences",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 32,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L32"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "src/RealtimePresence.ts",
                        "qualifiedName": "Presence"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 604,
                          "name": "T",
                          "package": "@supabase/realtime-js",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Presence",
                      "package": "@supabase/realtime-js"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [602, 600, 601, 603]
                }
              ],
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 28,
                  "character": 77,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L28"
                }
              ]
            }
          }
        },
        {
          "id": 608,
          "name": "RealtimePresenceState",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimePresence.ts",
              "line": 17,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L17"
            }
          ],
          "typeParameters": [
            {
              "id": 612,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 613,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 17,
                      "character": 44,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L17"
                    }
                  ],
                  "indexSignatures": [
                    {
                      "id": 614,
                      "name": "__index",
                      "variant": "signature",
                      "kind": 8192,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/RealtimePresence.ts",
                          "line": 17,
                          "character": 46,
                          "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L17"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 615,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              },
              "default": {
                "type": "reflection",
                "declaration": {
                  "id": 616,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 17,
                      "character": 69,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L17"
                    }
                  ]
                }
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 609,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/RealtimePresence.ts",
                  "line": 17,
                  "character": 75,
                  "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L17"
                }
              ],
              "indexSignatures": [
                {
                  "id": 610,
                  "name": "__index",
                  "variant": "signature",
                  "kind": 8192,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/RealtimePresence.ts",
                      "line": 18,
                      "character": 2,
                      "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimePresence.ts#L18"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 611,
                      "name": "key",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "src/RealtimePresence.ts",
                        "qualifiedName": "Presence"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 612,
                          "name": "T",
                          "package": "@supabase/realtime-js",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Presence",
                      "package": "@supabase/realtime-js"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "id": 617,
          "name": "RealtimeRemoveChannelResponse",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "src/RealtimeClient.ts",
              "line": 40,
              "character": 12,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeClient.ts#L40"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "ok"
              },
              {
                "type": "literal",
                "value": "timed out"
              },
              {
                "type": "literal",
                "value": "error"
              }
            ]
          }
        },
        {
          "id": 637,
          "name": "REALTIME_CHANNEL_STATES",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "src/RealtimeChannel.ts",
              "line": 111,
              "character": 13,
              "url": "https://github.com/supabase/realtime-js/blob/527f3fb92e2d3a37544bdbecac3646db0f78dd6f/src/RealtimeChannel.ts#L111"
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "target": {
                "sourceFileName": "src/lib/constants.ts",
                "qualifiedName": "CHANNEL_STATES"
              },
              "name": "CHANNEL_STATES",
              "package": "@supabase/realtime-js",
              "preferValues": true
            }
          },
          "defaultValue": "CHANNEL_STATES"
        }
      ],
      "groups": [
        {
          "title": "Enumerations",
          "children": [618, 623, 628, 632]
        },
        {
          "title": "Classes",
          "children": [65, 372, 1]
        },
        {
          "title": "Type Aliases",
          "children": [359, 371, 515, 540, 547, 554, 578, 559, 569, 588, 598, 608, 617]
        },
        {
          "title": "Variables",
          "children": [637]
        }
      ],
      "packageName": "@supabase/realtime-js",
      "readme": [
        {
          "kind": "text",
          "text": "<br />\n<p align=\"center\">\n  <a href=\"https://supabase.io\">\n        <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/supabase/supabase/master/packages/common/assets/images/supabase-logo-wordmark--dark.svg\">\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/supabase/supabase/master/packages/common/assets/images/supabase-logo-wordmark--light.svg\">\n      <img alt=\"Supabase Logo\" width=\"300\" src=\"https://raw.githubusercontent.com/supabase/supabase/master/packages/common/assets/images/logo-preview.jpg\">\n    </picture>\n  </a>\n\n  <h1 align=\"center\">Supabase Realtime Client</h1>\n\n  <h3 align=\"center\">Send ephemeral messages with <b>Broadcast</b>, track and synchronize state with <b>Presence</b>, and listen to database changes with <b>Postgres Change Data Capture (CDC)</b>.</h3>\n\n  <p align=\"center\">\n    <a href=\"https://supabase.com/docs/guides/realtime\">Guides</a>\n    ·\n    <a href=\"https://supabase.com/docs/reference/javascript\">Reference Docs</a>\n    ·\n    <a href=\"https://multiplayer.dev\">Multiplayer Demo</a>\n  </p>\n</p>\n\n# Overview\n\nThis client enables you to use the following Supabase Realtime's features:\n\n- **Broadcast**: send ephemeral messages from client to clients with minimal latency. Use cases include sharing cursor positions between users.\n- **Presence**: track and synchronize shared state across clients with the help of CRDTs. Use cases include tracking which users are currently viewing a specific webpage.\n- **Postgres Change Data Capture (CDC)**: listen for changes in your PostgreSQL database and send them to clients.\n\n# Usage\n\n## Installing the Package\n\n"
        },
        {
          "kind": "code",
          "text": "```bash\nnpm install @supabase/realtime-js\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Creating a Channel\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { RealtimeClient } from '@supabase/realtime-js'\n\nconst client = new RealtimeClient(REALTIME_URL, {\n  params: {\n    apikey: API_KEY\n  },\n})\n\nconst channel = client.channel('test-channel', {})\n\nchannel.subscribe((status, err) => {\n  if (status === 'SUBSCRIBED') {\n    console.log('Connected!')\n  }\n\n  if (status === 'CHANNEL_ERROR') {\n    console.log(`There was an error subscribing to channel: ${err.message}`)\n  }\n\n  if (status === 'TIMED_OUT') {\n    console.log('Realtime server did not respond in time.')\n  }\n\n  if (status === 'CLOSED') {\n    console.log('Realtime channel was unexpectedly closed.')\n  }\n})\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### Notes:\n\n- "
        },
        {
          "kind": "code",
          "text": "`REALTIME_URL`"
        },
        {
          "kind": "text",
          "text": " is "
        },
        {
          "kind": "code",
          "text": "`'ws://localhost:4000/socket'`"
        },
        {
          "kind": "text",
          "text": " when developing locally and "
        },
        {
          "kind": "code",
          "text": "`'wss://<project_ref>.supabase.co/realtime/v1'`"
        },
        {
          "kind": "text",
          "text": " when connecting to your Supabase project.\n- "
        },
        {
          "kind": "code",
          "text": "`API_KEY`"
        },
        {
          "kind": "text",
          "text": " is a JWT whose claims must contain "
        },
        {
          "kind": "code",
          "text": "`exp`"
        },
        {
          "kind": "text",
          "text": " and "
        },
        {
          "kind": "code",
          "text": "`role`"
        },
        {
          "kind": "text",
          "text": " (existing database role).\n- Channel name can be any "
        },
        {
          "kind": "code",
          "text": "`string`"
        },
        {
          "kind": "text",
          "text": ".\n\n## Broadcast\n\nYour client can send and receive messages based on the "
        },
        {
          "kind": "code",
          "text": "`event`"
        },
        {
          "kind": "text",
          "text": ".\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nconst channel = client.channel('broadcast-test', { broadcast: { ack: false, self: false } })\n\nchannel.on('broadcast', { event: 'some-event' }, (payload) =>\n  console.log(payload)\n)\n\nchannel.subscribe(async (status) => {\n  if (status === 'SUBSCRIBED') {\n    // Send message to other clients listening to 'broadcast-test' channel\n    await channel.send({\n      type: 'broadcast',\n      event: 'some-event',\n      payload: { hello: 'world' },\n    })\n  }\n})\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### Notes:\n\n- Setting "
        },
        {
          "kind": "code",
          "text": "`ack`"
        },
        {
          "kind": "text",
          "text": " to "
        },
        {
          "kind": "code",
          "text": "`true`"
        },
        {
          "kind": "text",
          "text": " means that the "
        },
        {
          "kind": "code",
          "text": "`channel.send`"
        },
        {
          "kind": "text",
          "text": " promise will resolve once server replies with acknowledgement that it received the broadcast message request.\n- Setting "
        },
        {
          "kind": "code",
          "text": "`self`"
        },
        {
          "kind": "text",
          "text": " to "
        },
        {
          "kind": "code",
          "text": "`true`"
        },
        {
          "kind": "text",
          "text": " means that the client will receive the broadcast message it sent out.\n- Setting "
        },
        {
          "kind": "code",
          "text": "`private`"
        },
        {
          "kind": "text",
          "text": " to "
        },
        {
          "kind": "code",
          "text": "`true`"
        },
        {
          "kind": "text",
          "text": " means that the client will use RLS to determine if the user can connect or not to a given channel.\n\n## Presence\n\nYour client can track and sync state that's stored in the channel.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nconst channel = client.channel(\n  'presence-test',\n  {\n    config: {\n      presence: {\n        key: ''\n      }\n    }\n  }\n)\n\nchannel.on('presence', { event: 'sync' }, () => {\n  console.log('Online users: ', channel.presenceState())\n})\n\nchannel.on('presence', { event: 'join' }, ({ newPresences }) => {\n  console.log('New users have joined: ', newPresences)\n})\n\nchannel.on('presence', { event: 'leave' }, ({ leftPresences }) => {\n  console.log('Users have left: ', leftPresences)\n})\n\nchannel.subscribe(async (status) => {\n  if (status === 'SUBSCRIBED') {\n    const status = await channel.track({ 'user_id': 1 })\n    console.log(status)\n  }\n})\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Postgres CDC\n\nReceive database changes on the client.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nconst channel = client.channel('db-changes')\n\nchannel.on('postgres_changes', { event: '*', schema: 'public' }, (payload) => {\n  console.log('All changes in public schema: ', payload)\n})\n\nchannel.on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, (payload) => {\n  console.log('All inserts in messages table: ', payload)\n})\n\nchannel.on('postgres_changes', { event: 'UPDATE', schema: 'public', table: 'users', filter: 'username=eq.Realtime' }, (payload) => {\n  console.log('All updates on users table when username is Realtime: ', payload)\n})\n\nchannel.subscribe(async (status) => {\n  if (status === 'SUBSCRIBED') {\n    console.log('Ready to receive database changes!')\n  }\n})\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Get All Channels\n\nYou can see all the channels that your client has instantiatied.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nclient.getChannels()\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Cleanup\n\nIt is highly recommended that you clean up your channels after you're done with them.\n\n- Remove a single channel\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nconst channel = client.channel('some-channel-to-remove')\n\nchannel.subscribe()\n\nclient.removeChannel(channel)\n```"
        },
        {
          "kind": "text",
          "text": "\n\n- Remove all channels\n\n"
        },
        {
          "kind": "code",
          "text": "```js\n// Setup...\n\nconst channel1 = client.channel('a-channel-to-remove')\nconst channel2 = client.channel('another-channel-to-remove')\n\nchannel1.subscribe()\nchannel2.subscribe()\n\nclient.removeAllChannels()\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Credits\n\nThis repo draws heavily from [phoenix-js](https://github.com/phoenixframework/phoenix/tree/master/assets/js/phoenix).\n\n## License\n\nMIT."
        }
      ],
      "symbolIdMap": {
        "0": {
          "sourceFileName": "src/index.ts",
          "qualifiedName": ""
        },
        "1": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default"
        },
        "36": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.__constructor"
        },
        "37": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default"
        },
        "38": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "channel"
        },
        "39": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "opts"
        },
        "40": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.state"
        },
        "41": {
          "sourceFileName": "",
          "qualifiedName": "__type"
        },
        "42": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.pendingDiffs"
        },
        "43": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.joinRef"
        },
        "44": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.caller"
        },
        "45": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "46": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.onJoin"
        },
        "47": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.onLeave"
        },
        "48": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.onSync"
        },
        "49": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "50": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "51": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "default.channel"
        },
        "65": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default"
        },
        "76": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.__constructor"
        },
        "77": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default"
        },
        "78": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "topic"
        },
        "79": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "params"
        },
        "80": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "socket"
        },
        "81": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.bindings"
        },
        "82": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "83": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "85": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "86": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.type"
        },
        "87": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.filter"
        },
        "88": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "89": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "91": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.callback"
        },
        "92": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.id"
        },
        "93": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.timeout"
        },
        "94": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.state"
        },
        "95": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.joinedOnce"
        },
        "96": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.joinPush"
        },
        "97": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.rejoinTimer"
        },
        "98": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.pushBuffer"
        },
        "99": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.presence"
        },
        "100": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.broadcastEndpointURL"
        },
        "101": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.subTopic"
        },
        "102": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.private"
        },
        "103": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.topic"
        },
        "104": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.params"
        },
        "105": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.socket"
        },
        "106": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.subscribe"
        },
        "107": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.subscribe"
        },
        "108": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "109": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "110": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "111": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "status"
        },
        "112": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "err"
        },
        "113": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "timeout"
        },
        "114": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.presenceState"
        },
        "115": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.presenceState"
        },
        "116": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "117": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "118": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "120": {
          "sourceFileName": "",
          "qualifiedName": "__type"
        },
        "121": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.track"
        },
        "122": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.track"
        },
        "123": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "124": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "125": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "127": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "opts"
        },
        "128": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "129": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "131": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.untrack"
        },
        "132": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.untrack"
        },
        "133": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "opts"
        },
        "134": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "135": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "137": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "138": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "139": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "140": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "141": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "142": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "143": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "144": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "145": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "146": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "147": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "148": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "149": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "151": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "152": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "153": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "154": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "155": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "156": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "157": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "158": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "159": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "160": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "161": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "162": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "164": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "165": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "166": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "167": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "168": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "169": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "170": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "171": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "172": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "173": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "174": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "175": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "177": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "178": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "179": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "180": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "181": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "182": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "183": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "184": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "185": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "186": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "188": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "189": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "190": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "191": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "192": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "193": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "194": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "195": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "196": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "197": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "199": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "200": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "201": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "202": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "203": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "204": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "205": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "206": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "207": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "208": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "210": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "211": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "212": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "213": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "214": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "215": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "216": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "217": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "218": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "219": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "220": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "221": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "222": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "223": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "224": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "225": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "226": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.type"
        },
        "227": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "228": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "230": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "231": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "232": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "233": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "235": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "236": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "237": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "238": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "239": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "240": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "241": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "242": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "243": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "244": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.type"
        },
        "245": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "246": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.payload"
        },
        "247": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.on"
        },
        "248": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "249": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "250": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "252": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "type"
        },
        "253": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "filter"
        },
        "254": {
          "sourceFileName": "",
          "qualifiedName": "__type"
        },
        "255": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "callback"
        },
        "256": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "257": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "258": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "259": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.send"
        },
        "260": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.send"
        },
        "261": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "args"
        },
        "262": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "263": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.type"
        },
        "264": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "265": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.payload"
        },
        "266": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "268": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "opts"
        },
        "269": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "270": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "272": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.updateJoinPayload"
        },
        "273": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.updateJoinPayload"
        },
        "274": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "payload"
        },
        "275": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "276": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "278": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.unsubscribe"
        },
        "279": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "default.unsubscribe"
        },
        "280": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "timeout"
        },
        "359": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimeChannelOptions"
        },
        "360": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "361": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.config"
        },
        "362": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "363": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.broadcast"
        },
        "364": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "365": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.self"
        },
        "366": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.ack"
        },
        "367": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.presence"
        },
        "368": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "369": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.key"
        },
        "370": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.private"
        },
        "371": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimeChannelSendResponse"
        },
        "372": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default"
        },
        "373": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.__constructor"
        },
        "374": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default"
        },
        "375": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "endPoint"
        },
        "376": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "options"
        },
        "377": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.accessTokenValue"
        },
        "378": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.apiKey"
        },
        "379": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.channels"
        },
        "380": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.endPoint"
        },
        "381": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.httpEndpoint"
        },
        "382": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.headers"
        },
        "383": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "384": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.__index"
        },
        "386": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.params"
        },
        "387": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "388": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.__index"
        },
        "390": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.timeout"
        },
        "391": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.transport"
        },
        "392": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.heartbeatIntervalMs"
        },
        "393": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.heartbeatTimer"
        },
        "394": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.pendingHeartbeatRef"
        },
        "395": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.ref"
        },
        "396": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.reconnectTimer"
        },
        "397": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.logger"
        },
        "398": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.logLevel"
        },
        "399": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.encode"
        },
        "400": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.decode"
        },
        "401": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.reconnectAfterMs"
        },
        "402": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.conn"
        },
        "403": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.sendBuffer"
        },
        "404": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.serializer"
        },
        "405": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.stateChangeCallbacks"
        },
        "406": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "407": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.open"
        },
        "408": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.close"
        },
        "409": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.error"
        },
        "410": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.message"
        },
        "411": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.fetch"
        },
        "412": {
          "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
          "qualifiedName": "fetch"
        },
        "413": {
          "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
          "qualifiedName": "fetch"
        },
        "414": {
          "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
          "qualifiedName": "input"
        },
        "415": {
          "sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
          "qualifiedName": "init"
        },
        "416": {
          "sourceFileName": "node_modules/@types/node/globals.d.ts",
          "qualifiedName": "fetch"
        },
        "417": {
          "sourceFileName": "node_modules/@types/node/globals.d.ts",
          "qualifiedName": "input"
        },
        "418": {
          "sourceFileName": "node_modules/@types/node/globals.d.ts",
          "qualifiedName": "init"
        },
        "419": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.accessToken"
        },
        "420": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "421": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "422": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.worker"
        },
        "423": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.workerUrl"
        },
        "424": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.workerRef"
        },
        "425": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.connect"
        },
        "426": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.connect"
        },
        "427": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.endpointURL"
        },
        "428": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.endpointURL"
        },
        "429": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.disconnect"
        },
        "430": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.disconnect"
        },
        "431": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "code"
        },
        "432": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "reason"
        },
        "433": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.getChannels"
        },
        "434": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.getChannels"
        },
        "435": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.removeChannel"
        },
        "436": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.removeChannel"
        },
        "437": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "channel"
        },
        "438": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.removeAllChannels"
        },
        "439": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.removeAllChannels"
        },
        "440": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.log"
        },
        "441": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.log"
        },
        "442": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "kind"
        },
        "443": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "msg"
        },
        "444": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "data"
        },
        "445": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.connectionState"
        },
        "446": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.connectionState"
        },
        "447": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.isConnected"
        },
        "448": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.isConnected"
        },
        "449": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.channel"
        },
        "450": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.channel"
        },
        "451": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "topic"
        },
        "452": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "params"
        },
        "453": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.push"
        },
        "454": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.push"
        },
        "455": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "data"
        },
        "456": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.setAuth"
        },
        "457": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.setAuth"
        },
        "458": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "token"
        },
        "459": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.sendHeartbeat"
        },
        "460": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.sendHeartbeat"
        },
        "461": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.flushSendBuffer"
        },
        "462": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "default.flushSendBuffer"
        },
        "515": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "RealtimeClientOptions"
        },
        "516": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "517": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.transport"
        },
        "518": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.timeout"
        },
        "519": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.heartbeatIntervalMs"
        },
        "520": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.logger"
        },
        "521": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.encode"
        },
        "522": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.decode"
        },
        "523": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.reconnectAfterMs"
        },
        "524": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.headers"
        },
        "525": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "526": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.__index"
        },
        "528": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.params"
        },
        "529": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "530": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.__index"
        },
        "532": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.log_level"
        },
        "533": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.logLevel"
        },
        "534": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.fetch"
        },
        "535": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.worker"
        },
        "536": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.workerUrl"
        },
        "537": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.accessToken"
        },
        "538": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "539": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "540": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "RealtimeMessage"
        },
        "541": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type"
        },
        "542": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.topic"
        },
        "543": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.event"
        },
        "544": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.payload"
        },
        "545": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.ref"
        },
        "546": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "__type.join_ref"
        },
        "547": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimePostgresChangesFilter"
        },
        "548": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "549": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.event"
        },
        "550": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.schema"
        },
        "551": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.table"
        },
        "552": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.filter"
        },
        "553": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "554": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimePostgresChangesPayload"
        },
        "555": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "556": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "557": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "559": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimePostgresInsertPayload"
        },
        "560": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "561": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.eventType"
        },
        "562": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.new"
        },
        "563": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.old"
        },
        "564": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "565": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "566": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "567": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "569": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimePostgresUpdatePayload"
        },
        "570": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "571": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.eventType"
        },
        "572": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.new"
        },
        "573": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.old"
        },
        "574": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "575": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "576": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "578": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "RealtimePostgresDeletePayload"
        },
        "579": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "580": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.eventType"
        },
        "581": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.new"
        },
        "582": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "583": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.old"
        },
        "584": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "T"
        },
        "585": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type"
        },
        "586": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "__type.__index"
        },
        "588": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "RealtimePresenceJoinPayload"
        },
        "589": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "590": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.event"
        },
        "591": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.key"
        },
        "592": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.currentPresences"
        },
        "593": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.newPresences"
        },
        "594": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "T"
        },
        "595": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "596": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.__index"
        },
        "598": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "RealtimePresenceLeavePayload"
        },
        "599": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "600": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.event"
        },
        "601": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.key"
        },
        "602": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.currentPresences"
        },
        "603": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.leftPresences"
        },
        "604": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "T"
        },
        "605": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "606": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.__index"
        },
        "608": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "RealtimePresenceState"
        },
        "609": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "610": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.__index"
        },
        "612": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "T"
        },
        "613": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "614": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type.__index"
        },
        "616": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "__type"
        },
        "617": {
          "sourceFileName": "src/RealtimeClient.ts",
          "qualifiedName": "RealtimeRemoveChannelResponse"
        },
        "618": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_LISTEN_TYPES"
        },
        "619": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_LISTEN_TYPES.BROADCAST"
        },
        "620": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_LISTEN_TYPES.PRESENCE"
        },
        "621": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_LISTEN_TYPES.POSTGRES_CHANGES"
        },
        "622": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_LISTEN_TYPES.SYSTEM"
        },
        "623": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT"
        },
        "624": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL"
        },
        "625": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT"
        },
        "626": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE"
        },
        "627": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE"
        },
        "628": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "REALTIME_PRESENCE_LISTEN_EVENTS"
        },
        "629": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "REALTIME_PRESENCE_LISTEN_EVENTS.SYNC"
        },
        "630": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "REALTIME_PRESENCE_LISTEN_EVENTS.JOIN"
        },
        "631": {
          "sourceFileName": "src/RealtimePresence.ts",
          "qualifiedName": "REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE"
        },
        "632": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_SUBSCRIBE_STATES"
        },
        "633": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_SUBSCRIBE_STATES.SUBSCRIBED"
        },
        "634": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_SUBSCRIBE_STATES.TIMED_OUT"
        },
        "635": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_SUBSCRIBE_STATES.CLOSED"
        },
        "636": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR"
        },
        "637": {
          "sourceFileName": "src/RealtimeChannel.ts",
          "qualifiedName": "REALTIME_CHANNEL_STATES"
        }
      },
      "files": {
        "entries": {
          "1": "src/index.ts"
        },
        "reflections": {
          "1": 0
        }
      }
    },
    {
      "id": 0,
      "name": "@supabase/storage-js",
      "kind": 1,
      "flags": {},
      "originalName": "",
      "children": [
        {
          "id": 1,
          "name": "index",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 498,
              "name": "StorageApiError",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 499,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 17,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 500,
                      "name": "new StorageApiError",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 501,
                          "name": "message",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 502,
                          "name": "status",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 498,
                        "name": "StorageApiError"
                      },
                      "overwrites": {
                        "type": "reference",
                        "id": 495,
                        "name": "StorageError.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "id": 494,
                    "name": "StorageError.constructor"
                  }
                },
                {
                  "id": 503,
                  "name": "status",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 15,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 504,
                  "name": "toJSON",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 23,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 505,
                      "name": "toJSON",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 506,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 508,
                              "name": "message",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 26,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "defaultValue": "..."
                            },
                            {
                              "id": 507,
                              "name": "name",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 25,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              "defaultValue": "..."
                            },
                            {
                              "id": 509,
                              "name": "status",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/lib/errors.ts",
                                  "line": 27,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              "defaultValue": "..."
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [508, 507, 509]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [499]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [503]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [504]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 14,
                  "character": 13
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 493,
                  "name": "StorageError"
                }
              ]
            },
            {
              "id": 333,
              "name": "StorageClient",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 334,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/StorageClient.ts",
                      "line": 6,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 335,
                      "name": "new StorageClient",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 336,
                          "name": "url",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 337,
                          "name": "headers",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 338,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 339,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 340,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          },
                          "defaultValue": "{}"
                        },
                        {
                          "id": 341,
                          "name": "fetch",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 342,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 343,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 344,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      }
                                    },
                                    {
                                      "id": 345,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 333,
                        "name": "StorageClient"
                      },
                      "overwrites": {
                        "type": "reference",
                        "id": 5,
                        "name": "default.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "id": 4,
                    "name": "default.constructor"
                  }
                },
                {
                  "id": 376,
                  "name": "createBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 85,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 377,
                      "name": "createBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a new Storage bucket",
                        "returns": "newly created bucket id\n"
                      },
                      "parameters": [
                        {
                          "id": 378,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A unique identifier for the bucket you are creating."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 379,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 380,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 383,
                                  "name": "allowedMimeTypes",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 90,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "array",
                                        "elementType": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 382,
                                  "name": "fileSizeLimit",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 89,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 381,
                                  "name": "public",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 88,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [383, 382, 381]
                                }
                              ]
                            }
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 384,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 385,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 96,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 428,
                                            "name": "Bucket"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "name"
                                          }
                                        ],
                                        "qualifiedName": "Pick",
                                        "package": "typescript",
                                        "name": "Pick"
                                      }
                                    },
                                    {
                                      "id": 386,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 97,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [385, 386]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 387,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 388,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 100,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 389,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 101,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [388, 389]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 44,
                        "name": "default.createBucket"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 43,
                    "name": "default.createBucket"
                  }
                },
                {
                  "id": 417,
                  "name": "deleteBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 219,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 418,
                      "name": "deleteBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
                      },
                      "parameters": [
                        {
                          "id": 419,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to delete.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 420,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 421,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 223,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 422,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 423,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 223,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [423]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 424,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 224,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [421, 424]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 425,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 426,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 227,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 427,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 228,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [426, 427]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 85,
                        "name": "default.deleteBucket"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 84,
                    "name": "default.deleteBucket"
                  }
                },
                {
                  "id": 406,
                  "name": "emptyBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 184,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 407,
                      "name": "emptyBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Removes all objects inside a single bucket."
                      },
                      "parameters": [
                        {
                          "id": 408,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to empty.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 409,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 410,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 188,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 411,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 412,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 188,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [412]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 413,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 189,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [410, 413]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 414,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 415,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 192,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 416,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 193,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [415, 416]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 74,
                        "name": "default.emptyBucket"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 73,
                    "name": "default.emptyBucket"
                  }
                },
                {
                  "id": 346,
                  "name": "from",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/StorageClient.ts",
                      "line": 15,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 347,
                      "name": "from",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Perform file operation in a bucket."
                      },
                      "parameters": [
                        {
                          "id": 348,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The bucket id to operate on.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 96,
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 367,
                  "name": "getBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 48,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 368,
                      "name": "getBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Retrieves the details of an existing Storage bucket."
                      },
                      "parameters": [
                        {
                          "id": 369,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to retrieve.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 370,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 371,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 52,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 428,
                                        "name": "Bucket"
                                      }
                                    },
                                    {
                                      "id": 372,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 53,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [371, 372]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 373,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 374,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 56,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 375,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 57,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [374, 375]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 35,
                        "name": "default.getBucket"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 34,
                    "name": "default.getBucket"
                  }
                },
                {
                  "id": 359,
                  "name": "listBuckets",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 21,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 360,
                      "name": "listBuckets",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Retrieves the details of all Storage buckets within an existing project."
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 361,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 362,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 23,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 428,
                                          "name": "Bucket"
                                        }
                                      }
                                    },
                                    {
                                      "id": 363,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 24,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [362, 363]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 364,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 365,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 27,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 366,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 28,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [365, 366]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 27,
                        "name": "default.listBuckets"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 26,
                    "name": "default.listBuckets"
                  }
                },
                {
                  "id": 390,
                  "name": "updateBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 139,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 391,
                      "name": "updateBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Updates a Storage bucket"
                      },
                      "parameters": [
                        {
                          "id": 392,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A unique identifier for the bucket you are updating."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 393,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 394,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 397,
                                  "name": "allowedMimeTypes",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 144,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "array",
                                        "elementType": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 396,
                                  "name": "fileSizeLimit",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 143,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 395,
                                  "name": "public",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 142,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [397, 396, 395]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 398,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 399,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 148,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 400,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 401,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 148,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [401]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 402,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 149,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [399, 402]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 403,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 404,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 152,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 405,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 153,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [404, 405]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "id": 58,
                        "name": "default.updateBucket"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 57,
                    "name": "default.updateBucket"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [334]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [376, 417, 406, 346, 367, 359, 390]
                }
              ],
              "sources": [
                {
                  "fileName": "src/StorageClient.ts",
                  "line": 5,
                  "character": 13
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 3,
                  "name": "default"
                }
              ]
            },
            {
              "id": 493,
              "name": "StorageError",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 494,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 4,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 495,
                      "name": "new StorageError",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 496,
                          "name": "message",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 493,
                        "name": "StorageError"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "Error.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [494]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 1,
                  "character": 13
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "qualifiedName": "Error",
                  "package": "typescript",
                  "name": "Error"
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 498,
                  "name": "StorageApiError"
                },
                {
                  "type": "reference",
                  "id": 511,
                  "name": "StorageUnknownError"
                }
              ]
            },
            {
              "id": 511,
              "name": "StorageUnknownError",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 512,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 35,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 513,
                      "name": "new StorageUnknownError",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 514,
                          "name": "message",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 515,
                          "name": "originalError",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 511,
                        "name": "StorageUnknownError"
                      },
                      "overwrites": {
                        "type": "reference",
                        "id": 495,
                        "name": "StorageError.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "id": 494,
                    "name": "StorageError.constructor"
                  }
                },
                {
                  "id": 516,
                  "name": "originalError",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/errors.ts",
                      "line": 33,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [512]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [516]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 32,
                  "character": 13
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "id": 493,
                  "name": "StorageError"
                }
              ]
            },
            {
              "id": 428,
              "name": "Bucket",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 433,
                  "name": "allowed_mime_types",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 6,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                },
                {
                  "id": 434,
                  "name": "created_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 7,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 432,
                  "name": "file_size_limit",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 5,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 429,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 2,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 430,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 3,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 431,
                  "name": "owner",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 4,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 436,
                  "name": "public",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 9,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 435,
                  "name": "updated_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 8,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [433, 434, 432, 429, 430, 431, 436, 435]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 1,
                  "character": 17
                }
              ]
            },
            {
              "id": 471,
              "name": "DestinationOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 472,
                  "name": "destinationBucket",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 75,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [472]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 74,
                  "character": 17
                }
              ]
            },
            {
              "id": 478,
              "name": "FetchParameters",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 479,
                  "name": "signal",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Pass in an AbortController's signal to cancel the request."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 104,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [479]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 100,
                  "character": 17
                }
              ]
            },
            {
              "id": 437,
              "name": "FileObject",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 439,
                  "name": "bucket_id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 14,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 446,
                  "name": "buckets",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 21,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 428,
                    "name": "Bucket",
                    "dereferenced": {
                      "id": 428,
                      "name": "Bucket",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 433,
                          "name": "allowed_mime_types",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 6,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        },
                        {
                          "id": 434,
                          "name": "created_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 7,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 432,
                          "name": "file_size_limit",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 5,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 429,
                          "name": "id",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 2,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 430,
                          "name": "name",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 3,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 431,
                          "name": "owner",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 4,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 436,
                          "name": "public",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 9,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 435,
                          "name": "updated_at",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 8,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [433, 434, 432, 429, 430, 431, 436, 435]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 1,
                          "character": 17
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 443,
                  "name": "created_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 18,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 441,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 16,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 444,
                  "name": "last_accessed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 19,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 445,
                  "name": "metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 20,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 438,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 13,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 440,
                  "name": "owner",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 15,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 442,
                  "name": "updated_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 17,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [439, 446, 443, 441, 444, 445, 438, 440, 442]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 12,
                  "character": 17
                }
              ]
            },
            {
              "id": 447,
              "name": "FileObjectV2",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 451,
                  "name": "bucket_id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 28,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 456,
                  "name": "cache_control",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 33,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 457,
                  "name": "content_type",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 34,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 453,
                  "name": "created_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 30,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 458,
                  "name": "etag",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 35,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 448,
                  "name": "id",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 25,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 454,
                  "name": "last_accessed_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 31,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 459,
                  "name": "last_modified",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 36,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 460,
                  "name": "metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 37,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 450,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 27,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 455,
                  "name": "size",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 32,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 452,
                  "name": "updated_at",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 29,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 449,
                  "name": "version",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 26,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [451, 456, 457, 453, 458, 448, 454, 459, 460, 450, 455, 452, 449]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 24,
                  "character": 17
                }
              ]
            },
            {
              "id": 464,
              "name": "FileOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 465,
                  "name": "cacheControl",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 49,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 466,
                  "name": "contentType",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 53,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 468,
                  "name": "duplex",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 61,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 470,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Optionally add extra headers"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 71,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 469,
                  "name": "metadata",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The metadata option is an object that allows you to store additional information about the file. This information can be used to filter and search for files. The metadata object can contain any key-value pairs you want to store."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 66,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 467,
                  "name": "upsert",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 57,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [465, 466, 468, 470, 469, 467]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 45,
                  "character": 17
                }
              ]
            },
            {
              "id": 480,
              "name": "Metadata",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 481,
                  "name": "name",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 109,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [481]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 108,
                  "character": 17
                }
              ]
            },
            {
              "id": 473,
              "name": "SearchOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 474,
                  "name": "limit",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": " The number of files you want to be returned."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 82,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 475,
                  "name": "offset",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The starting position."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 87,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 477,
                  "name": "search",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The search string to filter files by."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 97,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 476,
                  "name": "sortBy",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The column to sort by. Can be any column inside a FileObject."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 92,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 461,
                    "name": "SortBy",
                    "dereferenced": {
                      "id": 461,
                      "name": "SortBy",
                      "kind": 256,
                      "kindString": "Interface",
                      "flags": {},
                      "children": [
                        {
                          "id": 462,
                          "name": "column",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 41,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 463,
                          "name": "order",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/lib/types.ts",
                              "line": 42,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [462, 463]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/lib/types.ts",
                          "line": 40,
                          "character": 17
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [474, 475, 477, 476]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 78,
                  "character": 17
                }
              ]
            },
            {
              "id": 461,
              "name": "SortBy",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 462,
                  "name": "column",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 41,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 463,
                  "name": "order",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 42,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [462, 463]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 40,
                  "character": 17
                }
              ]
            },
            {
              "id": 482,
              "name": "TransformOptions",
              "kind": 256,
              "kindString": "Interface",
              "flags": {},
              "children": [
                {
                  "id": 487,
                  "name": "format",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Specify the format of the image requested.",
                    "text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 140,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "origin"
                  }
                },
                {
                  "id": 484,
                  "name": "height",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The height of the image in pixels."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 120,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 486,
                  "name": "quality",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 133,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 485,
                  "name": "resize",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 127,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "cover"
                      },
                      {
                        "type": "literal",
                        "value": "contain"
                      },
                      {
                        "type": "literal",
                        "value": "fill"
                      }
                    ]
                  }
                },
                {
                  "id": 483,
                  "name": "width",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The width of the image in pixels."
                  },
                  "sources": [
                    {
                      "fileName": "src/lib/types.ts",
                      "line": 116,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [487, 484, 486, 485, 483]
                }
              ],
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 112,
                  "character": 17
                }
              ]
            },
            {
              "id": 488,
              "name": "Camelize",
              "kind": 4194304,
              "kindString": "Type alias",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/types.ts",
                  "line": 147,
                  "character": 12
                }
              ],
              "typeParameter": [
                {
                  "id": 489,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "type": {
                "type": "mapped",
                "parameter": "K",
                "parameterType": {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 489,
                    "name": "T"
                  }
                },
                "templateType": {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "reference",
                    "name": "K"
                  },
                  "objectType": {
                    "type": "reference",
                    "id": 489,
                    "name": "T"
                  }
                },
                "nameType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "K"
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ],
                      "qualifiedName": "Extract",
                      "package": "typescript",
                      "name": "Extract"
                    }
                  ],
                  "name": "CamelCase"
                }
              }
            },
            {
              "id": 490,
              "name": "isStorageError",
              "kind": 64,
              "kindString": "Function",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/lib/errors.ts",
                  "line": 10,
                  "character": 16
                }
              ],
              "signatures": [
                {
                  "id": 491,
                  "name": "isStorageError",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 492,
                      "name": "error",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "predicate",
                    "name": "error",
                    "asserts": false,
                    "targetType": {
                      "type": "reference",
                      "id": 493,
                      "name": "StorageError"
                    }
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Classes",
              "kind": 128,
              "children": [498, 333, 493, 511]
            },
            {
              "title": "Interfaces",
              "kind": 256,
              "children": [428, 471, 478, 437, 447, 464, 480, 473, 461, 482]
            },
            {
              "title": "Type Aliases",
              "kind": 4194304,
              "children": [488]
            },
            {
              "title": "Functions",
              "kind": 64,
              "children": [490]
            }
          ],
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 1,
              "character": 0
            }
          ]
        },
        {
          "id": 2,
          "name": "packages/StorageBucketApi",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 3,
              "name": "default",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 4,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 12,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 5,
                      "name": "new default",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 6,
                          "name": "url",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 7,
                          "name": "headers",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 8,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 9,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 10,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          },
                          "defaultValue": "{}"
                        },
                        {
                          "id": 11,
                          "name": "fetch",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 12,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 13,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 14,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      }
                                    },
                                    {
                                      "id": 15,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 3,
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 43,
                  "name": "createBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 85,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 44,
                      "name": "createBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a new Storage bucket",
                        "returns": "newly created bucket id\n"
                      },
                      "parameters": [
                        {
                          "id": 45,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A unique identifier for the bucket you are creating."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 46,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 47,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 50,
                                  "name": "allowedMimeTypes",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 90,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "array",
                                        "elementType": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 49,
                                  "name": "fileSizeLimit",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 89,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 48,
                                  "name": "public",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 88,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [50, 49, 48]
                                }
                              ]
                            }
                          },
                          "defaultValue": "..."
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 51,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 52,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 96,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 428,
                                            "name": "Bucket"
                                          },
                                          {
                                            "type": "literal",
                                            "value": "name"
                                          }
                                        ],
                                        "qualifiedName": "Pick",
                                        "package": "typescript",
                                        "name": "Pick"
                                      }
                                    },
                                    {
                                      "id": 53,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 97,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [52, 53]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 54,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 55,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 100,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 56,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 101,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [55, 56]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 84,
                  "name": "deleteBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 219,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 85,
                      "name": "deleteBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
                      },
                      "parameters": [
                        {
                          "id": 86,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to delete.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 87,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 88,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 223,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 89,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 90,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 223,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [90]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 91,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 224,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [88, 91]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 92,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 93,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 227,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 94,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 228,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [93, 94]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 73,
                  "name": "emptyBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 184,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 74,
                      "name": "emptyBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Removes all objects inside a single bucket."
                      },
                      "parameters": [
                        {
                          "id": 75,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to empty.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 76,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 77,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 188,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 78,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 79,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 188,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [79]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 80,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 189,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [77, 80]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 81,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 82,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 192,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 83,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 193,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [82, 83]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 34,
                  "name": "getBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 48,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 35,
                      "name": "getBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Retrieves the details of an existing Storage bucket."
                      },
                      "parameters": [
                        {
                          "id": 36,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The unique identifier of the bucket you would like to retrieve.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 37,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 38,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 52,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 428,
                                        "name": "Bucket"
                                      }
                                    },
                                    {
                                      "id": 39,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 53,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [38, 39]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 40,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 41,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 56,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 42,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 57,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [41, 42]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 26,
                  "name": "listBuckets",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 21,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 27,
                      "name": "listBuckets",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Retrieves the details of all Storage buckets within an existing project."
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 28,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 29,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 23,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 428,
                                          "name": "Bucket"
                                        }
                                      }
                                    },
                                    {
                                      "id": 30,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 24,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [29, 30]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 31,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 32,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 27,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 33,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 28,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [32, 33]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 57,
                  "name": "updateBucket",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageBucketApi.ts",
                      "line": 139,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 58,
                      "name": "updateBucket",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Updates a Storage bucket"
                      },
                      "parameters": [
                        {
                          "id": 59,
                          "name": "id",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "A unique identifier for the bucket you are updating."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 60,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 61,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 64,
                                  "name": "allowedMimeTypes",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 144,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "array",
                                        "elementType": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 63,
                                  "name": "fileSizeLimit",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 143,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "number"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 62,
                                  "name": "public",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageBucketApi.ts",
                                      "line": 142,
                                      "character": 6
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [64, 63, 62]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 65,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 66,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 148,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 67,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 68,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageBucketApi.ts",
                                                  "line": 148,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [68]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 69,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 149,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [66, 69]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 70,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 71,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 152,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 72,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageBucketApi.ts",
                                          "line": 153,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [71, 72]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [4]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [43, 84, 73, 34, 26, 57]
                }
              ],
              "sources": [
                {
                  "fileName": "src/packages/StorageBucketApi.ts",
                  "line": 7,
                  "character": 21
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 333,
                  "name": "StorageClient"
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Classes",
              "kind": 128,
              "children": [3]
            }
          ],
          "sources": [
            {
              "fileName": "src/packages/StorageBucketApi.ts",
              "line": 1,
              "character": 0
            }
          ]
        },
        {
          "id": 95,
          "name": "packages/StorageFileApi",
          "kind": 2,
          "kindString": "Module",
          "flags": {},
          "children": [
            {
              "id": 96,
              "name": "default",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "children": [
                {
                  "id": 97,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 48,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 98,
                      "name": "new default",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 99,
                          "name": "url",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 100,
                          "name": "headers",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 101,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "indexSignature": {
                                "id": 102,
                                "name": "__index",
                                "kind": 8192,
                                "kindString": "Index signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 103,
                                    "name": "key",
                                    "kind": 32768,
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          },
                          "defaultValue": "{}"
                        },
                        {
                          "id": 104,
                          "name": "bucketId",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 105,
                          "name": "fetch",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 106,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 107,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 108,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInfo",
                                        "package": "typescript",
                                        "name": "RequestInfo"
                                      }
                                    },
                                    {
                                      "id": 109,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 96,
                        "name": "default"
                      }
                    }
                  ]
                },
                {
                  "id": 211,
                  "name": "copy",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 373,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 212,
                      "name": "copy",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Copies an existing file to a new path in the same bucket."
                      },
                      "parameters": [
                        {
                          "id": 213,
                          "name": "fromPath",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The original file path, including the current file name. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 214,
                          "name": "toPath",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The new file path, including the new file name. For example `folder/image-copy.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 215,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The destination options.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 471,
                            "name": "DestinationOptions",
                            "dereferenced": {
                              "id": 471,
                              "name": "DestinationOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 472,
                                  "name": "destinationBucket",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 75,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [472]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 74,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 216,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 217,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 379,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 218,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 219,
                                              "name": "path",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 379,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [219]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 220,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 380,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [217, 220]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 221,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 222,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 383,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 223,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 384,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [222, 223]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 167,
                  "name": "createSignedUploadUrl",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 243,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 168,
                      "name": "createSignedUploadUrl",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a signed upload URL.\nSigned upload URLs can be used to upload files to the bucket without further authentication.\nThey are valid for 2 hours."
                      },
                      "parameters": [
                        {
                          "id": 169,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The file path, including the current file name. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 170,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 171,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 172,
                                  "name": "upsert",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "If set to true, allows the file to be overwritten if it already exists.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 245,
                                      "character": 16
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [172]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 173,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 174,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 248,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 175,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 178,
                                              "name": "path",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 248,
                                                  "character": 50
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 176,
                                              "name": "signedUrl",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 248,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 177,
                                              "name": "token",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 248,
                                                  "character": 35
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [178, 176, 177]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 179,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 249,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [174, 179]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 180,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 181,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 252,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 182,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 253,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [181, 182]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 224,
                  "name": "createSignedUrl",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 417,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 225,
                      "name": "createSignedUrl",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates a signed URL. Use a signed URL to share a file for a fixed amount of time."
                      },
                      "parameters": [
                        {
                          "id": 226,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The file path, including the current file name. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 227,
                          "name": "expiresIn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 228,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 229,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 230,
                                  "name": "download",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 420,
                                      "character": 16
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 231,
                                  "name": "transform",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Transform the asset before serving it to the client.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 420,
                                      "character": 45
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 482,
                                    "name": "TransformOptions",
                                    "dereferenced": {
                                      "id": 482,
                                      "name": "TransformOptions",
                                      "kind": 256,
                                      "kindString": "Interface",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 487,
                                          "name": "format",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Specify the format of the image requested.",
                                            "text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 140,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "origin"
                                          }
                                        },
                                        {
                                          "id": 484,
                                          "name": "height",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The height of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 120,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 486,
                                          "name": "quality",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 133,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 485,
                                          "name": "resize",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 127,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "cover"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "contain"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "fill"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 483,
                                          "name": "width",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The width of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 116,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [487, 484, 486, 485, 483]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 112,
                                          "character": 17
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [230, 231]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 232,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 233,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 423,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 234,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 235,
                                              "name": "signedUrl",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 423,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [235]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 236,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 424,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [233, 236]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 237,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 238,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 427,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 239,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 428,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [238, 239]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 240,
                  "name": "createSignedUrls",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 462,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 241,
                      "name": "createSignedUrls",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time."
                      },
                      "parameters": [
                        {
                          "id": 242,
                          "name": "paths",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`."
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        },
                        {
                          "id": 243,
                          "name": "expiresIn",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 244,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 245,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 246,
                                  "name": "download",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 465,
                                      "character": 16
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [246]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 247,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 248,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 468,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reflection",
                                          "declaration": {
                                            "id": 249,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "children": [
                                              {
                                                "id": 250,
                                                "name": "error",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/packages/StorageFileApi.ts",
                                                    "line": 468,
                                                    "character": 16
                                                  }
                                                ],
                                                "type": {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": null
                                                    },
                                                    {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "id": 251,
                                                "name": "path",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/packages/StorageFileApi.ts",
                                                    "line": 468,
                                                    "character": 38
                                                  }
                                                ],
                                                "type": {
                                                  "type": "union",
                                                  "types": [
                                                    {
                                                      "type": "literal",
                                                      "value": null
                                                    },
                                                    {
                                                      "type": "intrinsic",
                                                      "name": "string"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "id": 252,
                                                "name": "signedUrl",
                                                "kind": 1024,
                                                "kindString": "Property",
                                                "flags": {},
                                                "sources": [
                                                  {
                                                    "fileName": "src/packages/StorageFileApi.ts",
                                                    "line": 468,
                                                    "character": 59
                                                  }
                                                ],
                                                "type": {
                                                  "type": "intrinsic",
                                                  "name": "string"
                                                }
                                              }
                                            ],
                                            "groups": [
                                              {
                                                "title": "Properties",
                                                "kind": 1024,
                                                "children": [250, 251, 252]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "id": 253,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 469,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [248, 253]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 254,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 255,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 472,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 256,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 473,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [255, 256]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 257,
                  "name": "download",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 511,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 258,
                      "name": "download",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead."
                      },
                      "parameters": [
                        {
                          "id": 259,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The full path and file name of the file to be downloaded. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 260,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 261,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 262,
                                  "name": "transform",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Transform the asset before serving it to the client.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 513,
                                      "character": 16
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 482,
                                    "name": "TransformOptions",
                                    "dereferenced": {
                                      "id": 482,
                                      "name": "TransformOptions",
                                      "kind": 256,
                                      "kindString": "Interface",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 487,
                                          "name": "format",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Specify the format of the image requested.",
                                            "text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 140,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "origin"
                                          }
                                        },
                                        {
                                          "id": 484,
                                          "name": "height",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The height of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 120,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 486,
                                          "name": "quality",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 133,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 485,
                                          "name": "resize",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 127,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "cover"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "contain"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "fill"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 483,
                                          "name": "width",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The width of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 116,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [487, 484, 486, 485, 483]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 112,
                                          "character": 17
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [262]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 263,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 264,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 516,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "Blob",
                                        "package": "typescript",
                                        "name": "Blob"
                                      }
                                    },
                                    {
                                      "id": 265,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 517,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [264, 265]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 266,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 267,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 520,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 268,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 521,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [267, 268]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 278,
                  "name": "exists",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 583,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 279,
                      "name": "exists",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Checks the existence of a file."
                      },
                      "parameters": [
                        {
                          "id": 280,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 281,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 282,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 587,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 283,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 588,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [282, 283]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 284,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 285,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 591,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    },
                                    {
                                      "id": 286,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 592,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [285, 286]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 287,
                  "name": "getPublicUrl",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 624,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 288,
                      "name": "getPublicUrl",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\nThis function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset."
                      },
                      "parameters": [
                        {
                          "id": 289,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The path and name of the file to generate the public URL for. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 290,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 291,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 292,
                                  "name": "download",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 626,
                                      "character": 16
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 293,
                                  "name": "transform",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Transform the asset before serving it to the client.\n"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/packages/StorageFileApi.ts",
                                      "line": 626,
                                      "character": 45
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 482,
                                    "name": "TransformOptions",
                                    "dereferenced": {
                                      "id": 482,
                                      "name": "TransformOptions",
                                      "kind": 256,
                                      "kindString": "Interface",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 487,
                                          "name": "format",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Specify the format of the image requested.",
                                            "text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 140,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "origin"
                                          }
                                        },
                                        {
                                          "id": 484,
                                          "name": "height",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The height of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 120,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 486,
                                          "name": "quality",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 133,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        },
                                        {
                                          "id": 485,
                                          "name": "resize",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 127,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "literal",
                                                "value": "cover"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "contain"
                                              },
                                              {
                                                "type": "literal",
                                                "value": "fill"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 483,
                                          "name": "width",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "shortText": "The width of the image in pixels."
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 116,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "number"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [487, 484, 486, 485, 483]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 112,
                                          "character": 17
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [292, 293]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 294,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 295,
                              "name": "data",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "src/packages/StorageFileApi.ts",
                                  "line": 627,
                                  "character": 7
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 296,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 297,
                                      "name": "publicUrl",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 627,
                                          "character": 15
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [297]
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [295]
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": 269,
                  "name": "info",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 550,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 270,
                      "name": "info",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Retrieves the details of an existing file."
                      },
                      "parameters": [
                        {
                          "id": 271,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 272,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 273,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 554,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 488,
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "id": 447,
                                            "name": "FileObjectV2"
                                          }
                                        ],
                                        "name": "Camelize"
                                      }
                                    },
                                    {
                                      "id": 274,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 555,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [273, 274]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 275,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 276,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 558,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 277,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 559,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [276, 277]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 307,
                  "name": "list",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 758,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 308,
                      "name": "list",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Lists all the files within a bucket."
                      },
                      "parameters": [
                        {
                          "id": 309,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The folder path.\n"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 310,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 473,
                            "name": "SearchOptions",
                            "dereferenced": {
                              "id": 473,
                              "name": "SearchOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 474,
                                  "name": "limit",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": " The number of files you want to be returned."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 82,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                },
                                {
                                  "id": 475,
                                  "name": "offset",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The starting position."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 87,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                },
                                {
                                  "id": 477,
                                  "name": "search",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The search string to filter files by."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 97,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 476,
                                  "name": "sortBy",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The column to sort by. Can be any column inside a FileObject."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 92,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 461,
                                    "name": "SortBy",
                                    "dereferenced": {
                                      "id": 461,
                                      "name": "SortBy",
                                      "kind": 256,
                                      "kindString": "Interface",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 462,
                                          "name": "column",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 41,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        },
                                        {
                                          "id": 463,
                                          "name": "order",
                                          "kind": 1024,
                                          "kindString": "Property",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "sources": [
                                            {
                                              "fileName": "src/lib/types.ts",
                                              "line": 42,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "kind": 1024,
                                          "children": [462, 463]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/lib/types.ts",
                                          "line": 40,
                                          "character": 17
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [474, 475, 477, 476]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 78,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 311,
                          "name": "parameters",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 478,
                            "name": "FetchParameters",
                            "dereferenced": {
                              "id": 478,
                              "name": "FetchParameters",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 479,
                                  "name": "signal",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Pass in an AbortController's signal to cancel the request."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 104,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "qualifiedName": "AbortSignal",
                                    "package": "typescript",
                                    "name": "AbortSignal"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [479]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 100,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 312,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 313,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 764,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 437,
                                          "name": "FileObject"
                                        }
                                      }
                                    },
                                    {
                                      "id": 314,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 765,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [313, 314]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 315,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 316,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 768,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 317,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 769,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [316, 317]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 198,
                  "name": "move",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 330,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 199,
                      "name": "move",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Moves an existing file to a new path in the same bucket."
                      },
                      "parameters": [
                        {
                          "id": 200,
                          "name": "fromPath",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The original file path, including the current file name. For example `folder/image.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 201,
                          "name": "toPath",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The new file path, including the new file name. For example `folder/image-new.png`."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 202,
                          "name": "options",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The destination options.\n"
                          },
                          "type": {
                            "type": "reference",
                            "id": 471,
                            "name": "DestinationOptions",
                            "dereferenced": {
                              "id": 471,
                              "name": "DestinationOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 472,
                                  "name": "destinationBucket",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 75,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [472]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 74,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 203,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 204,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 336,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 205,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 206,
                                              "name": "message",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 336,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [206]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 207,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 337,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [204, 207]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 208,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 209,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 340,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 210,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 341,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [209, 210]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 298,
                  "name": "remove",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 662,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 299,
                      "name": "remove",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Deletes files within the same bucket"
                      },
                      "parameters": [
                        {
                          "id": 300,
                          "name": "paths",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n"
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 301,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 302,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 666,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "id": 437,
                                          "name": "FileObject"
                                        }
                                      }
                                    },
                                    {
                                      "id": 303,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 667,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [302, 303]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 304,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 305,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 670,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 306,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 671,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [305, 306]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 321,
                  "name": "toBase64",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 795,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 322,
                      "name": "toBase64",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 323,
                          "name": "data",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                },
                {
                  "id": 183,
                  "name": "update",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 296,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 184,
                      "name": "update",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Replaces an existing file at the specified path with a new one."
                      },
                      "parameters": [
                        {
                          "id": 185,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 186,
                          "name": "fileBody",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The body of the file to be stored in the bucket.\n"
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "ArrayBuffer",
                                "package": "typescript",
                                "name": "ArrayBuffer"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "ArrayBufferView",
                                "package": "typescript",
                                "name": "ArrayBufferView"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "Blob",
                                "package": "typescript",
                                "name": "Blob"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "Buffer",
                                "package": "@types/node",
                                "name": "Buffer"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "File",
                                "package": "typescript",
                                "name": "File"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "FormData",
                                "package": "typescript",
                                "name": "FormData"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "NodeJS.ReadableStream",
                                "package": "@types/node",
                                "name": "ReadableStream"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "qualifiedName": "Uint8Array",
                                    "package": "typescript",
                                    "name": "Uint8Array"
                                  }
                                ],
                                "qualifiedName": "ReadableStream",
                                "package": "typescript",
                                "name": "ReadableStream"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URLSearchParams",
                                "package": "typescript",
                                "name": "URLSearchParams"
                              }
                            ]
                          }
                        },
                        {
                          "id": 187,
                          "name": "fileOptions",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 464,
                            "name": "FileOptions",
                            "dereferenced": {
                              "id": 464,
                              "name": "FileOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 465,
                                  "name": "cacheControl",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 49,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 466,
                                  "name": "contentType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 53,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 468,
                                  "name": "duplex",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 61,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 470,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Optionally add extra headers"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 71,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 469,
                                  "name": "metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The metadata option is an object that allows you to store additional information about the file. This information can be used to filter and search for files. The metadata object can contain any key-value pairs you want to store."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 66,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 467,
                                  "name": "upsert",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 57,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [465, 466, 468, 470, 469, 467]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 45,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 188,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 189,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 312,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 190,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 193,
                                              "name": "fullPath",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 312,
                                                  "character": 42
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 191,
                                              "name": "id",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 312,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 192,
                                              "name": "path",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 312,
                                                  "character": 28
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [193, 191, 192]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 194,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 313,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [189, 194]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 195,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 196,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 316,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 197,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 317,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [196, 197]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 137,
                  "name": "upload",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 154,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 138,
                      "name": "upload",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Uploads a file to an existing bucket."
                      },
                      "parameters": [
                        {
                          "id": 139,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 140,
                          "name": "fileBody",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The body of the file to be stored in the bucket.\n"
                          },
                          "type": {
                            "type": "reference",
                            "name": "FileBody"
                          }
                        },
                        {
                          "id": 141,
                          "name": "fileOptions",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 464,
                            "name": "FileOptions",
                            "dereferenced": {
                              "id": 464,
                              "name": "FileOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 465,
                                  "name": "cacheControl",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 49,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 466,
                                  "name": "contentType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 53,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 468,
                                  "name": "duplex",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 61,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 470,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Optionally add extra headers"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 71,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 469,
                                  "name": "metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The metadata option is an object that allows you to store additional information about the file. This information can be used to filter and search for files. The metadata object can contain any key-value pairs you want to store."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 66,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 467,
                                  "name": "upsert",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 57,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [465, 466, 468, 470, 469, 467]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 45,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 142,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 143,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 160,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 144,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 147,
                                              "name": "fullPath",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 160,
                                                  "character": 42
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 145,
                                              "name": "id",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 160,
                                                  "character": 16
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            },
                                            {
                                              "id": 146,
                                              "name": "path",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 160,
                                                  "character": 28
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [147, 145, 146]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "id": 148,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 161,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [143, 148]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 149,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 150,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 164,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      }
                                    },
                                    {
                                      "id": 151,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 165,
                                          "character": 8
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "id": 493,
                                        "name": "StorageError"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [150, 151]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                },
                {
                  "id": 152,
                  "name": "uploadToSignedUrl",
                  "kind": 2048,
                  "kindString": "Method",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/packages/StorageFileApi.ts",
                      "line": 177,
                      "character": 8
                    }
                  ],
                  "signatures": [
                    {
                      "id": 153,
                      "name": "uploadToSignedUrl",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "comment": {
                        "shortText": "Upload a file with a token generated from `createSignedUploadUrl`."
                      },
                      "parameters": [
                        {
                          "id": 154,
                          "name": "path",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 155,
                          "name": "token",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The token generated from `createSignedUploadUrl`"
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 156,
                          "name": "fileBody",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "comment": {
                            "shortText": "The body of the file to be stored in the bucket.\n"
                          },
                          "type": {
                            "type": "reference",
                            "name": "FileBody"
                          }
                        },
                        {
                          "id": 157,
                          "name": "fileOptions",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "id": 464,
                            "name": "FileOptions",
                            "dereferenced": {
                              "id": 464,
                              "name": "FileOptions",
                              "kind": 256,
                              "kindString": "Interface",
                              "flags": {},
                              "children": [
                                {
                                  "id": 465,
                                  "name": "cacheControl",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 49,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 466,
                                  "name": "contentType",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 53,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 468,
                                  "name": "duplex",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 61,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 470,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Optionally add extra headers"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 71,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 469,
                                  "name": "metadata",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The metadata option is an object that allows you to store additional information about the file. This information can be used to filter and search for files. The metadata object can contain any key-value pairs you want to store."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 66,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    ],
                                    "qualifiedName": "Record",
                                    "package": "typescript",
                                    "name": "Record"
                                  }
                                },
                                {
                                  "id": 467,
                                  "name": "upsert",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/lib/types.ts",
                                      "line": 57,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [465, 466, 468, 470, 469, 467]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/lib/types.ts",
                                  "line": 45,
                                  "character": 17
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 158,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 159,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 220,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 160,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 162,
                                              "name": "fullPath",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 220,
                                                  "character": 35
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "any"
                                              },
                                              "defaultValue": "data.Key"
                                            },
                                            {
                                              "id": 161,
                                              "name": "path",
                                              "kind": 1024,
                                              "kindString": "Property",
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "src/packages/StorageFileApi.ts",
                                                  "line": 220,
                                                  "character": 18
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              "defaultValue": "cleanPath"
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "kind": 1024,
                                              "children": [162, 161]
                                            }
                                          ]
                                        }
                                      },
                                      "defaultValue": "..."
                                    },
                                    {
                                      "id": 163,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 221,
                                          "character": 10
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      },
                                      "defaultValue": "null"
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [159, 163]
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 164,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 165,
                                      "name": "data",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/packages/StorageFileApi.ts",
                                          "line": 225,
                                          "character": 17
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": null
                                      },
                                      "defaultValue": "null"
                                    },
                                    {
                                      "id": 166,
                                      "name": "error",
                                      "kind": 1024,
                                      "kindString": "Property",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "kind": 1024,
                                      "children": [165, 166]
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [97]
                },
                {
                  "title": "Methods",
                  "kind": 2048,
                  "children": [
                    211, 167, 224, 240, 257, 278, 287, 269, 307, 198, 298, 321, 183, 137, 152
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "src/packages/StorageFileApi.ts",
                  "line": 42,
                  "character": 21
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Classes",
              "kind": 128,
              "children": [96]
            }
          ],
          "sources": [
            {
              "fileName": "src/packages/StorageFileApi.ts",
              "line": 1,
              "character": 0
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "kind": 2,
          "children": [1, 2, 95]
        }
      ]
    },
    {
      "id": 0,
      "name": "@supabase/functions-js",
      "kind": 1,
      "kindString": "Project",
      "flags": {},
      "originalName": "",
      "children": [
        {
          "id": 67,
          "name": "FunctionRegion",
          "kind": 8,
          "kindString": "Enumeration",
          "flags": {},
          "children": [
            {
              "id": 68,
              "name": "Any",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 45,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "any"
              },
              "defaultValue": "\"any\""
            },
            {
              "id": 69,
              "name": "ApNortheast1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 46,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ap-northeast-1"
              },
              "defaultValue": "\"ap-northeast-1\""
            },
            {
              "id": 70,
              "name": "ApNortheast2",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 47,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ap-northeast-2"
              },
              "defaultValue": "\"ap-northeast-2\""
            },
            {
              "id": 71,
              "name": "ApSouth1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 48,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ap-south-1"
              },
              "defaultValue": "\"ap-south-1\""
            },
            {
              "id": 72,
              "name": "ApSoutheast1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 49,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ap-southeast-1"
              },
              "defaultValue": "\"ap-southeast-1\""
            },
            {
              "id": 73,
              "name": "ApSoutheast2",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 50,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ap-southeast-2"
              },
              "defaultValue": "\"ap-southeast-2\""
            },
            {
              "id": 74,
              "name": "CaCentral1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 51,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "ca-central-1"
              },
              "defaultValue": "\"ca-central-1\""
            },
            {
              "id": 75,
              "name": "EuCentral1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 52,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "eu-central-1"
              },
              "defaultValue": "\"eu-central-1\""
            },
            {
              "id": 76,
              "name": "EuWest1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 53,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "eu-west-1"
              },
              "defaultValue": "\"eu-west-1\""
            },
            {
              "id": 77,
              "name": "EuWest2",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 54,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "eu-west-2"
              },
              "defaultValue": "\"eu-west-2\""
            },
            {
              "id": 78,
              "name": "EuWest3",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 55,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "eu-west-3"
              },
              "defaultValue": "\"eu-west-3\""
            },
            {
              "id": 79,
              "name": "SaEast1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 56,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "sa-east-1"
              },
              "defaultValue": "\"sa-east-1\""
            },
            {
              "id": 80,
              "name": "UsEast1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 57,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "us-east-1"
              },
              "defaultValue": "\"us-east-1\""
            },
            {
              "id": 81,
              "name": "UsWest1",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 58,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "us-west-1"
              },
              "defaultValue": "\"us-west-1\""
            },
            {
              "id": 82,
              "name": "UsWest2",
              "kind": 16,
              "kindString": "Enumeration Member",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 59,
                  "character": 2
                }
              ],
              "type": {
                "type": "literal",
                "value": "us-west-2"
              },
              "defaultValue": "\"us-west-2\""
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "kind": 16,
              "children": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 44,
              "character": 12
            }
          ]
        },
        {
          "id": 1,
          "name": "FunctionsClient",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 2,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 3,
                  "name": "new FunctionsClient",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 4,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 5,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 6,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 8,
                              "name": "customFetch",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/FunctionsClient.ts",
                                  "line": 26,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 9,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {},
                                  "signatures": [
                                    {
                                      "id": 10,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 11,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "qualifiedName": "RequestInfo",
                                                "package": "typescript",
                                                "name": "RequestInfo"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 12,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    },
                                    {
                                      "id": 13,
                                      "name": "__type",
                                      "kind": 4096,
                                      "kindString": "Call signature",
                                      "flags": {},
                                      "parameters": [
                                        {
                                          "id": 14,
                                          "name": "input",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {},
                                          "type": {
                                            "type": "union",
                                            "types": [
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "Request",
                                                "package": "typescript",
                                                "name": "Request"
                                              },
                                              {
                                                "type": "reference",
                                                "qualifiedName": "URL",
                                                "package": "typescript",
                                                "name": "URL"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "id": 15,
                                          "name": "init",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "type": {
                                            "type": "reference",
                                            "qualifiedName": "RequestInit",
                                            "package": "typescript",
                                            "name": "RequestInit"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Response",
                                            "package": "typescript",
                                            "name": "Response"
                                          }
                                        ],
                                        "qualifiedName": "Promise",
                                        "package": "typescript",
                                        "name": "Promise"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 7,
                              "name": "headers",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/FunctionsClient.ts",
                                  "line": 25,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ],
                                "qualifiedName": "Record",
                                "package": "typescript",
                                "name": "Record"
                              }
                            },
                            {
                              "id": 16,
                              "name": "region",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "src/FunctionsClient.ts",
                                  "line": 27,
                                  "character": 6
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 67,
                                "name": "FunctionRegion",
                                "dereferenced": {
                                  "id": 67,
                                  "name": "FunctionRegion",
                                  "kind": 8,
                                  "kindString": "Enumeration",
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 68,
                                      "name": "Any",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 45,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "any"
                                      },
                                      "defaultValue": "\"any\""
                                    },
                                    {
                                      "id": 69,
                                      "name": "ApNortheast1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 46,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ap-northeast-1"
                                      },
                                      "defaultValue": "\"ap-northeast-1\""
                                    },
                                    {
                                      "id": 70,
                                      "name": "ApNortheast2",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 47,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ap-northeast-2"
                                      },
                                      "defaultValue": "\"ap-northeast-2\""
                                    },
                                    {
                                      "id": 71,
                                      "name": "ApSouth1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 48,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ap-south-1"
                                      },
                                      "defaultValue": "\"ap-south-1\""
                                    },
                                    {
                                      "id": 72,
                                      "name": "ApSoutheast1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 49,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ap-southeast-1"
                                      },
                                      "defaultValue": "\"ap-southeast-1\""
                                    },
                                    {
                                      "id": 73,
                                      "name": "ApSoutheast2",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 50,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ap-southeast-2"
                                      },
                                      "defaultValue": "\"ap-southeast-2\""
                                    },
                                    {
                                      "id": 74,
                                      "name": "CaCentral1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 51,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "ca-central-1"
                                      },
                                      "defaultValue": "\"ca-central-1\""
                                    },
                                    {
                                      "id": 75,
                                      "name": "EuCentral1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 52,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "eu-central-1"
                                      },
                                      "defaultValue": "\"eu-central-1\""
                                    },
                                    {
                                      "id": 76,
                                      "name": "EuWest1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 53,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "eu-west-1"
                                      },
                                      "defaultValue": "\"eu-west-1\""
                                    },
                                    {
                                      "id": 77,
                                      "name": "EuWest2",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 54,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "eu-west-2"
                                      },
                                      "defaultValue": "\"eu-west-2\""
                                    },
                                    {
                                      "id": 78,
                                      "name": "EuWest3",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 55,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "eu-west-3"
                                      },
                                      "defaultValue": "\"eu-west-3\""
                                    },
                                    {
                                      "id": 79,
                                      "name": "SaEast1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 56,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "sa-east-1"
                                      },
                                      "defaultValue": "\"sa-east-1\""
                                    },
                                    {
                                      "id": 80,
                                      "name": "UsEast1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 57,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "us-east-1"
                                      },
                                      "defaultValue": "\"us-east-1\""
                                    },
                                    {
                                      "id": 81,
                                      "name": "UsWest1",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 58,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "us-west-1"
                                      },
                                      "defaultValue": "\"us-west-1\""
                                    },
                                    {
                                      "id": 82,
                                      "name": "UsWest2",
                                      "kind": 16,
                                      "kindString": "Enumeration Member",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 59,
                                          "character": 2
                                        }
                                      ],
                                      "type": {
                                        "type": "literal",
                                        "value": "us-west-2"
                                      },
                                      "defaultValue": "\"us-west-2\""
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Enumeration Members",
                                      "kind": 16,
                                      "children": [
                                        68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82
                                      ]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "src/types.ts",
                                      "line": 44,
                                      "character": 12
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "kind": 1024,
                              "children": [8, 7, 16]
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 1,
                    "name": "FunctionsClient"
                  }
                }
              ]
            },
            {
              "id": 20,
              "name": "fetch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 16,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 21,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 22,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 23,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "qualifiedName": "RequestInfo",
                                "package": "typescript",
                                "name": "RequestInfo"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 24,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    },
                    {
                      "id": 25,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 26,
                          "name": "input",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "Request",
                                "package": "typescript",
                                "name": "Request"
                              },
                              {
                                "type": "reference",
                                "qualifiedName": "URL",
                                "package": "typescript",
                                "name": "URL"
                              }
                            ]
                          }
                        },
                        {
                          "id": 27,
                          "name": "init",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "qualifiedName": "RequestInit",
                            "package": "typescript",
                            "name": "RequestInit"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Response",
                            "package": "typescript",
                            "name": "Response"
                          }
                        ],
                        "qualifiedName": "Promise",
                        "package": "typescript",
                        "name": "Promise"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 18,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 14,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "qualifiedName": "Record",
                "package": "typescript",
                "name": "Record"
              }
            },
            {
              "id": 19,
              "name": "region",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 15,
                  "character": 12
                }
              ],
              "type": {
                "type": "reference",
                "id": 67,
                "name": "FunctionRegion",
                "dereferenced": {
                  "id": 67,
                  "name": "FunctionRegion",
                  "kind": 8,
                  "kindString": "Enumeration",
                  "flags": {},
                  "children": [
                    {
                      "id": 68,
                      "name": "Any",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 45,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "any"
                      },
                      "defaultValue": "\"any\""
                    },
                    {
                      "id": 69,
                      "name": "ApNortheast1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 46,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ap-northeast-1"
                      },
                      "defaultValue": "\"ap-northeast-1\""
                    },
                    {
                      "id": 70,
                      "name": "ApNortheast2",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 47,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ap-northeast-2"
                      },
                      "defaultValue": "\"ap-northeast-2\""
                    },
                    {
                      "id": 71,
                      "name": "ApSouth1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 48,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ap-south-1"
                      },
                      "defaultValue": "\"ap-south-1\""
                    },
                    {
                      "id": 72,
                      "name": "ApSoutheast1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 49,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ap-southeast-1"
                      },
                      "defaultValue": "\"ap-southeast-1\""
                    },
                    {
                      "id": 73,
                      "name": "ApSoutheast2",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 50,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ap-southeast-2"
                      },
                      "defaultValue": "\"ap-southeast-2\""
                    },
                    {
                      "id": 74,
                      "name": "CaCentral1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 51,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "ca-central-1"
                      },
                      "defaultValue": "\"ca-central-1\""
                    },
                    {
                      "id": 75,
                      "name": "EuCentral1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 52,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "eu-central-1"
                      },
                      "defaultValue": "\"eu-central-1\""
                    },
                    {
                      "id": 76,
                      "name": "EuWest1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 53,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "eu-west-1"
                      },
                      "defaultValue": "\"eu-west-1\""
                    },
                    {
                      "id": 77,
                      "name": "EuWest2",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 54,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "eu-west-2"
                      },
                      "defaultValue": "\"eu-west-2\""
                    },
                    {
                      "id": 78,
                      "name": "EuWest3",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 55,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "eu-west-3"
                      },
                      "defaultValue": "\"eu-west-3\""
                    },
                    {
                      "id": 79,
                      "name": "SaEast1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 56,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "sa-east-1"
                      },
                      "defaultValue": "\"sa-east-1\""
                    },
                    {
                      "id": 80,
                      "name": "UsEast1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 57,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "us-east-1"
                      },
                      "defaultValue": "\"us-east-1\""
                    },
                    {
                      "id": 81,
                      "name": "UsWest1",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 58,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "us-west-1"
                      },
                      "defaultValue": "\"us-west-1\""
                    },
                    {
                      "id": 82,
                      "name": "UsWest2",
                      "kind": 16,
                      "kindString": "Enumeration Member",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 59,
                          "character": 2
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "us-west-2"
                      },
                      "defaultValue": "\"us-west-2\""
                    }
                  ],
                  "groups": [
                    {
                      "title": "Enumeration Members",
                      "kind": 16,
                      "children": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "src/types.ts",
                      "line": 44,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 17,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 13,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 31,
              "name": "invoke",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 49,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 32,
                  "name": "invoke",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Invokes a function"
                  },
                  "typeParameter": [
                    {
                      "id": 33,
                      "name": "T",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {},
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 34,
                      "name": "functionName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "The name of the Function to invoke."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 35,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "Options for invoking the Function.\n"
                      },
                      "type": {
                        "type": "reference",
                        "id": 36,
                        "name": "FunctionInvokeOptions",
                        "dereferenced": {
                          "id": 36,
                          "name": "FunctionInvokeOptions",
                          "kind": 4194304,
                          "kindString": "Type alias",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 62,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 37,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 44,
                                  "name": "body",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The body of the request."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/types.ts",
                                      "line": 78,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "File",
                                        "package": "typescript",
                                        "name": "File"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Blob",
                                        "package": "typescript",
                                        "name": "Blob"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "ArrayBuffer",
                                        "package": "typescript",
                                        "name": "ArrayBuffer"
                                      },
                                      {
                                        "type": "reference",
                                        "qualifiedName": "FormData",
                                        "package": "typescript",
                                        "name": "FormData"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "Uint8Array",
                                            "package": "typescript",
                                            "name": "Uint8Array"
                                          }
                                        ],
                                        "qualifiedName": "ReadableStream",
                                        "package": "typescript",
                                        "name": "ReadableStream"
                                      },
                                      {
                                        "type": "reference",
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "any"
                                          }
                                        ],
                                        "qualifiedName": "Record",
                                        "package": "typescript",
                                        "name": "Record"
                                      },
                                      {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 38,
                                  "name": "headers",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "Object representing the headers to send with the request."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/types.ts",
                                      "line": 66,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 39,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 66,
                                          "character": 12
                                        }
                                      ],
                                      "indexSignature": {
                                        "id": 40,
                                        "name": "__index",
                                        "kind": 8192,
                                        "kindString": "Index signature",
                                        "flags": {},
                                        "parameters": [
                                          {
                                            "id": 41,
                                            "name": "key",
                                            "kind": 32768,
                                            "flags": {},
                                            "type": {
                                              "type": "intrinsic",
                                              "name": "string"
                                            }
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "id": 42,
                                  "name": "method",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The HTTP verb of the request"
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/types.ts",
                                      "line": 70,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "POST"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "GET"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "PUT"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "PATCH"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "DELETE"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 43,
                                  "name": "region",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "comment": {
                                    "shortText": "The Region to invoke the function in."
                                  },
                                  "sources": [
                                    {
                                      "fileName": "src/types.ts",
                                      "line": 74,
                                      "character": 2
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "id": 67,
                                    "name": "FunctionRegion",
                                    "dereferenced": {
                                      "id": 67,
                                      "name": "FunctionRegion",
                                      "kind": 8,
                                      "kindString": "Enumeration",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 68,
                                          "name": "Any",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 45,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "any"
                                          },
                                          "defaultValue": "\"any\""
                                        },
                                        {
                                          "id": 69,
                                          "name": "ApNortheast1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 46,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ap-northeast-1"
                                          },
                                          "defaultValue": "\"ap-northeast-1\""
                                        },
                                        {
                                          "id": 70,
                                          "name": "ApNortheast2",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 47,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ap-northeast-2"
                                          },
                                          "defaultValue": "\"ap-northeast-2\""
                                        },
                                        {
                                          "id": 71,
                                          "name": "ApSouth1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 48,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ap-south-1"
                                          },
                                          "defaultValue": "\"ap-south-1\""
                                        },
                                        {
                                          "id": 72,
                                          "name": "ApSoutheast1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 49,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ap-southeast-1"
                                          },
                                          "defaultValue": "\"ap-southeast-1\""
                                        },
                                        {
                                          "id": 73,
                                          "name": "ApSoutheast2",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 50,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ap-southeast-2"
                                          },
                                          "defaultValue": "\"ap-southeast-2\""
                                        },
                                        {
                                          "id": 74,
                                          "name": "CaCentral1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 51,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "ca-central-1"
                                          },
                                          "defaultValue": "\"ca-central-1\""
                                        },
                                        {
                                          "id": 75,
                                          "name": "EuCentral1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 52,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "eu-central-1"
                                          },
                                          "defaultValue": "\"eu-central-1\""
                                        },
                                        {
                                          "id": 76,
                                          "name": "EuWest1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 53,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "eu-west-1"
                                          },
                                          "defaultValue": "\"eu-west-1\""
                                        },
                                        {
                                          "id": 77,
                                          "name": "EuWest2",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 54,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "eu-west-2"
                                          },
                                          "defaultValue": "\"eu-west-2\""
                                        },
                                        {
                                          "id": 78,
                                          "name": "EuWest3",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 55,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "eu-west-3"
                                          },
                                          "defaultValue": "\"eu-west-3\""
                                        },
                                        {
                                          "id": 79,
                                          "name": "SaEast1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 56,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "sa-east-1"
                                          },
                                          "defaultValue": "\"sa-east-1\""
                                        },
                                        {
                                          "id": 80,
                                          "name": "UsEast1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 57,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "us-east-1"
                                          },
                                          "defaultValue": "\"us-east-1\""
                                        },
                                        {
                                          "id": 81,
                                          "name": "UsWest1",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 58,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "us-west-1"
                                          },
                                          "defaultValue": "\"us-west-1\""
                                        },
                                        {
                                          "id": 82,
                                          "name": "UsWest2",
                                          "kind": 16,
                                          "kindString": "Enumeration Member",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "src/types.ts",
                                              "line": 59,
                                              "character": 2
                                            }
                                          ],
                                          "type": {
                                            "type": "literal",
                                            "value": "us-west-2"
                                          },
                                          "defaultValue": "\"us-west-2\""
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Enumeration Members",
                                          "kind": 16,
                                          "children": [
                                            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
                                            82
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "src/types.ts",
                                          "line": 44,
                                          "character": 12
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [44, 38, 42, 43]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/types.ts",
                                  "line": 62,
                                  "character": 36
                                }
                              ]
                            }
                          }
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 83,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 33,
                            "name": "T"
                          }
                        ],
                        "name": "FunctionsResponse"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            },
            {
              "id": 28,
              "name": "setAuth",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/FunctionsClient.ts",
                  "line": 40,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 29,
                  "name": "setAuth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Updates the authorization header"
                  },
                  "parameters": [
                    {
                      "id": 30,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "the new jwt token sent in the authorisation header\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [2]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [20, 18, 19, 17]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [31, 28]
            }
          ],
          "sources": [
            {
              "fileName": "src/FunctionsClient.ts",
              "line": 12,
              "character": 13
            }
          ]
        },
        {
          "id": 45,
          "name": "FunctionsError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 46,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 19,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 47,
                  "name": "new FunctionsError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 48,
                      "name": "message",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 49,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "'FunctionsError'"
                    },
                    {
                      "id": 50,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 45,
                    "name": "FunctionsError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            },
            {
              "id": 51,
              "name": "context",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [46]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [51]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 17,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "qualifiedName": "Error",
              "package": "typescript",
              "name": "Error"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 52,
              "name": "FunctionsFetchError"
            },
            {
              "type": "reference",
              "id": 57,
              "name": "FunctionsHttpError"
            },
            {
              "type": "reference",
              "id": 62,
              "name": "FunctionsRelayError"
            }
          ]
        },
        {
          "id": 52,
          "name": "FunctionsFetchError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 53,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 27,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 54,
                  "name": "new FunctionsFetchError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 55,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 52,
                    "name": "FunctionsFetchError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 47,
                    "name": "FunctionsError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 46,
                "name": "FunctionsError.constructor"
              }
            },
            {
              "id": 56,
              "name": "context",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 51,
                "name": "FunctionsError.context"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [53]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [56]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 26,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 45,
              "name": "FunctionsError"
            }
          ]
        },
        {
          "id": 57,
          "name": "FunctionsHttpError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 58,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 39,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 59,
                  "name": "new FunctionsHttpError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 60,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 57,
                    "name": "FunctionsHttpError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 47,
                    "name": "FunctionsError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 46,
                "name": "FunctionsError.constructor"
              }
            },
            {
              "id": 61,
              "name": "context",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 51,
                "name": "FunctionsError.context"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [58]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [61]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 38,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 45,
              "name": "FunctionsError"
            }
          ]
        },
        {
          "id": 62,
          "name": "FunctionsRelayError",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "children": [
            {
              "id": 63,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 33,
                  "character": 2
                }
              ],
              "signatures": [
                {
                  "id": 64,
                  "name": "new FunctionsRelayError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 65,
                      "name": "context",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 62,
                    "name": "FunctionsRelayError"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 47,
                    "name": "FunctionsError.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 46,
                "name": "FunctionsError.constructor"
              }
            },
            {
              "id": 66,
              "name": "context",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 18,
                  "character": 2
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 51,
                "name": "FunctionsError.context"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [63]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [66]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 32,
              "character": 13
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 45,
              "name": "FunctionsError"
            }
          ]
        },
        {
          "id": 36,
          "name": "FunctionInvokeOptions",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 62,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 37,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 44,
                  "name": "body",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The body of the request."
                  },
                  "sources": [
                    {
                      "fileName": "src/types.ts",
                      "line": 78,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "qualifiedName": "File",
                        "package": "typescript",
                        "name": "File"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "Blob",
                        "package": "typescript",
                        "name": "Blob"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "ArrayBuffer",
                        "package": "typescript",
                        "name": "ArrayBuffer"
                      },
                      {
                        "type": "reference",
                        "qualifiedName": "FormData",
                        "package": "typescript",
                        "name": "FormData"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "qualifiedName": "Uint8Array",
                            "package": "typescript",
                            "name": "Uint8Array"
                          }
                        ],
                        "qualifiedName": "ReadableStream",
                        "package": "typescript",
                        "name": "ReadableStream"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "id": 38,
                  "name": "headers",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Object representing the headers to send with the request."
                  },
                  "sources": [
                    {
                      "fileName": "src/types.ts",
                      "line": 66,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 39,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 66,
                          "character": 12
                        }
                      ],
                      "indexSignature": {
                        "id": 40,
                        "name": "__index",
                        "kind": 8192,
                        "kindString": "Index signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 41,
                            "name": "key",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "id": 42,
                  "name": "method",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The HTTP verb of the request"
                  },
                  "sources": [
                    {
                      "fileName": "src/types.ts",
                      "line": 70,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "POST"
                      },
                      {
                        "type": "literal",
                        "value": "GET"
                      },
                      {
                        "type": "literal",
                        "value": "PUT"
                      },
                      {
                        "type": "literal",
                        "value": "PATCH"
                      },
                      {
                        "type": "literal",
                        "value": "DELETE"
                      }
                    ]
                  }
                },
                {
                  "id": 43,
                  "name": "region",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The Region to invoke the function in."
                  },
                  "sources": [
                    {
                      "fileName": "src/types.ts",
                      "line": 74,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 67,
                    "name": "FunctionRegion",
                    "dereferenced": {
                      "id": 67,
                      "name": "FunctionRegion",
                      "kind": 8,
                      "kindString": "Enumeration",
                      "flags": {},
                      "children": [
                        {
                          "id": 68,
                          "name": "Any",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 45,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "any"
                          },
                          "defaultValue": "\"any\""
                        },
                        {
                          "id": 69,
                          "name": "ApNortheast1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 46,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ap-northeast-1"
                          },
                          "defaultValue": "\"ap-northeast-1\""
                        },
                        {
                          "id": 70,
                          "name": "ApNortheast2",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 47,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ap-northeast-2"
                          },
                          "defaultValue": "\"ap-northeast-2\""
                        },
                        {
                          "id": 71,
                          "name": "ApSouth1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 48,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ap-south-1"
                          },
                          "defaultValue": "\"ap-south-1\""
                        },
                        {
                          "id": 72,
                          "name": "ApSoutheast1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 49,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ap-southeast-1"
                          },
                          "defaultValue": "\"ap-southeast-1\""
                        },
                        {
                          "id": 73,
                          "name": "ApSoutheast2",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 50,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ap-southeast-2"
                          },
                          "defaultValue": "\"ap-southeast-2\""
                        },
                        {
                          "id": 74,
                          "name": "CaCentral1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 51,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "ca-central-1"
                          },
                          "defaultValue": "\"ca-central-1\""
                        },
                        {
                          "id": 75,
                          "name": "EuCentral1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 52,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "eu-central-1"
                          },
                          "defaultValue": "\"eu-central-1\""
                        },
                        {
                          "id": 76,
                          "name": "EuWest1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 53,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "eu-west-1"
                          },
                          "defaultValue": "\"eu-west-1\""
                        },
                        {
                          "id": 77,
                          "name": "EuWest2",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 54,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "eu-west-2"
                          },
                          "defaultValue": "\"eu-west-2\""
                        },
                        {
                          "id": 78,
                          "name": "EuWest3",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 55,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "eu-west-3"
                          },
                          "defaultValue": "\"eu-west-3\""
                        },
                        {
                          "id": 79,
                          "name": "SaEast1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 56,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "sa-east-1"
                          },
                          "defaultValue": "\"sa-east-1\""
                        },
                        {
                          "id": 80,
                          "name": "UsEast1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 57,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "us-east-1"
                          },
                          "defaultValue": "\"us-east-1\""
                        },
                        {
                          "id": 81,
                          "name": "UsWest1",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 58,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "us-west-1"
                          },
                          "defaultValue": "\"us-west-1\""
                        },
                        {
                          "id": 82,
                          "name": "UsWest2",
                          "kind": 16,
                          "kindString": "Enumeration Member",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/types.ts",
                              "line": 59,
                              "character": 2
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "us-west-2"
                          },
                          "defaultValue": "\"us-west-2\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Enumeration Members",
                          "kind": 16,
                          "children": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/types.ts",
                          "line": 44,
                          "character": 12
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [44, 38, 42, 43]
                }
              ],
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 62,
                  "character": 36
                }
              ]
            }
          }
        },
        {
          "id": 83,
          "name": "FunctionsResponse",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 15,
              "character": 12
            }
          ],
          "typeParameter": [
            {
              "id": 84,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "type": {
            "type": "union",
            "types": [null, null]
          }
        }
      ],
      "groups": [
        {
          "title": "Enumerations",
          "kind": 8,
          "children": [67]
        },
        {
          "title": "Classes",
          "kind": 128,
          "children": [1, 45, 52, 57, 62]
        },
        {
          "title": "Type Aliases",
          "kind": 4194304,
          "children": [36, 83]
        }
      ],
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ]
}
