{
  "id": 0,
  "name": "@supabase/postgrest-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 683,
      "name": "PostgrestBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {
        "isAbstract": true
      },
      "children": [
        {
          "id": 684,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 35,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
            }
          ],
          "signatures": [
            {
              "id": 685,
              "name": "new PostgrestBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 686,
                  "name": "ClientOptions",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 780,
                    "name": "ClientServerOptions"
                  }
                },
                {
                  "id": 687,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 688,
                  "name": "ThrowOnError",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "default": {
                    "type": "literal",
                    "value": false
                  }
                }
              ],
              "parameters": [
                {
                  "id": 689,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 690,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 695,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 40,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L40"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 698,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 43,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L43"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 699,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "line": 18095,
                                  "character": 17
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 700,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 701,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "name": "RequestInfo",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript"
                                          },
                                          {
                                            "type": "reference",
                                            "name": "URL",
                                            "qualifiedName": "URL",
                                            "package": "typescript"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 702,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "name": "RequestInit",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "Response",
                                        "qualifiedName": "Response",
                                        "package": "typescript"
                                      }
                                    ],
                                    "name": "Promise",
                                    "qualifiedName": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 693,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 38,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L38"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "HeadersInit",
                            "qualifiedName": "HeadersInit",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 703,
                          "name": "isMaybeSingle",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 44,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L44"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 691,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 36,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L36"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 694,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 39,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L39"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 696,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 41,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L41"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 697,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 42,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L42"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "AbortSignal",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 692,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 37,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L37"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [695, 698, 693, 703, 691, 694, 696, 697, 692]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 35,
                          "character": 23,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 686,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 687,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 688,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 708,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 29,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 711,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 32,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L32"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 712,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 18095,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 713,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 714,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "RequestInfo",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        ]
                      }
                    },
                    {
                      "id": 715,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "RequestInit",
                        "qualifiedName": "RequestInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Response",
                        "qualifiedName": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 706,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 27,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Headers",
            "qualifiedName": "Headers",
            "package": "typescript"
          }
        },
        {
          "id": 716,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 33,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 704,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 25,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L25"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          }
        },
        {
          "id": 707,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 28,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 709,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 30,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false"
        },
        {
          "id": 710,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 31,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "AbortSignal",
            "qualifiedName": "AbortSignal",
            "package": "typescript"
          }
        },
        {
          "id": 705,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 26,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "URL",
            "qualifiedName": "URL",
            "package": "typescript"
          }
        },
        {
          "id": 738,
          "name": "overrideTypes",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 276,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L276"
            }
          ],
          "signatures": [
            {
              "id": 739,
              "name": "overrideTypes",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " field in the response."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  {
                    "tag": "@returns",
                    "content": [
                      {
                        "kind": "text",
                        "text": "A PostgrestBuilder instance with the new type"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 740,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new type to cast the response data to"
                      }
                    ]
                  }
                },
                {
                  "id": 745,
                  "name": "Options",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Optional type configuration (defaults to { merge: true })"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 741,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 742,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 22,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [742]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 20,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 743,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 744,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 44,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": true
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [744]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 42,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 686,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 687,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        },
                        {
                          "type": "literal",
                          "value": false
                        },
                        {
                          "type": "literal",
                          "value": false
                        }
                      ],
                      "name": "IsValidResultOverride"
                    },
                    "extendsType": {
                      "type": "literal",
                      "value": true
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 687,
                            "name": "Result"
                          }
                        ],
                        "name": "ContainsNull"
                      },
                      "extendsType": {
                        "type": "literal",
                        "value": true
                      },
                      "trueType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 517,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 687,
                                    "name": "Result"
                                  }
                                ],
                                "name": "NonNullable",
                                "qualifiedName": "NonNullable",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "id": 522,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        ]
                      },
                      "falseType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 517,
                            "name": "NewResult"
                          },
                          {
                            "type": "reference",
                            "id": 687,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 522,
                            "name": "Options"
                          }
                        ],
                        "name": "MergePartialResult"
                      }
                    },
                    "falseType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 687,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        }
                      ],
                      "name": "CheckMatchingArrayTypes"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 688,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 735,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 241,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L241"
            }
          ],
          "signatures": [
            {
              "id": 736,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 737,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new result type to override with"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 686,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 687,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 737,
                        "name": "NewResult"
                      }
                    ],
                    "name": "CheckMatchingArrayTypes"
                  },
                  {
                    "type": "reference",
                    "id": 688,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 719,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 78,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L78"
            }
          ],
          "signatures": [
            {
              "id": 720,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set an HTTP header for the request."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 721,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 722,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 686,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 687,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 688,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 723,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 84,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L84"
            }
          ],
          "signatures": [
            {
              "id": 724,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 725,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 688,
                      "name": "ThrowOnError"
                    },
                    "extendsType": {
                      "type": "literal",
                      "value": true
                    },
                    "trueType": {
                      "type": "reference",
                      "id": 769,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 687,
                          "name": "Result"
                        }
                      ],
                      "name": "PostgrestResponseSuccess"
                    },
                    "falseType": {
                      "type": "reference",
                      "id": 776,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 687,
                          "name": "Result"
                        }
                      ],
                      "name": "PostgrestSingleResponse"
                    }
                  }
                },
                {
                  "id": 726,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 727,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 728,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 91,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L91"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 729,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 730,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "conditional",
                                    "checkType": {
                                      "type": "reference",
                                      "id": 688,
                                      "name": "ThrowOnError"
                                    },
                                    "extendsType": {
                                      "type": "literal",
                                      "value": true
                                    },
                                    "trueType": {
                                      "type": "reference",
                                      "id": 769,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 687,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestResponseSuccess"
                                    },
                                    "falseType": {
                                      "type": "reference",
                                      "id": 776,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 687,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestSingleResponse"
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 505,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 505,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 731,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 732,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 98,
                              "character": 18,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L98"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 733,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 734,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 506,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 506,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "name": "PromiseLike",
                "qualifiedName": "PromiseLike",
                "package": "typescript"
              },
              "implementationOf": {
                "type": "reference",
                "name": "PromiseLike.then"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "name": "PromiseLike.then"
          }
        },
        {
          "id": 717,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 70,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L70"
            }
          ],
          "signatures": [
            {
              "id": 718,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.\n\n"
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "https://github.com/supabase/supabase-js/issues/92",
                    "target": "https://github.com/supabase/supabase-js/issues/92"
                  }
                ]
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 686,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 687,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 688,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 686,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 687,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [684]
        },
        {
          "title": "Properties",
          "children": [708, 711, 706, 716, 704, 707, 709, 710, 705]
        },
        {
          "title": "Methods",
          "children": [738, 735, 719, 723, 717]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestBuilder.ts",
          "line": 16,
          "character": 30,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L16"
        }
      ],
      "typeParameters": [
        {
          "id": 746,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          }
        },
        {
          "id": 747,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 748,
          "name": "ThrowOnError",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "default": {
            "type": "literal",
            "value": false
          }
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 530,
          "name": "PostgrestTransformBuilder"
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "id": 688,
                "name": "ThrowOnError"
              },
              "extendsType": {
                "type": "literal",
                "value": true
              },
              "trueType": {
                "type": "reference",
                "id": 769,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 687,
                    "name": "Result"
                  }
                ],
                "name": "PostgrestResponseSuccess"
              },
              "falseType": {
                "type": "reference",
                "id": 776,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 687,
                    "name": "Result"
                  }
                ],
                "name": "PostgrestSingleResponse"
              }
            }
          ],
          "name": "PromiseLike",
          "qualifiedName": "PromiseLike",
          "package": "typescript"
        }
      ]
    },
    {
      "id": 9,
      "name": "PostgrestClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "PostgREST client."
          }
        ]
      },
      "children": [
        {
          "id": 10,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 51,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L51"
            }
          ],
          "signatures": [
            {
              "id": 11,
              "name": "new PostgrestClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a PostgREST client."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 12,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 16,
                  "name": "ClientOptions",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 780,
                    "name": "ClientServerOptions"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 12,
                      "name": "Database"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 13,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 14,
                            "name": "__InternalSupabase",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestClient.ts",
                                "line": 18,
                                "character": 4,
                                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L18"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "I"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [14]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/PostgrestClient.ts",
                            "line": 17,
                            "character": 63,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L17"
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "I"
                    },
                    "falseType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 15,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {}
                      }
                    }
                  }
                },
                {
                  "id": 17,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          }
                        },
                        {
                          "type": "literal",
                          "value": "__InternalSupabase"
                        }
                      ],
                      "name": "Exclude",
                      "qualifiedName": "Exclude",
                      "package": "typescript"
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "id": 12,
                                "name": "Database"
                              }
                            },
                            {
                              "type": "literal",
                              "value": "__InternalSupabase"
                            }
                          ],
                          "name": "Exclude",
                          "qualifiedName": "Exclude",
                          "package": "typescript"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 18,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 17,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          },
                          {
                            "type": "literal",
                            "value": "__InternalSupabase"
                          }
                        ],
                        "name": "Omit",
                        "qualifiedName": "Omit",
                        "package": "typescript"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 19,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "URL of the PostgREST endpoint"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 20,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 21,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 24,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 60,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L60"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 25,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "line": 18095,
                                  "character": 17
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 26,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "summary": [
                                      {
                                        "kind": "text",
                                        "text": "Custom fetch"
                                      }
                                    ]
                                  },
                                  "parameters": [
                                    {
                                      "id": 27,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "name": "RequestInfo",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript"
                                          },
                                          {
                                            "type": "reference",
                                            "name": "URL",
                                            "qualifiedName": "URL",
                                            "package": "typescript"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 28,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "name": "RequestInit",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "Response",
                                        "qualifiedName": "Response",
                                        "package": "typescript"
                                      }
                                    ],
                                    "name": "Promise",
                                    "qualifiedName": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 22,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Custom headers"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 58,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L58"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "HeadersInit",
                            "qualifiedName": "HeadersInit",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 23,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Postgres schema to switch to"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 59,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L59"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 17,
                            "name": "SchemaName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [24, 22, 23]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestClient.ts",
                          "line": 57,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L57"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 9,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 16,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 17,
                    "name": "SchemaName"
                  },
                  {
                    "type": "reference",
                    "id": 18,
                    "name": "Schema"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 32,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 39,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L39"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 33,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 18095,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 34,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 35,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "RequestInfo",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        ]
                      }
                    },
                    {
                      "id": 36,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "RequestInit",
                        "qualifiedName": "RequestInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Response",
                        "qualifiedName": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 30,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 37,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L37"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Headers",
            "qualifiedName": "Headers",
            "package": "typescript"
          }
        },
        {
          "id": 31,
          "name": "schemaName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 38,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L38"
            }
          ],
          "type": {
            "type": "reference",
            "id": 17,
            "name": "SchemaName",
            "dereferenced": {}
          }
        },
        {
          "id": 29,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 36,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 37,
          "name": "from",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 68,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L68"
            },
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 72,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L72"
            },
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 80,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L80"
            }
          ],
          "signatures": [
            {
              "id": 38,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a query on a table or a view."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 39,
                  "name": "TableName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 40,
                  "name": "Table",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericTable"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 41,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The table or view name to query"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 39,
                    "name": "TableName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 72,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 16,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 18,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 40,
                    "name": "Table"
                  },
                  {
                    "type": "reference",
                    "id": 39,
                    "name": "TableName"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 40,
                      "name": "Table"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 42,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 43,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37,
                                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [43]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/PostgrestQueryBuilder.ts",
                            "line": 10,
                            "character": 35,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 44,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a query on a table or a view."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 45,
                  "name": "ViewName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 46,
                  "name": "View",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericView"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 47,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The table or view name to query"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 45,
                    "name": "ViewName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 72,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 16,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 18,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 46,
                    "name": "View"
                  },
                  {
                    "type": "reference",
                    "id": 45,
                    "name": "ViewName"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 46,
                      "name": "View"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 48,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 49,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37,
                                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [49]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/PostgrestQueryBuilder.ts",
                            "line": 10,
                            "character": 35,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 54,
          "name": "rpc",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 134,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L134"
            }
          ],
          "signatures": [
            {
              "id": 55,
              "name": "rpc",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a function call."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 56,
                  "name": "FnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 57,
                  "name": "Fn",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericFunction"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 58,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The function name to call"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 56,
                    "name": "FnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 59,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The arguments to pass to the function call"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Args"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 57,
                      "name": "Fn"
                    }
                  },
                  "defaultValue": "{}"
                },
                {
                  "id": 60,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 61,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 64,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 144,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L144"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 63,
                          "name": "get",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "When set to "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the function will be called with\nread-only access mode."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 143,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L143"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 62,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "When set to "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`data`"
                              },
                              {
                                "kind": "text",
                                "text": " will not be returned.\nUseful if you only need the count."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 142,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L142"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [64, 63, 62]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestClient.ts",
                          "line": 141,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L141"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 16,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 18,
                    "name": "Schema"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "Returns"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 57,
                        "name": "Fn"
                      }
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "objectType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      },
                      "extendsType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      },
                      "trueType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        "objectType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Returns"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 57,
                      "name": "Fn"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 56,
                    "name": "FnName"
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "literal",
                    "value": "RPC"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 50,
          "name": "schema",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L96"
            }
          ],
          "signatures": [
            {
              "id": 51,
              "name": "schema",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Select a schema to query or perform an function (rpc) call.\n\nThe schema needs to be on the list of exposed schemas inside Supabase."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 52,
                  "name": "DynamicSchema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 53,
                  "name": "schema",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The schema to query"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 52,
                    "name": "DynamicSchema",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 9,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 16,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "DynamicSchema"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 52,
                        "name": "DynamicSchema"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [10]
        },
        {
          "title": "Properties",
          "children": [32, 30, 31, 29]
        },
        {
          "title": "Methods",
          "children": [37, 54, 50]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestClient.ts",
          "line": 15,
          "character": 21,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L15"
        }
      ],
      "typeParameters": [
        {
          "id": 65,
          "name": "Database",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Types for the schema from the [type\ngenerator](https://supabase.com/docs/reference/javascript/next/typescript-support)"
              }
            ]
          },
          "default": {
            "type": "intrinsic",
            "name": "any"
          }
        },
        {
          "id": 69,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "id": 12,
              "name": "Database"
            },
            "extendsType": {
              "type": "reflection",
              "declaration": {
                "id": 66,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 67,
                    "name": "__InternalSupabase",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/PostgrestClient.ts",
                        "line": 18,
                        "character": 4,
                        "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L18"
                      }
                    ],
                    "type": {
                      "type": "inferred",
                      "name": "I",
                      "constraint": {
                        "type": "reference",
                        "id": 780,
                        "name": "ClientServerOptions"
                      }
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [67]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/PostgrestClient.ts",
                    "line": 17,
                    "character": 63,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L17"
                  }
                ]
              }
            },
            "trueType": {
              "type": "reference",
              "name": "I"
            },
            "falseType": {
              "type": "reflection",
              "declaration": {
                "id": 68,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/PostgrestClient.ts",
                    "line": 21,
                    "character": 6,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestClient.ts#L21"
                  }
                ]
              }
            }
          }
        },
        {
          "id": 70,
          "name": "SchemaName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Postgres schema to switch to. Must be a string\nliteral, the same one passed to the constructor. If the schema is not\n"
              },
              {
                "kind": "code",
                "text": "`\"public\"`"
              },
              {
                "kind": "text",
                "text": ", this must be supplied manually."
              }
            ]
          },
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 12,
                      "name": "Database"
                    },
                    {
                      "type": "literal",
                      "value": "__InternalSupabase"
                    }
                  ],
                  "name": "Omit",
                  "qualifiedName": "Omit",
                  "package": "typescript"
                }
              }
            ]
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "literal",
              "value": "public"
            },
            "extendsType": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "literal",
                    "value": "__InternalSupabase"
                  }
                ],
                "name": "Omit",
                "qualifiedName": "Omit",
                "package": "typescript"
              }
            },
            "trueType": {
              "type": "literal",
              "value": "public"
            },
            "falseType": {
              "type": "intersection",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      },
                      {
                        "type": "literal",
                        "value": "__InternalSupabase"
                      }
                    ],
                    "name": "Omit",
                    "qualifiedName": "Omit",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 71,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 17,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "literal",
                    "value": "__InternalSupabase"
                  }
                ],
                "name": "Omit",
                "qualifiedName": "Omit",
                "package": "typescript"
              }
            },
            "extendsType": {
              "type": "reference",
              "name": "GenericSchema"
            },
            "trueType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 17,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "literal",
                    "value": "__InternalSupabase"
                  }
                ],
                "name": "Omit",
                "qualifiedName": "Omit",
                "package": "typescript"
              }
            },
            "falseType": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      ]
    },
    {
      "id": 749,
      "name": "PostgrestError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Error format\n\n"
          },
          {
            "kind": "inline-tag",
            "tag": "@link",
            "text": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes",
            "target": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes"
          }
        ]
      },
      "children": [
        {
          "id": 750,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 11,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
            }
          ],
          "signatures": [
            {
              "id": 751,
              "name": "new PostgrestError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 752,
                  "name": "context",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 753,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 757,
                          "name": "code",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 73,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 755,
                          "name": "details",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 42,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 756,
                          "name": "hint",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 754,
                          "name": "message",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 25,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [757, 755, 756, 754]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestError.ts",
                          "line": 11,
                          "character": 23,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 749,
                "name": "default"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        },
        {
          "id": 760,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 9,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L9"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 758,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 7,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L7"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 759,
          "name": "hint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 8,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L8"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [750]
        },
        {
          "title": "Properties",
          "children": [760, 758, 759]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestError.ts",
          "line": 6,
          "character": 21,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L6"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "Error",
          "qualifiedName": "Error",
          "package": "typescript"
        }
      ]
    },
    {
      "id": 161,
      "name": "PostgrestFilterBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 162,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 35,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
            }
          ],
          "signatures": [
            {
              "id": 163,
              "name": "new PostgrestFilterBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 164,
                  "name": "ClientOptions",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 780,
                    "name": "ClientServerOptions"
                  }
                },
                {
                  "id": 165,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 166,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                },
                {
                  "id": 167,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 168,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 169,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 170,
                  "name": "Method",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 171,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 172,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 177,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 40,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L40"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 180,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 43,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L43"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 181,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "line": 18095,
                                  "character": 17
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 182,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 183,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "name": "RequestInfo",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript"
                                          },
                                          {
                                            "type": "reference",
                                            "name": "URL",
                                            "qualifiedName": "URL",
                                            "package": "typescript"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 184,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "name": "RequestInit",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "Response",
                                        "qualifiedName": "Response",
                                        "package": "typescript"
                                      }
                                    ],
                                    "name": "Promise",
                                    "qualifiedName": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 175,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 38,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L38"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "HeadersInit",
                            "qualifiedName": "HeadersInit",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 185,
                          "name": "isMaybeSingle",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 44,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L44"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 173,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 36,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L36"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 176,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 39,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L39"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 178,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 41,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L41"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 179,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 42,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L42"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "AbortSignal",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 174,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 37,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L37"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [177, 180, 175, 185, 173, 176, 178, 179, 174]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 35,
                          "character": 23,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 532,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 531,
            "name": "default.constructor"
          }
        },
        {
          "id": 488,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 29,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 641,
            "name": "default.body"
          }
        },
        {
          "id": 491,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 32,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L32"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 492,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 18095,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 493,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 494,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "RequestInfo",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        ]
                      }
                    },
                    {
                      "id": 495,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "RequestInit",
                        "qualifiedName": "RequestInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Response",
                        "qualifiedName": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 644,
            "name": "default.fetch"
          }
        },
        {
          "id": 486,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 27,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Headers",
            "qualifiedName": "Headers",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 639,
            "name": "default.headers"
          }
        },
        {
          "id": 496,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 33,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 649,
            "name": "default.isMaybeSingle"
          }
        },
        {
          "id": 484,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 25,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L25"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 637,
            "name": "default.method"
          }
        },
        {
          "id": 487,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 28,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 640,
            "name": "default.schema"
          }
        },
        {
          "id": 489,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 30,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 642,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 490,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 31,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "AbortSignal",
            "qualifiedName": "AbortSignal",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 643,
            "name": "default.signal"
          }
        },
        {
          "id": 485,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 26,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "URL",
            "qualifiedName": "URL",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 638,
            "name": "default.url"
          }
        },
        {
          "id": 453,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 195,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L195"
            }
          ],
          "signatures": [
            {
              "id": 454,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set the AbortSignal for the fetch request."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 455,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The AbortSignal to use for the fetch request"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "name": "AbortSignal",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 607,
                "name": "default.abortSignal"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 606,
            "name": "default.abortSignal"
          }
        },
        {
          "id": 297,
          "name": "containedBy",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 354,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L354"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 358,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L358"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 366,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L366"
            }
          ],
          "signatures": [
            {
              "id": 298,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is contained by "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 299,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 300,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 299,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 301,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 299,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 166,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 302,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is contained by "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 303,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 304,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 289,
          "name": "contains",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 327,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L327"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 331,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L331"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 339,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L339"
            }
          ],
          "signatures": [
            {
              "id": 290,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for jsonb, array, and range columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " contains every element appearing in "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 291,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 292,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 291,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 293,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 291,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 166,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 294,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for jsonb, array, and range columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " contains every element appearing in "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 295,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 296,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The jsonb, array, or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 462,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 237,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L237"
            }
          ],
          "signatures": [
            {
              "id": 463,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a string in CSV format."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 616,
                "name": "default.csv"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 615,
            "name": "default.csv"
          }
        },
        {
          "id": 186,
          "name": "eq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 99,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L99"
            }
          ],
          "signatures": [
            {
              "id": 187,
              "name": "eq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nTo check if the value of "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is NULL, you should use "
                  },
                  {
                    "kind": "code",
                    "text": "`.is()`"
                  },
                  {
                    "kind": "text",
                    "text": " instead."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 188,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 189,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 188,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 190,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 165,
                          "name": "Schema"
                        },
                        {
                          "type": "reference",
                          "id": 166,
                          "name": "Row"
                        },
                        {
                          "type": "reference",
                          "id": 188,
                          "name": "ColumnName"
                        }
                      ],
                      "name": "ResolveFilterValue"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "never"
                    },
                    "trueType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "falseType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 165,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 166,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 188,
                            "name": "ColumnName"
                          }
                        ],
                        "name": "ResolveFilterValue"
                      },
                      "extendsType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "trueType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          }
                        ],
                        "name": "NonNullable",
                        "qualifiedName": "NonNullable",
                        "package": "typescript"
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 466,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 275,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L275"
            }
          ],
          "signatures": [
            {
              "id": 467,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as the EXPLAIN plan for the query.\n\nYou need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 468,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 469,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 470,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the query will be executed and the\nactual run time will be returned"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 283,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L283"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 473,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on buffer usage"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 286,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L286"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 475,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The format of the output, can be "
                              },
                              {
                                "kind": "code",
                                "text": "`\"text\"`"
                              },
                              {
                                "kind": "text",
                                "text": " (default)\nor "
                              },
                              {
                                "kind": "code",
                                "text": "`\"json\"`"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 288,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L288"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 472,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on configuration\nparameters that affect query planning"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 285,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L285"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 471,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the query identifier will be returned\nand "
                              },
                              {
                                "kind": "code",
                                "text": "`data`"
                              },
                              {
                                "kind": "text",
                                "text": " will include the output columns of the query"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 284,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L284"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 474,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on WAL record generation"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 287,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L287"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [470, 473, 475, 472, 471, 474]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 282,
                          "character": 5,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L282"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Record",
                          "qualifiedName": "Record",
                          "package": "typescript"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 620,
                "name": "default.explain"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 619,
            "name": "default.explain"
          }
        },
        {
          "id": 392,
          "name": "filter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 581,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L581"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 586,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L586"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 600,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L600"
            }
          ],
          "signatures": [
            {
              "id": 393,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.\n\nUnlike most filters, "
                  },
                  {
                    "kind": "code",
                    "text": "`opearator`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 394,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 395,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 394,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 396,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The operator to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "FilterOperator"
                      },
                      {
                        "type": "literal",
                        "value": "not.eq"
                      },
                      {
                        "type": "literal",
                        "value": "not.neq"
                      },
                      {
                        "type": "literal",
                        "value": "not.gt"
                      },
                      {
                        "type": "literal",
                        "value": "not.gte"
                      },
                      {
                        "type": "literal",
                        "value": "not.lt"
                      },
                      {
                        "type": "literal",
                        "value": "not.lte"
                      },
                      {
                        "type": "literal",
                        "value": "not.like"
                      },
                      {
                        "type": "literal",
                        "value": "not.ilike"
                      },
                      {
                        "type": "literal",
                        "value": "not.is"
                      },
                      {
                        "type": "literal",
                        "value": "not.in"
                      },
                      {
                        "type": "literal",
                        "value": "not.cs"
                      },
                      {
                        "type": "literal",
                        "value": "not.cd"
                      },
                      {
                        "type": "literal",
                        "value": "not.sl"
                      },
                      {
                        "type": "literal",
                        "value": "not.sr"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxl"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxr"
                      },
                      {
                        "type": "literal",
                        "value": "not.adj"
                      },
                      {
                        "type": "literal",
                        "value": "not.ov"
                      },
                      {
                        "type": "literal",
                        "value": "not.fts"
                      },
                      {
                        "type": "literal",
                        "value": "not.plfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.phfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.wfts"
                      }
                    ]
                  }
                },
                {
                  "id": 397,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 398,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.\n\nUnlike most filters, "
                  },
                  {
                    "kind": "code",
                    "text": "`opearator`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 399,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 400,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The operator to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 401,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 464,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 245,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L245"
            }
          ],
          "signatures": [
            {
              "id": 465,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as an object in [GeoJSON](https://geojson.org) format."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 618,
                "name": "default.geojson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 617,
            "name": "default.geojson"
          }
        },
        {
          "id": 196,
          "name": "gt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 132,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L132"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 133,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L133"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 140,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L140"
            }
          ],
          "signatures": [
            {
              "id": 197,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 198,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 199,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 198,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 200,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 198,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 166,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 201,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 202,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 203,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 204,
          "name": "gte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 145,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L145"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L146"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 153,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L153"
            }
          ],
          "signatures": [
            {
              "id": 205,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than or equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 206,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 207,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 206,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 208,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 206,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 166,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 209,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than or equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 210,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 211,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 252,
          "name": "ilike",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 229,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L229"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 230,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L230"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 237,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L237"
            }
          ],
          "signatures": [
            {
              "id": 253,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches "
                  },
                  {
                    "kind": "code",
                    "text": "`pattern`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 254,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 255,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 254,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 256,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The pattern to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 257,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches "
                  },
                  {
                    "kind": "code",
                    "text": "`pattern`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 258,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 259,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The pattern to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 260,
          "name": "ilikeAllOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 242,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L242"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 246,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L246"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 253,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L253"
            }
          ],
          "signatures": [
            {
              "id": 261,
              "name": "ilikeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches all of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 262,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 263,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 262,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 264,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 265,
              "name": "ilikeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches all of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 266,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 267,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 268,
          "name": "ilikeAnyOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 258,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L258"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 262,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L262"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 269,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L269"
            }
          ],
          "signatures": [
            {
              "id": 269,
              "name": "ilikeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches any of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 270,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 271,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 270,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 272,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 273,
              "name": "ilikeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches any of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-insensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 274,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 275,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 284,
          "name": "in",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 302,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L302"
            }
          ],
          "signatures": [
            {
              "id": 285,
              "name": "in",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is included in the "
                  },
                  {
                    "kind": "code",
                    "text": "`values`"
                  },
                  {
                    "kind": "text",
                    "text": " array."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 286,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 287,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 286,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 288,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values array to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 165,
                              "name": "Schema"
                            },
                            {
                              "type": "reference",
                              "id": 166,
                              "name": "Row"
                            },
                            {
                              "type": "reference",
                              "id": 286,
                              "name": "ColumnName"
                            }
                          ],
                          "name": "ResolveFilterValue"
                        },
                        "extendsType": {
                          "type": "intrinsic",
                          "name": "never"
                        },
                        "trueType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "falseType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 165,
                                "name": "Schema"
                              },
                              {
                                "type": "reference",
                                "id": 166,
                                "name": "Row"
                              },
                              {
                                "type": "reference",
                                "id": 286,
                                "name": "ColumnName"
                              }
                            ],
                            "name": "ResolveFilterValue"
                          },
                          "extendsType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "trueType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 276,
          "name": "is",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 274,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L274"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 278,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L278"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 291,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L291"
            }
          ],
          "signatures": [
            {
              "id": 277,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " IS "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nFor non-boolean columns, this is only relevant for checking if the value of\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is NULL by setting "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " to "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nFor boolean columns, you can also set "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " to "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " or "
                  },
                  {
                    "kind": "code",
                    "text": "`false`"
                  },
                  {
                    "kind": "text",
                    "text": " and it\nwill behave the same way as "
                  },
                  {
                    "kind": "code",
                    "text": "`.eq()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 278,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 279,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 278,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 280,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 281,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " IS "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nFor non-boolean columns, this is only relevant for checking if the value of\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is NULL by setting "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " to "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nFor boolean columns, you can also set "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " to "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " or "
                  },
                  {
                    "kind": "code",
                    "text": "`false`"
                  },
                  {
                    "kind": "text",
                    "text": " and it\nwill behave the same way as "
                  },
                  {
                    "kind": "code",
                    "text": "`.eq()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 282,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 283,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 228,
          "name": "like",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 184,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L184"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 185,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L185"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 192,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L192"
            }
          ],
          "signatures": [
            {
              "id": 229,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches "
                  },
                  {
                    "kind": "code",
                    "text": "`pattern`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 230,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 231,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 230,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 232,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The pattern to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 233,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches "
                  },
                  {
                    "kind": "code",
                    "text": "`pattern`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 234,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 235,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The pattern to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 236,
          "name": "likeAllOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 197,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L197"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 201,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L201"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 208,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L208"
            }
          ],
          "signatures": [
            {
              "id": 237,
              "name": "likeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches all of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 238,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 239,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 238,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 240,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 241,
              "name": "likeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches all of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 242,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 243,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 244,
          "name": "likeAnyOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 213,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L213"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 217,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L217"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 224,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L224"
            }
          ],
          "signatures": [
            {
              "id": 245,
              "name": "likeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches any of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 246,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 247,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 246,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 248,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 249,
              "name": "likeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches any of "
                  },
                  {
                    "kind": "code",
                    "text": "`patterns`"
                  },
                  {
                    "kind": "text",
                    "text": " case-sensitively."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 250,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 251,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The patterns to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 438,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L146"
            }
          ],
          "signatures": [
            {
              "id": 439,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Limit the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`count`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 440,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The maximum number of rows to return"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 441,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 442,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 443,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Deprecated, use "
                              },
                              {
                                "kind": "code",
                                "text": "`options.referencedTable`"
                              },
                              {
                                "kind": "text",
                                "text": "\ninstead"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 151,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 444,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to limit rows of referenced\ntables instead of the parent table"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 151,
                              "character": 32,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [443, 444]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 151,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 592,
                "name": "default.limit"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 591,
            "name": "default.limit"
          }
        },
        {
          "id": 212,
          "name": "lt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 158,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L158"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 159,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L159"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 166,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L166"
            }
          ],
          "signatures": [
            {
              "id": 213,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 214,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 215,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 214,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 216,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 214,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 166,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 217,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 218,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 219,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 220,
          "name": "lte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 171,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L171"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 172,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L172"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 179,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L179"
            }
          ],
          "signatures": [
            {
              "id": 221,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than or equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 222,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 223,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 222,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 224,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 222,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 166,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 225,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than or equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 226,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 227,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 369,
          "name": "match",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 514,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L514"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 515,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L515"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 523,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L523"
            }
          ],
          "signatures": [
            {
              "id": 370,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where each column in "
                  },
                  {
                    "kind": "code",
                    "text": "`query`"
                  },
                  {
                    "kind": "text",
                    "text": " keys is equal to its\nassociated value. Shorthand for multiple "
                  },
                  {
                    "kind": "code",
                    "text": "`.eq()`"
                  },
                  {
                    "kind": "text",
                    "text": "s."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 371,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 372,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The object to filter with, with column names as keys mapped\nto their filter values"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 371,
                        "name": "ColumnName"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 371,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 166,
                          "name": "Row"
                        }
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 373,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where each column in "
                  },
                  {
                    "kind": "code",
                    "text": "`query`"
                  },
                  {
                    "kind": "text",
                    "text": " keys is equal to its\nassociated value. Shorthand for multiple "
                  },
                  {
                    "kind": "code",
                    "text": "`.eq()`"
                  },
                  {
                    "kind": "text",
                    "text": "s."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 374,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The object to filter with, with column names as keys mapped\nto their filter values"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 481,
          "name": "maxAffected",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 354,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L354"
            }
          ],
          "signatures": [
            {
              "id": 482,
              "name": "maxAffected",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set the maximum number of rows that can be affected by the query.\nOnly available in PostgREST v13+ and only works with PATCH and DELETE methods."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 483,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The maximum number of rows that can be affected"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "PostgrestVersion"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      }
                    }
                  ],
                  "name": "MaxAffectedEnabled"
                },
                "extendsType": {
                  "type": "literal",
                  "value": true
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  },
                  "extendsType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "PATCH"
                      },
                      {
                        "type": "literal",
                        "value": "DELETE"
                      },
                      {
                        "type": "literal",
                        "value": "RPC"
                      }
                    ]
                  },
                  "trueType": {
                    "type": "reference",
                    "id": 161,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 165,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 166,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 167,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 168,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 169,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 170,
                        "name": "Method"
                      }
                    ],
                    "name": "default"
                  },
                  "falseType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "literal",
                        "value": "maxAffected method only available on update or delete"
                      }
                    ],
                    "name": "InvalidMethodError"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "literal",
                      "value": "maxAffected method only available on postgrest 13+"
                    }
                  ],
                  "name": "InvalidMethodError"
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 635,
                "name": "default.maxAffected"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 634,
            "name": "default.maxAffected"
          }
        },
        {
          "id": 459,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 220,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L220"
            }
          ],
          "signatures": [
            {
              "id": 460,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a single object instead of an array of objects.\n\nQuery result must be zero or one row (e.g. using "
                  },
                  {
                    "kind": "code",
                    "text": "`.limit(1)`"
                  },
                  {
                    "kind": "text",
                    "text": "), otherwise\nthis returns an error."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 461,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 167,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 461,
                        "name": "ResultOne"
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 613,
                "name": "default.maybeSingle"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 612,
            "name": "default.maybeSingle"
          }
        },
        {
          "id": 191,
          "name": "neq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 120,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L120"
            }
          ],
          "signatures": [
            {
              "id": 192,
              "name": "neq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is not equal to "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 193,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 194,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 193,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 195,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 165,
                          "name": "Schema"
                        },
                        {
                          "type": "reference",
                          "id": 166,
                          "name": "Row"
                        },
                        {
                          "type": "reference",
                          "id": 193,
                          "name": "ColumnName"
                        }
                      ],
                      "name": "ResolveFilterValue"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "never"
                    },
                    "trueType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "falseType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 165,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 166,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 193,
                            "name": "ColumnName"
                          }
                        ],
                        "name": "ResolveFilterValue"
                      },
                      "extendsType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "trueType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 375,
          "name": "not",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 530,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L530"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 535,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L535"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 549,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L549"
            }
          ],
          "signatures": [
            {
              "id": 376,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows which doesn't satisfy the filter.\n\nUnlike most filters, "
                  },
                  {
                    "kind": "code",
                    "text": "`opearator`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 377,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 378,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 377,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 379,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The operator to be negated to filter with, following\nPostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "name": "FilterOperator"
                  }
                },
                {
                  "id": 380,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 377,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 166,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 381,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows which doesn't satisfy the filter.\n\nUnlike most filters, "
                  },
                  {
                    "kind": "code",
                    "text": "`opearator`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 382,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 383,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The operator to be negated to filter with, following\nPostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 384,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The value to filter with, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 385,
          "name": "or",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 569,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L569"
            }
          ],
          "signatures": [
            {
              "id": 386,
              "name": "or",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Match only rows which satisfy at least one of the filters.\n\nUnlike most filters, "
                  },
                  {
                    "kind": "code",
                    "text": "`filters`"
                  },
                  {
                    "kind": "text",
                    "text": " is used as-is and needs to follow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure it's properly sanitized.\n\nIt's currently not possible to do an "
                  },
                  {
                    "kind": "code",
                    "text": "`.or()`"
                  },
                  {
                    "kind": "text",
                    "text": " filter across multiple tables."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 387,
                  "name": "filters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The filters to use, following PostgREST syntax"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 388,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 389,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 390,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Deprecated, use "
                              },
                              {
                                "kind": "code",
                                "text": "`referencedTable`"
                              },
                              {
                                "kind": "text",
                                "text": " instead"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 574,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L574"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 391,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to filter on referenced tables\ninstead of the parent table"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 574,
                              "character": 32,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L574"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [390, 391]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestFilterBuilder.ts",
                          "line": 574,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L574"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 407,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 70,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L70"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 74,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L74"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 81,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L81"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 88,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L88"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 408,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Order the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nYou can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use "
                  },
                  {
                    "kind": "code",
                    "text": "`!inner`"
                  },
                  {
                    "kind": "text",
                    "text": " in the query."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 409,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 410,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to order by"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 409,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 411,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 412,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 413,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the result will be in ascending order"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 414,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear first. If "
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ",\n"
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear last."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 415,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to order a referenced table by\nits columns"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [413, 414, 415]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 72,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 561,
                "name": "default.order"
              }
            },
            {
              "id": 416,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Order the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nYou can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use "
                  },
                  {
                    "kind": "code",
                    "text": "`!inner`"
                  },
                  {
                    "kind": "text",
                    "text": " in the query."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 417,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to order by"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 418,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 419,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 420,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the result will be in ascending order"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 421,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear first. If "
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ",\n"
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear last."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 422,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to order a referenced table by\nits columns"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [420, 421, 422]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 76,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 569,
                "name": "default.order"
              }
            },
            {
              "id": 423,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use "
                      },
                      {
                        "kind": "code",
                        "text": "`options.referencedTable`"
                      },
                      {
                        "kind": "text",
                        "text": " instead of "
                      },
                      {
                        "kind": "code",
                        "text": "`options.foreignTable`"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 424,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 425,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 424,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 426,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 427,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 428,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 430,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 429,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [428, 430, 429]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 83,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 576,
                "name": "default.order"
              }
            },
            {
              "id": 431,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use "
                      },
                      {
                        "kind": "code",
                        "text": "`options.referencedTable`"
                      },
                      {
                        "kind": "text",
                        "text": " instead of "
                      },
                      {
                        "kind": "code",
                        "text": "`options.foreignTable`"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 432,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 433,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 434,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 435,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 437,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 436,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [435, 437, 436]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 90,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 584,
                "name": "default.order"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 560,
            "name": "default.order"
          }
        },
        {
          "id": 345,
          "name": "overlaps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 453,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L453"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 457,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L457"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 465,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L465"
            }
          ],
          "signatures": [
            {
              "id": 346,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for array and range columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " have an element in common."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 347,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 348,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The array or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 347,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 349,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The array or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 347,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 166,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 350,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for array and range columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`value`"
                  },
                  {
                    "kind": "text",
                    "text": " have an element in common."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 351,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The array or range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 352,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The array or range value to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 515,
          "name": "overrideTypes",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 276,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L276"
            }
          ],
          "signatures": [
            {
              "id": 516,
              "name": "overrideTypes",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " field in the response."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  {
                    "tag": "@returns",
                    "content": [
                      {
                        "kind": "text",
                        "text": "A PostgrestBuilder instance with the new type"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 517,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new type to cast the response data to"
                      }
                    ]
                  }
                },
                {
                  "id": 522,
                  "name": "Options",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Optional type configuration (defaults to { merge: true })"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 518,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 519,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 22,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [519]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 20,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 520,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 521,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 44,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": true
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [521]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 42,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 167,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        },
                        {
                          "type": "literal",
                          "value": false
                        },
                        {
                          "type": "literal",
                          "value": false
                        }
                      ],
                      "name": "IsValidResultOverride"
                    },
                    "extendsType": {
                      "type": "literal",
                      "value": true
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 167,
                            "name": "Result"
                          }
                        ],
                        "name": "ContainsNull"
                      },
                      "extendsType": {
                        "type": "literal",
                        "value": true
                      },
                      "trueType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 517,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 167,
                                    "name": "Result"
                                  }
                                ],
                                "name": "NonNullable",
                                "qualifiedName": "NonNullable",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "id": 522,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        ]
                      },
                      "falseType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 517,
                            "name": "NewResult"
                          },
                          {
                            "type": "reference",
                            "id": 167,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 522,
                            "name": "Options"
                          }
                        ],
                        "name": "MergePartialResult"
                      }
                    },
                    "falseType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 167,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        }
                      ],
                      "name": "CheckMatchingArrayTypes"
                    }
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 669,
                "name": "default.overrideTypes"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 668,
            "name": "default.overrideTypes"
          }
        },
        {
          "id": 445,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 173,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L173"
            }
          ],
          "signatures": [
            {
              "id": 446,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Limit the query result by starting at an offset "
                  },
                  {
                    "kind": "code",
                    "text": "`from`"
                  },
                  {
                    "kind": "text",
                    "text": " and ending at the offset "
                  },
                  {
                    "kind": "code",
                    "text": "`to`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe "
                  },
                  {
                    "kind": "code",
                    "text": "`from`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`to`"
                  },
                  {
                    "kind": "text",
                    "text": " values are 0-based and inclusive: "
                  },
                  {
                    "kind": "code",
                    "text": "`range(1, 3)`"
                  },
                  {
                    "kind": "text",
                    "text": " will include the second, third\nand fourth rows of the query."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 447,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The starting index from which to limit the result"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 448,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The last index to which to limit the result"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 449,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 450,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 451,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Deprecated, use "
                              },
                              {
                                "kind": "code",
                                "text": "`options.referencedTable`"
                              },
                              {
                                "kind": "text",
                                "text": "\ninstead"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 179,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 452,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to limit rows of referenced\ntables instead of the parent table"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 179,
                              "character": 32,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [451, 452]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 179,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 599,
                "name": "default.range"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 598,
            "name": "default.range"
          }
        },
        {
          "id": 337,
          "name": "rangeAdjacent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 438,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L438"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 439,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L439"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 448,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L448"
            }
          ],
          "signatures": [
            {
              "id": 338,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is\nmutually exclusive to "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " and there can be no element between the two\nranges."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 339,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 340,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 339,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 341,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 342,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is\nmutually exclusive to "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " and there can be no element between the two\nranges."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 343,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 344,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 305,
          "name": "rangeGt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 380,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L380"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 381,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L381"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 389,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L389"
            }
          ],
          "signatures": [
            {
              "id": 306,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than any element in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 307,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 308,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 307,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 309,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 310,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is greater than any element in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 311,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 312,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 313,
          "name": "rangeGte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 394,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L394"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 395,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L395"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 404,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L404"
            }
          ],
          "signatures": [
            {
              "id": 314,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is either contained in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " or greater than any element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 315,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 316,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 315,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 317,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 318,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is either contained in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " or greater than any element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 319,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 320,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 321,
          "name": "rangeLt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 409,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L409"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 410,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L410"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 418,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L418"
            }
          ],
          "signatures": [
            {
              "id": 322,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than any element in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 323,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 324,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 323,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 325,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 326,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is less than any element in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 327,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 328,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 329,
          "name": "rangeLte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 423,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L423"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 424,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L424"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 433,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L433"
            }
          ],
          "signatures": [
            {
              "id": 330,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is either contained in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " or less than any element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 331,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 332,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 331,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 333,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 334,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for range columns. Match only rows where every element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " is either contained in "
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": " or less than any element in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`range`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 335,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 336,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The range to filter with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 478,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 328,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L328"
            }
          ],
          "signatures": [
            {
              "id": 479,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 480,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new result type to override with"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 167,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 480,
                        "name": "NewResult"
                      }
                    ],
                    "name": "CheckMatchingArrayTypes"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 632,
                "name": "default.returns"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 631,
            "name": "default.returns"
          }
        },
        {
          "id": 476,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 317,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L317"
            }
          ],
          "signatures": [
            {
              "id": 477,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Rollback the query.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " will still be returned, but the query is not committed."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 630,
                "name": "default.rollback"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 629,
            "name": "default.rollback"
          }
        },
        {
          "id": 402,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 29,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L29"
            }
          ],
          "signatures": [
            {
              "id": 403,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a SELECT on the query result.\n\nBy default, "
                  },
                  {
                    "kind": "code",
                    "text": "`.insert()`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.update()`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.upsert()`"
                  },
                  {
                    "kind": "text",
                    "text": ", and "
                  },
                  {
                    "kind": "code",
                    "text": "`.delete()`"
                  },
                  {
                    "kind": "text",
                    "text": " do not\nreturn modified rows. By calling this method, modified rows are returned in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 404,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 405,
                  "name": "NewResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 783,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 165,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 166,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 168,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 169,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 404,
                        "name": "Query"
                      },
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 406,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The columns to retrieve, separated by commas"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 404,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 405,
                      "name": "NewResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 556,
                "name": "default.select"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 555,
            "name": "default.select"
          }
        },
        {
          "id": 499,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 78,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L78"
            }
          ],
          "signatures": [
            {
              "id": 500,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set an HTTP header for the request."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 501,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 502,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 653,
                "name": "default.setHeader"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 652,
            "name": "default.setHeader"
          }
        },
        {
          "id": 456,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 206,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L206"
            }
          ],
          "signatures": [
            {
              "id": 457,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a single object instead of an array of objects.\n\nQuery result must be one row (e.g. using "
                  },
                  {
                    "kind": "code",
                    "text": "`.limit(1)`"
                  },
                  {
                    "kind": "text",
                    "text": "), otherwise this\nreturns an error."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 458,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 167,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 458,
                    "name": "ResultOne"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 610,
                "name": "default.single"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 609,
            "name": "default.single"
          }
        },
        {
          "id": 353,
          "name": "textSearch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 476,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L476"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 481,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L481"
            },
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 496,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L496"
            }
          ],
          "signatures": [
            {
              "id": 354,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for text and tsvector columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches the query string in "
                  },
                  {
                    "kind": "code",
                    "text": "`query`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 355,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 356,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The text or tsvector column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 355,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 357,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The query text to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 358,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 359,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 360,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The text search configuration to use"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 479,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L479"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 361,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Change how the "
                              },
                              {
                                "kind": "code",
                                "text": "`query`"
                              },
                              {
                                "kind": "text",
                                "text": " text is interpreted"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 479,
                              "character": 33,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L479"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [360, 361]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestFilterBuilder.ts",
                          "line": 479,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L479"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 362,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Only relevant for text and tsvector columns. Match only rows where\n"
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": " matches the query string in "
                  },
                  {
                    "kind": "code",
                    "text": "`query`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 363,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The text or tsvector column to filter on"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 364,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The query text to match with"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 365,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 366,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 367,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The text search configuration to use"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 484,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L484"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 368,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Change how the "
                              },
                              {
                                "kind": "code",
                                "text": "`query`"
                              },
                              {
                                "kind": "text",
                                "text": " text is interpreted"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 484,
                              "character": 33,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L484"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [367, 368]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestFilterBuilder.ts",
                          "line": 484,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L484"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 164,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 165,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 166,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 167,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 168,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 169,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 170,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 503,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 84,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L84"
            }
          ],
          "signatures": [
            {
              "id": 504,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 505,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 776,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 167,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                },
                {
                  "id": 506,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 507,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 508,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 91,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L91"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 509,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 510,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 776,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 167,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 505,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 505,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 511,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 512,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 98,
                              "character": 18,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L98"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 513,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 514,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 506,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 506,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "name": "PromiseLike",
                "qualifiedName": "PromiseLike",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 657,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 656,
            "name": "default.then"
          }
        },
        {
          "id": 497,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 70,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L70"
            }
          ],
          "signatures": [
            {
              "id": 498,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.\n\n"
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "https://github.com/supabase/supabase-js/issues/92",
                    "target": "https://github.com/supabase/supabase-js/issues/92"
                  }
                ]
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 161,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 165,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 166,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 167,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 168,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 169,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 170,
                        "name": "Method"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 164,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 167,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 651,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 650,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [162]
        },
        {
          "title": "Properties",
          "children": [488, 491, 486, 496, 484, 487, 489, 490, 485]
        },
        {
          "title": "Methods",
          "children": [
            453, 297, 289, 462, 186, 466, 392, 464, 196, 204, 252, 260, 268, 284, 276, 228, 236,
            244, 438, 212, 220, 369, 481, 459, 191, 375, 385, 407, 345, 515, 445, 337, 305, 313,
            321, 329, 478, 476, 402, 499, 456, 353, 503, 497
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestFilterBuilder.ts",
          "line": 74,
          "character": 21,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestFilterBuilder.ts#L74"
        }
      ],
      "typeParameters": [
        {
          "id": 523,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          }
        },
        {
          "id": 524,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 525,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Record",
            "qualifiedName": "Record",
            "package": "typescript"
          }
        },
        {
          "id": 526,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 527,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 528,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 529,
          "name": "Method",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 530,
          "typeArguments": [
            {
              "type": "reference",
              "id": 164,
              "name": "ClientOptions"
            },
            {
              "type": "reference",
              "id": 165,
              "name": "Schema"
            },
            {
              "type": "reference",
              "id": 166,
              "name": "Row"
            },
            {
              "type": "reference",
              "id": 167,
              "name": "Result"
            },
            {
              "type": "reference",
              "id": 168,
              "name": "RelationName"
            },
            {
              "type": "reference",
              "id": 169,
              "name": "Relationships"
            },
            {
              "type": "reference",
              "id": 170,
              "name": "Method"
            }
          ],
          "name": "default"
        }
      ]
    },
    {
      "id": 72,
      "name": "PostgrestQueryBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 73,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 18,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L18"
            }
          ],
          "signatures": [
            {
              "id": 74,
              "name": "new PostgrestQueryBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 75,
                  "name": "ClientOptions",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 780,
                    "name": "ClientServerOptions"
                  }
                },
                {
                  "id": 76,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 77,
                  "name": "Relation",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "GenericTable"
                      },
                      {
                        "type": "reference",
                        "name": "GenericView"
                      }
                    ]
                  }
                },
                {
                  "id": 78,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 81,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 79,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 80,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37,
                                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [80]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "src/PostgrestQueryBuilder.ts",
                            "line": 10,
                            "character": 35,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 82,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "URL",
                    "qualifiedName": "URL",
                    "package": "typescript"
                  }
                },
                {
                  "id": 83,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 84,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 87,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 27,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L27"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 88,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "line": 18095,
                                  "character": 17
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 89,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 90,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "name": "RequestInfo",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript"
                                          },
                                          {
                                            "type": "reference",
                                            "name": "URL",
                                            "qualifiedName": "URL",
                                            "package": "typescript"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 91,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "name": "RequestInit",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "Response",
                                        "qualifiedName": "Response",
                                        "package": "typescript"
                                      }
                                    ],
                                    "name": "Promise",
                                    "qualifiedName": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 85,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 25,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L25"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "HeadersInit",
                            "qualifiedName": "HeadersInit",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 86,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 26,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L26"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [87, 85, 86]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 24,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L24"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 72,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 77,
                    "name": "Relation"
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 96,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 16,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L16"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 97,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 18095,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 98,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 99,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "RequestInfo",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        ]
                      }
                    },
                    {
                      "id": 100,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "RequestInit",
                        "qualifiedName": "RequestInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Response",
                        "qualifiedName": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 93,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Headers",
            "qualifiedName": "Headers",
            "package": "typescript"
          }
        },
        {
          "id": 94,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 14,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 95,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L15"
            }
          ],
          "type": {
            "type": "reference",
            "name": "AbortSignal",
            "qualifiedName": "AbortSignal",
            "package": "typescript"
          }
        },
        {
          "id": 92,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 12,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "URL",
            "qualifiedName": "URL",
            "package": "typescript"
          }
        },
        {
          "id": 149,
          "name": "delete",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 411,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L411"
            }
          ],
          "signatures": [
            {
              "id": 150,
              "name": "delete",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a DELETE on the table or view.\n\nBy default, deleted rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": " after filters."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 151,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 152,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 153,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count deleted rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 414,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L414"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [153]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 413,
                          "character": 5,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L413"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "DELETE"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 110,
          "name": "insert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 116,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L116"
            },
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 130,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L130"
            },
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 171,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L171"
            }
          ],
          "signatures": [
            {
              "id": 111,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform an INSERT into the table or view.\n\nBy default, inserted rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 112,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 113,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows."
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 112,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 114,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 115,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 116,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count inserted rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 119,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L119"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [116]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 118,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L118"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 117,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform an INSERT into the table or view.\n\nBy default, inserted rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 118,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 119,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows."
                      }
                    ]
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 118,
                      "name": "Row"
                    }
                  }
                },
                {
                  "id": 120,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 121,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 122,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count inserted rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 133,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L133"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 123,
                          "name": "defaultToNull",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Make missing fields default to "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": ".\nOtherwise, use the default value for the column. Only applies for bulk\ninserts."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 134,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L134"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [122, 123]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 132,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L132"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 101,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 57,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L57"
            }
          ],
          "signatures": [
            {
              "id": 102,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a SELECT query on the table or view."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 103,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 104,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 783,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 76,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 77,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 78,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 81,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 103,
                        "name": "Query"
                      },
                      {
                        "type": "reference",
                        "id": 75,
                        "name": "ClientOptions"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 105,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The columns to retrieve, separated by commas. Columns can be renamed when returned with "
                      },
                      {
                        "kind": "code",
                        "text": "`customName:columnName`"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 103,
                    "name": "Query",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 106,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 107,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 109,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count rows in the table or view.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 74,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L74"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 108,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "When set to "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`data`"
                              },
                              {
                                "kind": "text",
                                "text": " will not be returned.\nUseful if you only need the count."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 73,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L73"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [109, 108]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 72,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L72"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 104,
                      "name": "ResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "GET"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 142,
          "name": "update",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 361,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L361"
            }
          ],
          "signatures": [
            {
              "id": 143,
              "name": "update",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform an UPDATE on the table or view.\n\nBy default, updated rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": " after filters."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 144,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 145,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values to update with"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 144,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 146,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 147,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 148,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count updated rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 366,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L366"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [148]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 365,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L365"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "PATCH"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 124,
          "name": "upsert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 217,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L217"
            },
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 233,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L233"
            },
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 288,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L288"
            }
          ],
          "signatures": [
            {
              "id": 125,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto "
                  },
                  {
                    "kind": "code",
                    "text": "`onConflict`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.upsert()`"
                  },
                  {
                    "kind": "text",
                    "text": " allows you to perform the equivalent of\n"
                  },
                  {
                    "kind": "code",
                    "text": "`.insert()`"
                  },
                  {
                    "kind": "text",
                    "text": " if a row with the corresponding "
                  },
                  {
                    "kind": "code",
                    "text": "`onConflict`"
                  },
                  {
                    "kind": "text",
                    "text": " columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n"
                  },
                  {
                    "kind": "code",
                    "text": "`ignoreDuplicates`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nBy default, upserted rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 126,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 127,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows."
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 126,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 128,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 129,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 132,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count upserted rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 222,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L222"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 131,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", duplicate rows are ignored. If\n"
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ", duplicate rows are merged with existing rows."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 221,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L221"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 130,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n"
                              },
                              {
                                "kind": "code",
                                "text": "`onConflict`"
                              },
                              {
                                "kind": "text",
                                "text": " columns are equal."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 220,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L220"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [132, 131, 130]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 219,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L219"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 133,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto "
                  },
                  {
                    "kind": "code",
                    "text": "`onConflict`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.upsert()`"
                  },
                  {
                    "kind": "text",
                    "text": " allows you to perform the equivalent of\n"
                  },
                  {
                    "kind": "code",
                    "text": "`.insert()`"
                  },
                  {
                    "kind": "text",
                    "text": " if a row with the corresponding "
                  },
                  {
                    "kind": "code",
                    "text": "`onConflict`"
                  },
                  {
                    "kind": "text",
                    "text": " columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n"
                  },
                  {
                    "kind": "code",
                    "text": "`ignoreDuplicates`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nBy default, upserted rows are not returned. To return it, chain the call\nwith "
                  },
                  {
                    "kind": "code",
                    "text": "`.select()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 134,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 135,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows."
                      }
                    ]
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 134,
                      "name": "Row"
                    }
                  }
                },
                {
                  "id": 136,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 137,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 140,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Count algorithm to use to count upserted rows.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"exact\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Exact but slow count algorithm. Performs a "
                              },
                              {
                                "kind": "code",
                                "text": "`COUNT(*)`"
                              },
                              {
                                "kind": "text",
                                "text": " under the\nhood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"planned\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "`\"estimated\"`"
                              },
                              {
                                "kind": "text",
                                "text": ": Uses exact count for low numbers and planned count for high\nnumbers."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 238,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L238"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 141,
                          "name": "defaultToNull",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Make missing fields default to "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": ".\nOtherwise, use the default value for the column. This only applies when\ninserting new rows, not when merging with existing rows under\n"
                              },
                              {
                                "kind": "code",
                                "text": "`ignoreDuplicates: false`"
                              },
                              {
                                "kind": "text",
                                "text": ". This also only applies when doing bulk upserts."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 239,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L239"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 139,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", duplicate rows are ignored. If\n"
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ", duplicate rows are merged with existing rows."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 237,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L237"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 138,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n"
                              },
                              {
                                "kind": "code",
                                "text": "`onConflict`"
                              },
                              {
                                "kind": "text",
                                "text": " columns are equal."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 236,
                              "character": 6,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L236"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [140, 141, 139, 138]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestQueryBuilder.ts",
                          "line": 235,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L235"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 161,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 75,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 76,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 77,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 78,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 81,
                    "name": "Relationships"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [73]
        },
        {
          "title": "Properties",
          "children": [96, 93, 94, 95, 92]
        },
        {
          "title": "Methods",
          "children": [149, 110, 101, 142, 124]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestQueryBuilder.ts",
          "line": 5,
          "character": 21,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L5"
        }
      ],
      "typeParameters": [
        {
          "id": 154,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          }
        },
        {
          "id": 155,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 156,
          "name": "Relation",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "GenericTable"
              },
              {
                "type": "reference",
                "name": "GenericView"
              }
            ]
          }
        },
        {
          "id": 157,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 160,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "id": 77,
              "name": "Relation"
            },
            "extendsType": {
              "type": "reflection",
              "declaration": {
                "id": 158,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 159,
                    "name": "Relationships",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/PostgrestQueryBuilder.ts",
                        "line": 10,
                        "character": 37,
                        "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                      }
                    ],
                    "type": {
                      "type": "inferred",
                      "name": "R"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "children": [159]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/PostgrestQueryBuilder.ts",
                    "line": 10,
                    "character": 35,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestQueryBuilder.ts#L10"
                  }
                ]
              }
            },
            "trueType": {
              "type": "reference",
              "name": "R"
            },
            "falseType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        }
      ]
    },
    {
      "id": 530,
      "name": "PostgrestTransformBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 531,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 35,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
            }
          ],
          "signatures": [
            {
              "id": 532,
              "name": "new PostgrestTransformBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 533,
                  "name": "ClientOptions",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 780,
                    "name": "ClientServerOptions"
                  }
                },
                {
                  "id": 534,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 535,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  }
                },
                {
                  "id": 536,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 537,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 538,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 539,
                  "name": "Method",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 540,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 541,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 546,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 40,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L40"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 549,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 43,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L43"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 550,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                                  "line": 18095,
                                  "character": 17
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 551,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 552,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "name": "RequestInfo",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript"
                                          },
                                          {
                                            "type": "reference",
                                            "name": "URL",
                                            "qualifiedName": "URL",
                                            "package": "typescript"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 553,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "name": "RequestInit",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "Response",
                                        "qualifiedName": "Response",
                                        "package": "typescript"
                                      }
                                    ],
                                    "name": "Promise",
                                    "qualifiedName": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 544,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 38,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L38"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "HeadersInit",
                            "qualifiedName": "HeadersInit",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 554,
                          "name": "isMaybeSingle",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 44,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L44"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 542,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 36,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L36"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 545,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 39,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L39"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 547,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 41,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L41"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 548,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 42,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L42"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "AbortSignal",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 543,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 37,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L37"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [546, 549, 544, 554, 542, 545, 547, 548, 543]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 35,
                          "character": 23,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L35"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 685,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 684,
            "name": "default.constructor"
          }
        },
        {
          "id": 641,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 29,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 708,
            "name": "default.body"
          }
        },
        {
          "id": 644,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 32,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L32"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 645,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.dom.d.ts",
                  "line": 18095,
                  "character": 17
                }
              ],
              "signatures": [
                {
                  "id": 646,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 647,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "name": "RequestInfo",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "name": "URL",
                            "qualifiedName": "URL",
                            "package": "typescript"
                          }
                        ]
                      }
                    },
                    {
                      "id": 648,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "RequestInit",
                        "qualifiedName": "RequestInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Response",
                        "qualifiedName": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "qualifiedName": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 711,
            "name": "default.fetch"
          }
        },
        {
          "id": 639,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 27,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Headers",
            "qualifiedName": "Headers",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 706,
            "name": "default.headers"
          }
        },
        {
          "id": 649,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 33,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 716,
            "name": "default.isMaybeSingle"
          }
        },
        {
          "id": 637,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 25,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L25"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 704,
            "name": "default.method"
          }
        },
        {
          "id": 640,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 28,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 707,
            "name": "default.schema"
          }
        },
        {
          "id": 642,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 30,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 709,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 643,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 31,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "AbortSignal",
            "qualifiedName": "AbortSignal",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 710,
            "name": "default.signal"
          }
        },
        {
          "id": 638,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 26,
              "character": 12,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "URL",
            "qualifiedName": "URL",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 705,
            "name": "default.url"
          }
        },
        {
          "id": 606,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 195,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L195"
            }
          ],
          "signatures": [
            {
              "id": 607,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set the AbortSignal for the fetch request."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 608,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The AbortSignal to use for the fetch request"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "name": "AbortSignal",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 615,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 237,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L237"
            }
          ],
          "signatures": [
            {
              "id": 616,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a string in CSV format."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 619,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 275,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L275"
            }
          ],
          "signatures": [
            {
              "id": 620,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as the EXPLAIN plan for the query.\n\nYou need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 621,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 622,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 623,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the query will be executed and the\nactual run time will be returned"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 283,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L283"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 626,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on buffer usage"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 286,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L286"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 628,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The format of the output, can be "
                              },
                              {
                                "kind": "code",
                                "text": "`\"text\"`"
                              },
                              {
                                "kind": "text",
                                "text": " (default)\nor "
                              },
                              {
                                "kind": "code",
                                "text": "`\"json\"`"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 288,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L288"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 625,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on configuration\nparameters that affect query planning"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 285,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L285"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 624,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the query identifier will be returned\nand "
                              },
                              {
                                "kind": "code",
                                "text": "`data`"
                              },
                              {
                                "kind": "text",
                                "text": " will include the output columns of the query"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 284,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L284"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 627,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", include information on WAL record generation"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 287,
                              "character": 4,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L287"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [623, 626, 628, 625, 624, 627]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 282,
                          "character": 5,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L282"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Record",
                          "qualifiedName": "Record",
                          "package": "typescript"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 617,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 245,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L245"
            }
          ],
          "signatures": [
            {
              "id": 618,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as an object in [GeoJSON](https://geojson.org) format."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "qualifiedName": "Record",
                    "package": "typescript"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 591,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L146"
            }
          ],
          "signatures": [
            {
              "id": 592,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Limit the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`count`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 593,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The maximum number of rows to return"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 594,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 595,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 596,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Deprecated, use "
                              },
                              {
                                "kind": "code",
                                "text": "`options.referencedTable`"
                              },
                              {
                                "kind": "text",
                                "text": "\ninstead"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 151,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 597,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to limit rows of referenced\ntables instead of the parent table"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 151,
                              "character": 32,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [596, 597]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 151,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L151"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 634,
          "name": "maxAffected",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 354,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L354"
            }
          ],
          "signatures": [
            {
              "id": 635,
              "name": "maxAffected",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set the maximum number of rows that can be affected by the query.\nOnly available in PostgREST v13+ and only works with PATCH and DELETE methods."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 636,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The maximum number of rows that can be affected"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "PostgrestVersion"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      }
                    }
                  ],
                  "name": "MaxAffectedEnabled"
                },
                "extendsType": {
                  "type": "literal",
                  "value": true
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  },
                  "extendsType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "PATCH"
                      },
                      {
                        "type": "literal",
                        "value": "DELETE"
                      },
                      {
                        "type": "literal",
                        "value": "RPC"
                      }
                    ]
                  },
                  "trueType": {
                    "type": "reference",
                    "id": 530,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 534,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 535,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 536,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 537,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 538,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 539,
                        "name": "Method"
                      }
                    ],
                    "name": "default"
                  },
                  "falseType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "literal",
                        "value": "maxAffected method only available on update or delete"
                      }
                    ],
                    "name": "InvalidMethodError"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "literal",
                      "value": "maxAffected method only available on postgrest 13+"
                    }
                  ],
                  "name": "InvalidMethodError"
                }
              }
            }
          ]
        },
        {
          "id": 612,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 220,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L220"
            }
          ],
          "signatures": [
            {
              "id": 613,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a single object instead of an array of objects.\n\nQuery result must be zero or one row (e.g. using "
                  },
                  {
                    "kind": "code",
                    "text": "`.limit(1)`"
                  },
                  {
                    "kind": "text",
                    "text": "), otherwise\nthis returns an error."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 614,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 536,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 461,
                        "name": "ResultOne"
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 560,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 70,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L70"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 74,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L74"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 81,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L81"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 88,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L88"
            },
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 561,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Order the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nYou can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use "
                  },
                  {
                    "kind": "code",
                    "text": "`!inner`"
                  },
                  {
                    "kind": "text",
                    "text": " in the query."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 562,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 563,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to order by"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 409,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 564,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 565,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 566,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the result will be in ascending order"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 567,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear first. If "
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ",\n"
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear last."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 568,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to order a referenced table by\nits columns"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 72,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [566, 567, 568]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 72,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L72"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 569,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Order the query result by "
                  },
                  {
                    "kind": "code",
                    "text": "`column`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nYou can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use "
                  },
                  {
                    "kind": "code",
                    "text": "`!inner`"
                  },
                  {
                    "kind": "text",
                    "text": " in the query."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 570,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The column to order by"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 571,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 572,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 573,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", the result will be in ascending order"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 574,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If "
                              },
                              {
                                "kind": "code",
                                "text": "`true`"
                              },
                              {
                                "kind": "text",
                                "text": ", "
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear first. If "
                              },
                              {
                                "kind": "code",
                                "text": "`false`"
                              },
                              {
                                "kind": "text",
                                "text": ",\n"
                              },
                              {
                                "kind": "code",
                                "text": "`null`"
                              },
                              {
                                "kind": "text",
                                "text": "s appear last."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 575,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to order a referenced table by\nits columns"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 76,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [573, 574, 575]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 76,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L76"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 576,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use "
                      },
                      {
                        "kind": "code",
                        "text": "`options.referencedTable`"
                      },
                      {
                        "kind": "text",
                        "text": " instead of "
                      },
                      {
                        "kind": "code",
                        "text": "`options.foreignTable`"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 577,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 578,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 424,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 579,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 580,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 581,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 583,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 582,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 83,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [581, 583, 582]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 83,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L83"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 584,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use "
                      },
                      {
                        "kind": "code",
                        "text": "`options.referencedTable`"
                      },
                      {
                        "kind": "text",
                        "text": " instead of "
                      },
                      {
                        "kind": "code",
                        "text": "`options.foreignTable`"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 585,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 586,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 587,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 588,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 16,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 590,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 59,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 589,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 90,
                              "character": 37,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [588, 590, 589]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 90,
                          "character": 14,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L90"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 668,
          "name": "overrideTypes",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 276,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L276"
            }
          ],
          "signatures": [
            {
              "id": 669,
              "name": "overrideTypes",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " field in the response."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```typescript\n// Merge with existing types (default behavior)\nconst query = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ custom_field: string }>()\n\n// Replace existing types completely\nconst replaceQuery = supabase\n  .from('users')\n  .select()\n  .overrideTypes<{ id: number; name: string }, { merge: false }>()\n```"
                      }
                    ]
                  },
                  {
                    "tag": "@returns",
                    "content": [
                      {
                        "kind": "text",
                        "text": "A PostgrestBuilder instance with the new type"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 670,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new type to cast the response data to"
                      }
                    ]
                  }
                },
                {
                  "id": 675,
                  "name": "Options",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Optional type configuration (defaults to { merge: true })"
                      }
                    ]
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 671,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 672,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 22,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [672]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 20,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  },
                  "default": {
                    "type": "reflection",
                    "declaration": {
                      "id": 673,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 674,
                          "name": "merge",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 278,
                              "character": 44,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": true
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [674]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 278,
                          "character": 42,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L278"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 536,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        },
                        {
                          "type": "literal",
                          "value": false
                        },
                        {
                          "type": "literal",
                          "value": false
                        }
                      ],
                      "name": "IsValidResultOverride"
                    },
                    "extendsType": {
                      "type": "literal",
                      "value": true
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 536,
                            "name": "Result"
                          }
                        ],
                        "name": "ContainsNull"
                      },
                      "extendsType": {
                        "type": "literal",
                        "value": true
                      },
                      "trueType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 517,
                                "name": "NewResult"
                              },
                              {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 536,
                                    "name": "Result"
                                  }
                                ],
                                "name": "NonNullable",
                                "qualifiedName": "NonNullable",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "id": 522,
                                "name": "Options"
                              }
                            ],
                            "name": "MergePartialResult"
                          }
                        ]
                      },
                      "falseType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 517,
                            "name": "NewResult"
                          },
                          {
                            "type": "reference",
                            "id": 536,
                            "name": "Result"
                          },
                          {
                            "type": "reference",
                            "id": 522,
                            "name": "Options"
                          }
                        ],
                        "name": "MergePartialResult"
                      }
                    },
                    "falseType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 536,
                          "name": "Result"
                        },
                        {
                          "type": "reference",
                          "id": 517,
                          "name": "NewResult"
                        }
                      ],
                      "name": "CheckMatchingArrayTypes"
                    }
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 739,
                "name": "default.overrideTypes"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 738,
            "name": "default.overrideTypes"
          }
        },
        {
          "id": 598,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 173,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L173"
            }
          ],
          "signatures": [
            {
              "id": 599,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Limit the query result by starting at an offset "
                  },
                  {
                    "kind": "code",
                    "text": "`from`"
                  },
                  {
                    "kind": "text",
                    "text": " and ending at the offset "
                  },
                  {
                    "kind": "code",
                    "text": "`to`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe "
                  },
                  {
                    "kind": "code",
                    "text": "`from`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`to`"
                  },
                  {
                    "kind": "text",
                    "text": " values are 0-based and inclusive: "
                  },
                  {
                    "kind": "code",
                    "text": "`range(1, 3)`"
                  },
                  {
                    "kind": "text",
                    "text": " will include the second, third\nand fourth rows of the query."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 600,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The starting index from which to limit the result"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 601,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The last index to which to limit the result"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 602,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Named parameters"
                      }
                    ]
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 603,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 604,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Deprecated, use "
                              },
                              {
                                "kind": "code",
                                "text": "`options.referencedTable`"
                              },
                              {
                                "kind": "text",
                                "text": "\ninstead"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 179,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 605,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Set this to limit rows of referenced\ntables instead of the parent table"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 179,
                              "character": 32,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [604, 605]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestTransformBuilder.ts",
                          "line": 179,
                          "character": 7,
                          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L179"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 631,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 328,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L328"
            }
          ],
          "signatures": [
            {
              "id": 632,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Override the type of the returned "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead"
                      }
                    ]
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 633,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The new result type to override with"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 536,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 480,
                        "name": "NewResult"
                      }
                    ],
                    "name": "CheckMatchingArrayTypes"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "overwrites": {
                "type": "reference",
                "id": 736,
                "name": "default.returns"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "id": 735,
            "name": "default.returns"
          }
        },
        {
          "id": 629,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 317,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L317"
            }
          ],
          "signatures": [
            {
              "id": 630,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Rollback the query.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " will still be returned, but the query is not committed."
                  }
                ]
              },
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 555,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 29,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L29"
            }
          ],
          "signatures": [
            {
              "id": 556,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Perform a SELECT on the query result.\n\nBy default, "
                  },
                  {
                    "kind": "code",
                    "text": "`.insert()`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.update()`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`.upsert()`"
                  },
                  {
                    "kind": "text",
                    "text": ", and "
                  },
                  {
                    "kind": "code",
                    "text": "`.delete()`"
                  },
                  {
                    "kind": "text",
                    "text": " do not\nreturn modified rows. By calling this method, modified rows are returned in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 557,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 558,
                  "name": "NewResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 783,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 534,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 535,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 537,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 538,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 404,
                        "name": "Query"
                      },
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 559,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The columns to retrieve, separated by commas"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "id": 404,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 405,
                      "name": "NewResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 652,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 78,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L78"
            }
          ],
          "signatures": [
            {
              "id": 653,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set an HTTP header for the request."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 654,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 655,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 530,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 534,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 535,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 536,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 537,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 538,
                    "name": "Relationships"
                  },
                  {
                    "type": "reference",
                    "id": 539,
                    "name": "Method"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 720,
                "name": "default.setHeader"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 719,
            "name": "default.setHeader"
          }
        },
        {
          "id": 609,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 206,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L206"
            }
          ],
          "signatures": [
            {
              "id": 610,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Return "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": " as a single object instead of an array of objects.\n\nQuery result must be one row (e.g. using "
                  },
                  {
                    "kind": "code",
                    "text": "`.limit(1)`"
                  },
                  {
                    "kind": "text",
                    "text": "), otherwise this\nreturns an error."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 611,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 536,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 683,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 533,
                    "name": "ClientOptions"
                  },
                  {
                    "type": "reference",
                    "id": 458,
                    "name": "ResultOne"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 656,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 84,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L84"
            }
          ],
          "signatures": [
            {
              "id": 657,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 658,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 776,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 536,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                },
                {
                  "id": 659,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 660,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 661,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 91,
                              "character": 9,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L91"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 662,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 663,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 776,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 536,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 505,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 505,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 664,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 665,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 98,
                              "character": 18,
                              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L98"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 666,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 667,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 506,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 506,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "name": "PromiseLike",
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 505,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 506,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "name": "PromiseLike",
                "qualifiedName": "PromiseLike",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 724,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 723,
            "name": "default.then"
          }
        },
        {
          "id": 650,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 70,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestBuilder.ts#L70"
            }
          ],
          "signatures": [
            {
              "id": 651,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.\n\n"
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "https://github.com/supabase/supabase-js/issues/92",
                    "target": "https://github.com/supabase/supabase-js/issues/92"
                  }
                ]
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 530,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 534,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 535,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 536,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 537,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 538,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 539,
                        "name": "Method"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 683,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 533,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 536,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 718,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 717,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [531]
        },
        {
          "title": "Properties",
          "children": [641, 644, 639, 649, 637, 640, 642, 643, 638]
        },
        {
          "title": "Methods",
          "children": [
            606, 615, 619, 617, 591, 634, 612, 560, 668, 598, 631, 629, 555, 652, 609, 656, 650
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestTransformBuilder.ts",
          "line": 11,
          "character": 21,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestTransformBuilder.ts#L11"
        }
      ],
      "typeParameters": [
        {
          "id": 676,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          }
        },
        {
          "id": 677,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 678,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Record",
            "qualifiedName": "Record",
            "package": "typescript"
          }
        },
        {
          "id": 679,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 680,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 681,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 682,
          "name": "Method",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 683,
          "typeArguments": [
            {
              "type": "reference",
              "id": 533,
              "name": "ClientOptions"
            },
            {
              "type": "reference",
              "id": 536,
              "name": "Result"
            }
          ],
          "name": "default"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 161,
          "name": "PostgrestFilterBuilder"
        }
      ]
    },
    {
      "id": 763,
      "name": "PostgrestResponseFailure",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 766,
          "name": "count",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 24,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L24"
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 765,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 23,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L23"
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 764,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 22,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L22"
            }
          ],
          "type": {
            "type": "reference",
            "id": 749,
            "name": "default",
            "dereferenced": {
              "id": 749,
              "name": "PostgrestError",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Error format\n\n"
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes",
                    "target": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes"
                  }
                ]
              },
              "children": [
                {
                  "id": 750,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 11,
                      "character": 2,
                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 751,
                      "name": "new PostgrestError",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 752,
                          "name": "context",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 753,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 757,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 73,
                                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 755,
                                  "name": "details",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 42,
                                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 756,
                                  "name": "hint",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 59,
                                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 754,
                                  "name": "message",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 25,
                                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "children": [757, 755, 756, 754]
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "src/PostgrestError.ts",
                                  "line": 11,
                                  "character": 23,
                                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 749,
                        "name": "default"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "Error.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                },
                {
                  "id": 760,
                  "name": "code",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 9,
                      "character": 2,
                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L9"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 758,
                  "name": "details",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 7,
                      "character": 2,
                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L7"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 759,
                  "name": "hint",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 8,
                      "character": 2,
                      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L8"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "children": [750]
                },
                {
                  "title": "Properties",
                  "children": [760, 758, 759]
                }
              ],
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 6,
                  "character": 21,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L6"
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "name": "Error",
                  "qualifiedName": "Error",
                  "package": "typescript"
                }
              ]
            }
          }
        },
        {
          "id": 767,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.status"
          }
        },
        {
          "id": 768,
          "name": "statusText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 14,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.statusText"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [766, 765, 764, 767, 768]
        }
      ],
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 21,
          "character": 17,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L21"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "PostgrestResponseBase"
        }
      ]
    },
    {
      "id": 769,
      "name": "PostgrestResponseSuccess",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 772,
          "name": "count",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 19,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L19"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        {
          "id": 771,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 18,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L18"
            }
          ],
          "type": {
            "type": "reference",
            "id": 775,
            "name": "T",
            "dereferenced": {}
          }
        },
        {
          "id": 770,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 17,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L17"
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 773,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.status"
          }
        },
        {
          "id": 774,
          "name": "statusText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 14,
              "character": 2,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.statusText"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [772, 771, 770, 773, 774]
        }
      ],
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 16,
          "character": 17,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L16"
        }
      ],
      "typeParameters": [
        {
          "id": 775,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "PostgrestResponseBase"
        }
      ]
    },
    {
      "id": 780,
      "name": "PostgrestClientOptions",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 74,
          "character": 12,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L74"
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 781,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 782,
              "name": "PostgrestVersion",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "src/types.ts",
                  "line": 75,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L75"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [782]
            }
          ],
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 74,
              "character": 34,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L74"
            }
          ]
        }
      }
    },
    {
      "id": 778,
      "name": "PostgrestMaybeSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 31,
          "character": 12,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L31"
        }
      ],
      "typeParameters": [
        {
          "id": 779,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 776,
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 779,
                "name": "T"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 761,
      "name": "PostgrestResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 32,
          "character": 12,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L32"
        }
      ],
      "typeParameters": [
        {
          "id": 762,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 776,
        "typeArguments": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 762,
              "name": "T"
            }
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 776,
      "name": "PostgrestSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 30,
          "character": 12,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L30"
        }
      ],
      "typeParameters": [
        {
          "id": 777,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 769,
            "name": "PostgrestResponseSuccess",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 772,
                "name": "count",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 19,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L19"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 771,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 18,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L18"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 775,
                  "name": "T",
                  "dereferenced": {}
                }
              },
              {
                "id": 770,
                "name": "error",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 17,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L17"
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 773,
                "name": "status",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L13"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.status"
                }
              },
              {
                "id": 774,
                "name": "statusText",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.statusText"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [772, 771, 770, 773, 774]
              }
            ],
            "sources": [
              {
                "fileName": "src/types.ts",
                "line": 16,
                "character": 17,
                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L16"
              }
            ],
            "typeParameters": [
              {
                "id": 775,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "extendedTypes": [
              {
                "type": "reference",
                "name": "PostgrestResponseBase"
              }
            ]
          },
          {
            "id": 763,
            "name": "PostgrestResponseFailure",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 766,
                "name": "count",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 24,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L24"
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 765,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 23,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L23"
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 764,
                "name": "error",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 22,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L22"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 749,
                  "name": "default",
                  "dereferenced": {
                    "id": 749,
                    "name": "PostgrestError",
                    "kind": 128,
                    "kindString": "Class",
                    "flags": {},
                    "comment": {
                      "summary": [
                        {
                          "kind": "text",
                          "text": "Error format\n\n"
                        },
                        {
                          "kind": "inline-tag",
                          "tag": "@link",
                          "text": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes",
                          "target": "https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes"
                        }
                      ]
                    },
                    "children": [
                      {
                        "id": 750,
                        "name": "constructor",
                        "kind": 512,
                        "kindString": "Constructor",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 11,
                            "character": 2,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                          }
                        ],
                        "signatures": [
                          {
                            "id": 751,
                            "name": "new PostgrestError",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 752,
                                "name": "context",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 753,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 757,
                                        "name": "code",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 73,
                                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 755,
                                        "name": "details",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 42,
                                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 756,
                                        "name": "hint",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 59,
                                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 754,
                                        "name": "message",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 25,
                                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "children": [757, 755, 756, 754]
                                      }
                                    ],
                                    "sources": [
                                      {
                                        "fileName": "src/PostgrestError.ts",
                                        "line": 11,
                                        "character": 23,
                                        "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L11"
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 749,
                              "name": "default"
                            },
                            "overwrites": {
                              "type": "reference",
                              "name": "Error.constructor"
                            }
                          }
                        ],
                        "overwrites": {
                          "type": "reference",
                          "name": "Error.constructor"
                        }
                      },
                      {
                        "id": 760,
                        "name": "code",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 9,
                            "character": 2,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L9"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 758,
                        "name": "details",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 7,
                            "character": 2,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L7"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 759,
                        "name": "hint",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 8,
                            "character": 2,
                            "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L8"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Constructors",
                        "children": [750]
                      },
                      {
                        "title": "Properties",
                        "children": [760, 758, 759]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/PostgrestError.ts",
                        "line": 6,
                        "character": 21,
                        "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/PostgrestError.ts#L6"
                      }
                    ],
                    "extendedTypes": [
                      {
                        "type": "reference",
                        "name": "Error",
                        "qualifiedName": "Error",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              },
              {
                "id": 767,
                "name": "status",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 13,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L13"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.status"
                }
              },
              {
                "id": 768,
                "name": "statusText",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 14,
                    "character": 2,
                    "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L14"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.statusText"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "children": [766, 765, 764, 767, 768]
              }
            ],
            "sources": [
              {
                "fileName": "src/types.ts",
                "line": 21,
                "character": 17,
                "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/types.ts#L21"
              }
            ],
            "extendedTypes": [
              {
                "type": "reference",
                "name": "PostgrestResponseBase"
              }
            ]
          }
        ]
      }
    },
    {
      "id": 783,
      "name": "UnstableGetResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "Main entry point for constructing the result type of a PostgREST query."
          }
        ]
      },
      "sources": [
        {
          "fileName": "src/select-query-parser/result.ts",
          "line": 37,
          "character": 12,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/select-query-parser/result.ts#L37"
        }
      ],
      "typeParameters": [
        {
          "id": 784,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Database schema."
              }
            ]
          },
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 785,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The type of a row in the current table."
              }
            ]
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Record",
            "qualifiedName": "Record",
            "package": "typescript"
          }
        },
        {
          "id": 786,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the current table or view."
              }
            ]
          }
        },
        {
          "id": 787,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Relationships of the current table."
              }
            ]
          }
        },
        {
          "id": 788,
          "name": "Query",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The select query string literal to parse."
              }
            ]
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 789,
          "name": "ClientOptions",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "id": 780,
            "name": "ClientServerOptions"
          }
        }
      ],
      "type": {
        "type": "conditional",
        "checkType": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 784,
              "name": "Schema"
            }
          ],
          "name": "IsAny"
        },
        "extendsType": {
          "type": "literal",
          "value": true
        },
        "trueType": {
          "type": "conditional",
          "checkType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 788,
                "name": "Query"
              }
            ],
            "name": "ParseQuery"
          },
          "extendsType": {
            "type": "inferred",
            "name": "ParsedQuery"
          },
          "trueType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "name": "ParsedQuery"
            },
            "extendsType": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "Ast.Node"
              }
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "id": 786,
                "name": "RelationName"
              },
              "extendsType": {
                "type": "intrinsic",
                "name": "string"
              },
              "trueType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "ParsedQuery"
                  }
                ],
                "name": "ProcessNodesWithoutSchema"
              },
              "falseType": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            "falseType": {
              "type": "reference",
              "name": "ParsedQuery"
            }
          },
          "falseType": {
            "type": "intrinsic",
            "name": "any"
          }
        },
        "falseType": {
          "type": "conditional",
          "checkType": {
            "type": "reference",
            "id": 787,
            "name": "Relationships"
          },
          "extendsType": {
            "type": "literal",
            "value": null
          },
          "trueType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 788,
                  "name": "Query"
                }
              ],
              "name": "ParseQuery"
            },
            "extendsType": {
              "type": "inferred",
              "name": "ParsedQuery"
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "name": "ParsedQuery"
              },
              "extendsType": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "Ast.Node"
                }
              },
              "trueType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "ParsedQuery"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 786,
                      "name": "RelationName"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "trueType": {
                      "type": "reference",
                      "id": 786,
                      "name": "RelationName"
                    },
                    "falseType": {
                      "type": "literal",
                      "value": "rpc_call"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 785,
                    "name": "Row"
                  }
                ],
                "name": "RPCCallNodes"
              },
              "falseType": {
                "type": "reference",
                "name": "ParsedQuery"
              }
            },
            "falseType": {
              "type": "reference",
              "id": 785,
              "name": "Row"
            }
          },
          "falseType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 788,
                  "name": "Query"
                }
              ],
              "name": "ParseQuery"
            },
            "extendsType": {
              "type": "inferred",
              "name": "ParsedQuery"
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "name": "ParsedQuery"
              },
              "extendsType": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "Ast.Node"
                }
              },
              "trueType": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 786,
                  "name": "RelationName"
                },
                "extendsType": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 787,
                    "name": "Relationships"
                  },
                  "extendsType": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "GenericRelationship"
                    }
                  },
                  "trueType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 789,
                        "name": "ClientOptions"
                      },
                      {
                        "type": "reference",
                        "id": 784,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 785,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 786,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 787,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "name": "ParsedQuery"
                      }
                    ],
                    "name": "ProcessNodes"
                  },
                  "falseType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "literal",
                        "value": "Invalid Relationships cannot infer result type"
                      }
                    ],
                    "name": "SelectQueryError"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "literal",
                      "value": "Invalid RelationName cannot infer result type"
                    }
                  ],
                  "name": "SelectQueryError"
                }
              },
              "falseType": {
                "type": "reference",
                "name": "ParsedQuery"
              }
            },
            "falseType": {
              "type": "intrinsic",
              "name": "never"
            }
          }
        }
      }
    },
    {
      "id": 1,
      "name": "default",
      "kind": 32,
      "kindString": "Variable",
      "flags": {},
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 17,
          "character": 0,
          "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L17"
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 2,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 7,
              "name": "PostgrestBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 22,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L22"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 683,
                  "name": "default"
                }
              }
            },
            {
              "id": 3,
              "name": "PostgrestClient",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 18,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L18"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 9,
                  "name": "default"
                }
              }
            },
            {
              "id": 8,
              "name": "PostgrestError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 23,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L23"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 749,
                  "name": "default"
                }
              }
            },
            {
              "id": 5,
              "name": "PostgrestFilterBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L20"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 161,
                  "name": "default"
                }
              }
            },
            {
              "id": 4,
              "name": "PostgrestQueryBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 19,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L19"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 72,
                  "name": "default"
                }
              }
            },
            {
              "id": 6,
              "name": "PostgrestTransformBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "src/index.ts",
                  "line": 21,
                  "character": 2,
                  "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L21"
                }
              ],
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 530,
                  "name": "default"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [7, 3, 8, 5, 4, 6]
            }
          ],
          "sources": [
            {
              "fileName": "src/index.ts",
              "line": 17,
              "character": 15,
              "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L17"
            }
          ]
        }
      }
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "children": [683, 9, 749, 161, 72, 530]
    },
    {
      "title": "Interfaces",
      "children": [763, 769]
    },
    {
      "title": "Type Aliases",
      "children": [780, 778, 761, 776, 783]
    },
    {
      "title": "Variables",
      "children": [1]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 2,
      "character": 0,
      "url": "https://github.com/supabase/postgrest-js/blob/ede89d0/src/index.ts#L2"
    }
  ]
}
