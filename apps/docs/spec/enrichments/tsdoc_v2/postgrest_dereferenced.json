{
  "id": 0,
  "name": "@supabase/postgrest-js",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 615,
      "name": "PostgrestBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {
        "isAbstract": true
      },
      "children": [
        {
          "id": 616,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 23,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 617,
              "name": "new PostgrestBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 618,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 619,
                  "name": "ThrowOnError",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "default": {
                    "type": "literal",
                    "value": false
                  }
                }
              ],
              "parameters": [
                {
                  "id": 620,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 618,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 615,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": "[Circular ~.children.0.children]",
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [616]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [625, 628, 623, 633, 621, 624, 626, 627, 622]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [636, 640, 634]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 7,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 652,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        },
                        {
                          "id": 653,
                          "name": "ThrowOnError",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "default": {
                            "type": "literal",
                            "value": false
                          }
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 491,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "conditional",
                              "checkType": {
                                "type": "reference",
                                "id": 619,
                                "name": "ThrowOnError"
                              },
                              "extendsType": {
                                "type": "literal",
                                "value": true
                              },
                              "trueType": {
                                "type": "reference",
                                "id": 674,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestResponseSuccess"
                              },
                              "falseType": {
                                "type": "reference",
                                "id": 681,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestSingleResponse"
                              }
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 618,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 619,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 625,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 17,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 628,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 20,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 629,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 630,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 631,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 632,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 623,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 633,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 21,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 621,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          }
        },
        {
          "id": 624,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 626,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 18,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false"
        },
        {
          "id": 627,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 19,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          }
        },
        {
          "id": 622,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          }
        },
        {
          "id": 636,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 56,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 637,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set an HTTP header for the request."
              },
              "parameters": [
                {
                  "id": 638,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 639,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 618,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 619,
                    "name": "ThrowOnError"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 640,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 62,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 641,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 642,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 619,
                      "name": "ThrowOnError"
                    },
                    "extendsType": {
                      "type": "literal",
                      "value": true
                    },
                    "trueType": {
                      "type": "reference",
                      "id": 674,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 618,
                          "name": "Result"
                        }
                      ],
                      "name": "PostgrestResponseSuccess"
                    },
                    "falseType": {
                      "type": "reference",
                      "id": 681,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 618,
                          "name": "Result"
                        }
                      ],
                      "name": "PostgrestSingleResponse"
                    }
                  }
                },
                {
                  "id": 643,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 644,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 645,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 646,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 647,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "conditional",
                                    "checkType": {
                                      "type": "reference",
                                      "id": 619,
                                      "name": "ThrowOnError"
                                    },
                                    "extendsType": {
                                      "type": "literal",
                                      "value": true
                                    },
                                    "trueType": {
                                      "type": "reference",
                                      "id": 674,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestResponseSuccess"
                                    },
                                    "falseType": {
                                      "type": "reference",
                                      "id": 681,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestSingleResponse"
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 476,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 648,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 649,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 650,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 651,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 477,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 477,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "implementationOf": {
                "type": "reference",
                "name": "PromiseLike.then"
              }
            }
          ],
          "implementationOf": {
            "type": "reference",
            "name": "PromiseLike.then"
          }
        },
        {
          "id": 634,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 635,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 618,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 619,
                        "name": "ThrowOnError"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 618,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [616]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [625, 628, 623, 633, 621, 624, 626, 627, 622]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [636, 640, 634]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestBuilder.ts",
          "line": 7,
          "character": 30
        }
      ],
      "typeParameter": [
        {
          "id": 652,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 653,
          "name": "ThrowOnError",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "default": {
            "type": "literal",
            "value": false
          }
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 491,
          "name": "PostgrestTransformBuilder"
        }
      ],
      "implementedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "id": 619,
                "name": "ThrowOnError"
              },
              "extendsType": {
                "type": "literal",
                "value": true
              },
              "trueType": {
                "type": "reference",
                "id": 674,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 618,
                    "name": "Result"
                  }
                ],
                "name": "PostgrestResponseSuccess"
              },
              "falseType": {
                "type": "reference",
                "id": 681,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 618,
                    "name": "Result"
                  }
                ],
                "name": "PostgrestSingleResponse"
              }
            }
          ],
          "qualifiedName": "PromiseLike",
          "package": "typescript",
          "name": "PromiseLike"
        }
      ]
    },
    {
      "id": 9,
      "name": "PostgrestClient",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "shortText": "PostgREST client."
      },
      "children": [
        {
          "id": 10,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 41,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 11,
              "name": "new PostgrestClient",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "comment": {
                "shortText": "Creates a PostgREST client."
              },
              "typeParameter": [
                {
                  "id": 12,
                  "name": "Database",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 13,
                  "name": "SchemaName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "extendsType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      }
                    },
                    "trueType": {
                      "type": "literal",
                      "value": "public"
                    },
                    "falseType": {
                      "type": "intersection",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "id": 12,
                            "name": "Database"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 14,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  },
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 13,
                        "name": "SchemaName"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 15,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "URL of the PostgREST endpoint"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 16,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 17,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 20,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 50,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 21,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 22,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "comment": {
                                    "shortText": "Custom fetch\n"
                                  },
                                  "parameters": [
                                    {
                                      "id": 23,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 24,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 18,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Custom headers"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 48,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 19,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Postgres schema to switch to"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 49,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "id": 13,
                            "name": "SchemaName",
                            "dereferenced": {}
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [20, 18, 19]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 9,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 13,
                    "name": "SchemaName"
                  },
                  {
                    "type": "reference",
                    "id": 14,
                    "name": "Schema"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 28,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 29,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 29,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 30,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 31,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 32,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 26,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 27,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 27,
          "name": "schemaName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 28,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 13,
            "name": "SchemaName",
            "dereferenced": {}
          }
        },
        {
          "id": 25,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 26,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 33,
          "name": "from",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 59,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 34,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a query on a table or a view."
              },
              "typeParameter": [
                {
                  "id": 35,
                  "name": "TableName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 36,
                  "name": "Table",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericTable"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 37,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table or view name to query\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 35,
                    "name": "TableName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 64,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 14,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 36,
                    "name": "Table"
                  },
                  {
                    "type": "reference",
                    "id": 35,
                    "name": "TableName"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 36,
                      "name": "Table"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 38,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 39,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [39]
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 40,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a query on a table or a view."
              },
              "typeParameter": [
                {
                  "id": 41,
                  "name": "ViewName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 42,
                  "name": "View",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericView"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 43,
                  "name": "relation",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The table or view name to query\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 41,
                    "name": "ViewName",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 64,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 14,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 42,
                    "name": "View"
                  },
                  {
                    "type": "reference",
                    "id": 41,
                    "name": "ViewName"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 42,
                      "name": "View"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 44,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 45,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [45]
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 50,
          "name": "rpc",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 124,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 51,
              "name": "rpc",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a function call."
              },
              "typeParameter": [
                {
                  "id": 52,
                  "name": "FnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 53,
                  "name": "Fn",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericFunction"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 54,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The function name to call"
                  },
                  "type": {
                    "type": "reference",
                    "id": 52,
                    "name": "FnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 55,
                  "name": "args",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The arguments to pass to the function call"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Args"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Fn"
                    }
                  },
                  "defaultValue": "{}"
                },
                {
                  "id": 56,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 57,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 60,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count rows returned by the\nfunction. Only applicable for [set-returning\nfunctions](https://www.postgresql.org/docs/current/functions-srf.html).\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 134,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 59,
                          "name": "get",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "When set to `true`, the function will be called with\nread-only access mode."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 133,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 58,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestClient.ts",
                              "line": 132,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [60, 59, 58]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 14,
                    "name": "Schema"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "literal",
                        "value": "Returns"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 53,
                        "name": "Fn"
                      }
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "trueType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        "objectType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "intrinsic",
                            "name": "any"
                          },
                          "objectType": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      },
                      "extendsType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      "trueType": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "intrinsic",
                          "name": "any"
                        },
                        "objectType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Returns"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 53,
                      "name": "Fn"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 52,
                    "name": "FnName"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 46,
          "name": "schema",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestClient.ts",
              "line": 87,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 47,
              "name": "schema",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Select a schema to query or perform an function (rpc) call.",
                "text": "The schema needs to be on the list of exposed schemas inside Supabase.\n"
              },
              "typeParameter": [
                {
                  "id": 48,
                  "name": "DynamicSchema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 49,
                  "name": "schema",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The schema to query\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 48,
                    "name": "DynamicSchema",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 9,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  },
                  {
                    "type": "reference",
                    "id": 48,
                    "name": "DynamicSchema"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "id": 48,
                        "name": "DynamicSchema"
                      },
                      "objectType": {
                        "type": "reference",
                        "id": 12,
                        "name": "Database"
                      }
                    },
                    "extendsType": {
                      "type": "reference",
                      "name": "GenericSchema"
                    },
                    "trueType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "objectType": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [10]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [28, 26, 27, 25]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [33, 50, 46]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestClient.ts",
          "line": 17,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 61,
          "name": "Database",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Types for the schema from the [type\ngenerator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n"
          },
          "default": {
            "type": "intrinsic",
            "name": "any"
          }
        },
        {
          "id": 62,
          "name": "SchemaName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Postgres schema to switch to. Must be a string\nliteral, the same one passed to the constructor. If the schema is not\n`\"public\"`, this must be supplied manually.\n"
          },
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "id": 12,
                  "name": "Database"
                }
              }
            ]
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "literal",
              "value": "public"
            },
            "extendsType": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "id": 12,
                "name": "Database"
              }
            },
            "trueType": {
              "type": "literal",
              "value": "public"
            },
            "falseType": {
              "type": "intersection",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "typeOperator",
                  "operator": "keyof",
                  "target": {
                    "type": "reference",
                    "id": 12,
                    "name": "Database"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 63,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          },
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 13,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "id": 12,
                "name": "Database"
              }
            },
            "extendsType": {
              "type": "reference",
              "name": "GenericSchema"
            },
            "trueType": {
              "type": "indexedAccess",
              "indexType": {
                "type": "reference",
                "id": 13,
                "name": "SchemaName"
              },
              "objectType": {
                "type": "reference",
                "id": 12,
                "name": "Database"
              }
            },
            "falseType": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        }
      ]
    },
    {
      "id": 654,
      "name": "PostgrestError",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "shortText": "Error format",
        "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
      },
      "children": [
        {
          "id": 655,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 11,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 656,
              "name": "new PostgrestError",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 657,
                  "name": "context",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 658,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 662,
                          "name": "code",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 73
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 660,
                          "name": "details",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 661,
                          "name": "hint",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 659,
                          "name": "message",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestError.ts",
                              "line": 11,
                              "character": 25
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [662, 660, 661, 659]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 654,
                "name": "default"
              },
              "overwrites": {
                "type": "reference",
                "name": "Error.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Error.constructor"
          }
        },
        {
          "id": 665,
          "name": "code",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 9,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 663,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 7,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 664,
          "name": "hint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestError.ts",
              "line": 8,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [655]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [665, 663, 664]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestError.ts",
          "line": 6,
          "character": 21
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "qualifiedName": "Error",
          "package": "typescript",
          "name": "Error"
        }
      ]
    },
    {
      "id": 151,
      "name": "PostgrestFilterBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 152,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 153,
              "name": "new PostgrestFilterBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 154,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 155,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 156,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 157,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 158,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 159,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 615,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": [
                        {
                          "id": 616,
                          "name": "constructor",
                          "kind": 512,
                          "kindString": "Constructor",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 23,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 617,
                              "name": "new PostgrestBuilder",
                              "kind": 16384,
                              "kindString": "Constructor signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 618,
                                  "name": "Result",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                },
                                {
                                  "id": 619,
                                  "name": "ThrowOnError",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  },
                                  "default": {
                                    "type": "literal",
                                    "value": false
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 620,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "literal",
                                        "value": false
                                      }
                                    ],
                                    "name": "default",
                                    "dereferenced": "[Circular ~.children.3.children.0.signatures.0.parameters.0.type.dereferenced]"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 615,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 619,
                                    "name": "ThrowOnError"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 625,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 17,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 628,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 20,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 629,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 630,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 631,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 632,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 623,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 633,
                          "name": "isMaybeSingle",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 21,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 621,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 13,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 624,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 16,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 626,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 18,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        },
                        {
                          "id": 627,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 19,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript",
                            "name": "AbortSignal"
                          }
                        },
                        {
                          "id": 622,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 14,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        },
                        {
                          "id": 636,
                          "name": "setHeader",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 56,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 637,
                              "name": "setHeader",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Set an HTTP header for the request."
                              },
                              "parameters": [
                                {
                                  "id": 638,
                                  "name": "name",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 639,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 615,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 619,
                                    "name": "ThrowOnError"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 640,
                          "name": "then",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 62,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 641,
                              "name": "then",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 642,
                                  "name": "TResult1",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "conditional",
                                    "checkType": {
                                      "type": "reference",
                                      "id": 619,
                                      "name": "ThrowOnError"
                                    },
                                    "extendsType": {
                                      "type": "literal",
                                      "value": true
                                    },
                                    "trueType": {
                                      "type": "reference",
                                      "id": 674,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestResponseSuccess"
                                    },
                                    "falseType": {
                                      "type": "reference",
                                      "id": 681,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestSingleResponse"
                                    }
                                  }
                                },
                                {
                                  "id": 643,
                                  "name": "TResult2",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "intrinsic",
                                    "name": "never"
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 644,
                                  "name": "onfulfilled",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 645,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 646,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 647,
                                                  "name": "value",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "conditional",
                                                    "checkType": {
                                                      "type": "reference",
                                                      "id": 619,
                                                      "name": "ThrowOnError"
                                                    },
                                                    "extendsType": {
                                                      "type": "literal",
                                                      "value": true
                                                    },
                                                    "trueType": {
                                                      "type": "reference",
                                                      "id": 674,
                                                      "typeArguments": [
                                                        {
                                                          "type": "reference",
                                                          "id": 618,
                                                          "name": "Result"
                                                        }
                                                      ],
                                                      "name": "PostgrestResponseSuccess"
                                                    },
                                                    "falseType": {
                                                      "type": "reference",
                                                      "id": 681,
                                                      "typeArguments": [
                                                        {
                                                          "type": "reference",
                                                          "id": 618,
                                                          "name": "Result"
                                                        }
                                                      ],
                                                      "name": "PostgrestSingleResponse"
                                                    }
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 476,
                                                    "name": "TResult1"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 476,
                                                        "name": "TResult1"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 648,
                                  "name": "onrejected",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 649,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 650,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 651,
                                                  "name": "reason",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 477,
                                                    "name": "TResult2"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 477,
                                                        "name": "TResult2"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "PromiseLike",
                                "package": "typescript",
                                "name": "PromiseLike"
                              },
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            }
                          ],
                          "implementationOf": {
                            "type": "reference",
                            "name": "PromiseLike.then"
                          }
                        },
                        {
                          "id": 634,
                          "name": "throwOnError",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 48,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 635,
                              "name": "throwOnError",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                              },
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 619,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "literal",
                                        "value": true
                                      }
                                    ],
                                    "name": "default"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [616]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [625, 628, 623, 633, 621, 624, 626, 627, 622]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [636, 640, 634]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 7,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 652,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        },
                        {
                          "id": 653,
                          "name": "ThrowOnError",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "default": {
                            "type": "literal",
                            "value": false
                          }
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 491,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "conditional",
                              "checkType": {
                                "type": "reference",
                                "id": 619,
                                "name": "ThrowOnError"
                              },
                              "extendsType": {
                                "type": "literal",
                                "value": true
                              },
                              "trueType": {
                                "type": "reference",
                                "id": 674,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestResponseSuccess"
                              },
                              "falseType": {
                                "type": "reference",
                                "id": 681,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestSingleResponse"
                              }
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 493,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 492,
            "name": "default.constructor"
          }
        },
        {
          "id": 459,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 17,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 583,
            "name": "default.body"
          }
        },
        {
          "id": 462,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 20,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 463,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 464,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 465,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 466,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 586,
            "name": "default.fetch"
          }
        },
        {
          "id": 457,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 581,
            "name": "default.headers"
          }
        },
        {
          "id": 467,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 21,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 591,
            "name": "default.isMaybeSingle"
          }
        },
        {
          "id": 455,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 579,
            "name": "default.method"
          }
        },
        {
          "id": 458,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 582,
            "name": "default.schema"
          }
        },
        {
          "id": 460,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 18,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 584,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 461,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 19,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 585,
            "name": "default.signal"
          }
        },
        {
          "id": 456,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 580,
            "name": "default.url"
          }
        },
        {
          "id": 427,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 180,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 428,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the AbortSignal for the fetch request."
              },
              "parameters": [
                {
                  "id": 429,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The AbortSignal to use for the fetch request\n"
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 552,
                "name": "default.abortSignal"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 551,
            "name": "default.abortSignal"
          }
        },
        {
          "id": 271,
          "name": "containedBy",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 342,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 272,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
              },
              "typeParameter": [
                {
                  "id": 273,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 274,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 273,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 275,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 273,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 276,
              "name": "containedBy",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\nevery element appearing in `column` is contained by `value`."
              },
              "parameters": [
                {
                  "id": 277,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 278,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 263,
          "name": "contains",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 315,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 264,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
              },
              "typeParameter": [
                {
                  "id": 265,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 266,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 265,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 267,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 265,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 268,
              "name": "contains",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for jsonb, array, and range columns. Match only rows where\n`column` contains every element appearing in `value`."
              },
              "parameters": [
                {
                  "id": 269,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 270,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The jsonb, array, or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "qualifiedName": "Record",
                        "package": "typescript",
                        "name": "Record"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 436,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 221,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 437,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a string in CSV format."
              },
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 561,
                "name": "default.csv"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 560,
            "name": "default.csv"
          }
        },
        {
          "id": 160,
          "name": "eq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 87,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 161,
              "name": "eq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is equal to `value`.",
                "text": "To check if the value of `column` is NULL, you should use `.is()` instead.\n"
              },
              "typeParameter": [
                {
                  "id": 162,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 163,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 162,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 164,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 154,
                          "name": "Schema"
                        },
                        {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        },
                        {
                          "type": "reference",
                          "id": 162,
                          "name": "ColumnName"
                        }
                      ],
                      "name": "ResolveFilterValue"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "never"
                    },
                    "trueType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "falseType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 154,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 155,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 162,
                            "name": "ColumnName"
                          }
                        ],
                        "name": "ResolveFilterValue"
                      },
                      "extendsType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "trueType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          }
                        ],
                        "qualifiedName": "NonNullable",
                        "package": "typescript",
                        "name": "NonNullable"
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 440,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 259,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 441,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as the EXPLAIN plan for the query.",
                "text": "You need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method.\n"
              },
              "parameters": [
                {
                  "id": 442,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 443,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 444,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 267,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 447,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on buffer usage\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 270,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 449,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 272,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 446,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 269,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 445,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 268,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 448,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on WAL record generation\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 271,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [444, 447, 449, 446, 445, 448]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 565,
                "name": "default.explain"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 564,
            "name": "default.explain"
          }
        },
        {
          "id": 366,
          "name": "filter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 569,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 367,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "typeParameter": [
                {
                  "id": 368,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 369,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 368,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 370,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with, following PostgREST syntax"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "FilterOperator"
                      },
                      {
                        "type": "literal",
                        "value": "not.eq"
                      },
                      {
                        "type": "literal",
                        "value": "not.neq"
                      },
                      {
                        "type": "literal",
                        "value": "not.gt"
                      },
                      {
                        "type": "literal",
                        "value": "not.gte"
                      },
                      {
                        "type": "literal",
                        "value": "not.lt"
                      },
                      {
                        "type": "literal",
                        "value": "not.lte"
                      },
                      {
                        "type": "literal",
                        "value": "not.like"
                      },
                      {
                        "type": "literal",
                        "value": "not.ilike"
                      },
                      {
                        "type": "literal",
                        "value": "not.is"
                      },
                      {
                        "type": "literal",
                        "value": "not.in"
                      },
                      {
                        "type": "literal",
                        "value": "not.cs"
                      },
                      {
                        "type": "literal",
                        "value": "not.cd"
                      },
                      {
                        "type": "literal",
                        "value": "not.sl"
                      },
                      {
                        "type": "literal",
                        "value": "not.sr"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxl"
                      },
                      {
                        "type": "literal",
                        "value": "not.nxr"
                      },
                      {
                        "type": "literal",
                        "value": "not.adj"
                      },
                      {
                        "type": "literal",
                        "value": "not.ov"
                      },
                      {
                        "type": "literal",
                        "value": "not.fts"
                      },
                      {
                        "type": "literal",
                        "value": "not.plfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.phfts"
                      },
                      {
                        "type": "literal",
                        "value": "not.wfts"
                      }
                    ]
                  }
                },
                {
                  "id": 371,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 372,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy the filter. This is an escape hatch - you\nshould use the specific filter methods wherever possible.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "parameters": [
                {
                  "id": 373,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 374,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to filter with, following PostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 375,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 438,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 229,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 439,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
              },
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 563,
                "name": "default.geojson"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 562,
            "name": "default.geojson"
          }
        },
        {
          "id": 170,
          "name": "gt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 120,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 171,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than `value`."
              },
              "typeParameter": [
                {
                  "id": 172,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 173,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 172,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 174,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 172,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 155,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 175,
              "name": "gt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than `value`."
              },
              "parameters": [
                {
                  "id": 176,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 177,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 178,
          "name": "gte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 133,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 179,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than or equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 180,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 181,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 180,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 182,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 180,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 155,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 183,
              "name": "gte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is greater than or equal to `value`."
              },
              "parameters": [
                {
                  "id": 184,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 185,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 226,
          "name": "ilike",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 217,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 227,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
              },
              "typeParameter": [
                {
                  "id": 228,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 229,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 228,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 230,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 231,
              "name": "ilike",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-insensitively."
              },
              "parameters": [
                {
                  "id": 232,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 233,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 234,
          "name": "ilikeAllOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 230,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 235,
              "name": "ilikeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches all of `patterns` case-insensitively."
              },
              "typeParameter": [
                {
                  "id": 236,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 237,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 236,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 238,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 239,
              "name": "ilikeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches all of `patterns` case-insensitively."
              },
              "parameters": [
                {
                  "id": 240,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 241,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 242,
          "name": "ilikeAnyOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 246,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 243,
              "name": "ilikeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches any of `patterns` case-insensitively."
              },
              "typeParameter": [
                {
                  "id": 244,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 245,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 244,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 246,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 247,
              "name": "ilikeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches any of `patterns` case-insensitively."
              },
              "parameters": [
                {
                  "id": 248,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 249,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 258,
          "name": "in",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 290,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 259,
              "name": "in",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is included in the `values` array."
              },
              "typeParameter": [
                {
                  "id": 260,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 261,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 260,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 262,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values array to filter with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "id": 154,
                              "name": "Schema"
                            },
                            {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            },
                            {
                              "type": "reference",
                              "id": 260,
                              "name": "ColumnName"
                            }
                          ],
                          "name": "ResolveFilterValue"
                        },
                        "extendsType": {
                          "type": "intrinsic",
                          "name": "never"
                        },
                        "trueType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "falseType": {
                          "type": "conditional",
                          "checkType": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "id": 154,
                                "name": "Schema"
                              },
                              {
                                "type": "reference",
                                "id": 155,
                                "name": "Row"
                              },
                              {
                                "type": "reference",
                                "id": 260,
                                "name": "ColumnName"
                              }
                            ],
                            "name": "ResolveFilterValue"
                          },
                          "extendsType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "trueType": {
                            "type": "reference",
                            "name": "ResolvedFilterValue"
                          },
                          "falseType": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 250,
          "name": "is",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 262,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 251,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` IS `value`.",
                "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
              },
              "typeParameter": [
                {
                  "id": 252,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 253,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 252,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 254,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 252,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": null
                          }
                        ]
                      },
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 252,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ]
                      },
                      {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 252,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          },
                          {
                            "type": "literal",
                            "value": true
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 255,
              "name": "is",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` IS `value`.",
                "text": "For non-boolean columns, this is only relevant for checking if the value of\n`column` is NULL by setting `value` to `null`.\n\nFor boolean columns, you can also set `value` to `true` or `false` and it\nwill behave the same way as `.eq()`.\n"
              },
              "parameters": [
                {
                  "id": 256,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 257,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 202,
          "name": "like",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 172,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 203,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
              },
              "typeParameter": [
                {
                  "id": 204,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 205,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 204,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 206,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 207,
              "name": "like",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches `pattern` case-sensitively."
              },
              "parameters": [
                {
                  "id": 208,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 209,
                  "name": "pattern",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The pattern to match with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 210,
          "name": "likeAllOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 185,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 211,
              "name": "likeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches all of `patterns` case-sensitively."
              },
              "typeParameter": [
                {
                  "id": 212,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 213,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 212,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 214,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 215,
              "name": "likeAllOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches all of `patterns` case-sensitively."
              },
              "parameters": [
                {
                  "id": 216,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 217,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 218,
          "name": "likeAnyOf",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 201,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 219,
              "name": "likeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches any of `patterns` case-sensitively."
              },
              "typeParameter": [
                {
                  "id": 220,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 221,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 220,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 222,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 223,
              "name": "likeAnyOf",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` matches any of `patterns` case-sensitively."
              },
              "parameters": [
                {
                  "id": 224,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 225,
                  "name": "patterns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The patterns to match with\n"
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 412,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 131,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 413,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `count`."
              },
              "parameters": [
                {
                  "id": 414,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The maximum number of rows to return"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 415,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 416,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 417,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 136,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 418,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 136,
                              "character": 32
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [417, 418]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 537,
                "name": "default.limit"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 536,
            "name": "default.limit"
          }
        },
        {
          "id": 186,
          "name": "lt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 146,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 187,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than `value`."
              },
              "typeParameter": [
                {
                  "id": 188,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 189,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 188,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 190,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 188,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 155,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 191,
              "name": "lt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than `value`."
              },
              "parameters": [
                {
                  "id": 192,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 193,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 194,
          "name": "lte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 159,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 195,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than or equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 196,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 197,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 196,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 198,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 196,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 155,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 199,
              "name": "lte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is less than or equal to `value`."
              },
              "parameters": [
                {
                  "id": 200,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 201,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 343,
          "name": "match",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 502,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 344,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
              },
              "typeParameter": [
                {
                  "id": 345,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 346,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 345,
                        "name": "ColumnName"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "id": 345,
                          "name": "ColumnName"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        }
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 347,
              "name": "match",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where each column in `query` keys is equal to its\nassociated value. Shorthand for multiple `.eq()`s."
              },
              "parameters": [
                {
                  "id": 348,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The object to filter with, with column names as keys mapped\nto their filter values\n"
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 433,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 204,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 434,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
              },
              "typeParameter": [
                {
                  "id": 435,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 156,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 435,
                        "name": "ResultOne"
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 558,
                "name": "default.maybeSingle"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 557,
            "name": "default.maybeSingle"
          }
        },
        {
          "id": 165,
          "name": "neq",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 108,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 166,
              "name": "neq",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows where `column` is not equal to `value`."
              },
              "typeParameter": [
                {
                  "id": 167,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 168,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 167,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 169,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with\n"
                  },
                  "type": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "id": 154,
                          "name": "Schema"
                        },
                        {
                          "type": "reference",
                          "id": 155,
                          "name": "Row"
                        },
                        {
                          "type": "reference",
                          "id": 167,
                          "name": "ColumnName"
                        }
                      ],
                      "name": "ResolveFilterValue"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "never"
                    },
                    "trueType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "falseType": {
                      "type": "conditional",
                      "checkType": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 154,
                            "name": "Schema"
                          },
                          {
                            "type": "reference",
                            "id": 155,
                            "name": "Row"
                          },
                          {
                            "type": "reference",
                            "id": 167,
                            "name": "ColumnName"
                          }
                        ],
                        "name": "ResolveFilterValue"
                      },
                      "extendsType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "trueType": {
                        "type": "reference",
                        "name": "ResolvedFilterValue"
                      },
                      "falseType": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 349,
          "name": "not",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 518,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 350,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which doesn't satisfy the filter.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "typeParameter": [
                {
                  "id": 351,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 352,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 351,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 353,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                  },
                  "type": {
                    "type": "reference",
                    "name": "FilterOperator"
                  }
                },
                {
                  "id": 354,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "reference",
                      "id": 351,
                      "name": "ColumnName"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 155,
                      "name": "Row"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 355,
              "name": "not",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which doesn't satisfy the filter.",
                "text": "Unlike most filters, `opearator` and `value` are used as-is and need to\nfollow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure they are properly sanitized.\n"
              },
              "parameters": [
                {
                  "id": 356,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 357,
                  "name": "operator",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The operator to be negated to filter with, following\nPostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 358,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The value to filter with, following PostgREST syntax\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 359,
          "name": "or",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 557,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 360,
              "name": "or",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Match only rows which satisfy at least one of the filters.",
                "text": "Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\nsyntax](https://postgrest.org/en/stable/api.html#operators). You also need\nto make sure it's properly sanitized.\n\nIt's currently not possible to do an `.or()` filter across multiple tables.\n"
              },
              "parameters": [
                {
                  "id": 361,
                  "name": "filters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The filters to use, following PostgREST syntax"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 362,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 363,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 364,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Deprecated, use `referencedTable` instead\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 562,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 365,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to filter on referenced tables\ninstead of the parent table"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 562,
                              "character": 32
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [364, 365]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 381,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 382,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
              },
              "typeParameter": [
                {
                  "id": 383,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 384,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 383,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 385,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 386,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 387,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 388,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 389,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a referenced table by\nits columns"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [387, 388, 389]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 506,
                "name": "default.order"
              }
            },
            {
              "id": 390,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
              },
              "parameters": [
                {
                  "id": 391,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 392,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 393,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 394,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 395,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 396,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a referenced table by\nits columns"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [394, 395, 396]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 514,
                "name": "default.order"
              }
            },
            {
              "id": 397,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 398,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 399,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 398,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 400,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 401,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 402,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 404,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 403,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [402, 404, 403]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 521,
                "name": "default.order"
              }
            },
            {
              "id": 405,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 406,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 407,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 408,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 409,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 411,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 410,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [409, 411, 410]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 529,
                "name": "default.order"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 505,
            "name": "default.order"
          }
        },
        {
          "id": 319,
          "name": "overlaps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 441,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 320,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
              },
              "typeParameter": [
                {
                  "id": 321,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 322,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 321,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 323,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "reference",
                              "id": 321,
                              "name": "ColumnName"
                            },
                            "objectType": {
                              "type": "reference",
                              "id": 155,
                              "name": "Row"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 324,
              "name": "overlaps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for array and range columns. Match only rows where\n`column` and `value` have an element in common."
              },
              "parameters": [
                {
                  "id": 325,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 326,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The array or range value to filter with\n"
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 419,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 158,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 420,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by starting at an offset `from` and ending at the offset `to`.\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\nand fourth rows of the query."
              },
              "parameters": [
                {
                  "id": 421,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The starting index from which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 422,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The last index to which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 423,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 424,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 425,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 164,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 426,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 164,
                              "character": 32
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [425, 426]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 544,
                "name": "default.range"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 543,
            "name": "default.range"
          }
        },
        {
          "id": 311,
          "name": "rangeAdjacent",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 426,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 312,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
              },
              "typeParameter": [
                {
                  "id": 313,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 314,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 313,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 315,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 316,
              "name": "rangeAdjacent",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where `column` is\nmutually exclusive to `range` and there can be no element between the two\nranges."
              },
              "parameters": [
                {
                  "id": 317,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 318,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 279,
          "name": "rangeGt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 368,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 280,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
              },
              "typeParameter": [
                {
                  "id": 281,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 282,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 281,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 283,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 284,
              "name": "rangeGt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is greater than any element in `range`."
              },
              "parameters": [
                {
                  "id": 285,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 286,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 287,
          "name": "rangeGte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 382,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 288,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
              },
              "typeParameter": [
                {
                  "id": 289,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 290,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 289,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 291,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 292,
              "name": "rangeGte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or greater than any element in\n`range`."
              },
              "parameters": [
                {
                  "id": 293,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 294,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 295,
          "name": "rangeLt",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 397,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 296,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
              },
              "typeParameter": [
                {
                  "id": 297,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 298,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 297,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 299,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 300,
              "name": "rangeLt",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is less than any element in `range`."
              },
              "parameters": [
                {
                  "id": 301,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 302,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 303,
          "name": "rangeLte",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 411,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 304,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
              },
              "typeParameter": [
                {
                  "id": 305,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 306,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 305,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 307,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 308,
              "name": "rangeLte",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for range columns. Match only rows where every element in\n`column` is either contained in `range` or less than any element in\n`range`."
              },
              "parameters": [
                {
                  "id": 309,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 310,
                  "name": "range",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The range to filter with\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 452,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 311,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 453,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Override the type of the returned `data`."
              },
              "typeParameter": [
                {
                  "id": 454,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The new result type to override with\n"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 454,
                    "name": "NewResult"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 577,
                "name": "default.returns"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 576,
            "name": "default.returns"
          }
        },
        {
          "id": 450,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 297,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 451,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Rollback the query.",
                "text": "`data` will still be returned, but the query is not committed.\n"
              },
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 575,
                "name": "default.rollback"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 574,
            "name": "default.rollback"
          }
        },
        {
          "id": 376,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 21,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 377,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT on the query result.",
                "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
              },
              "typeParameter": [
                {
                  "id": 378,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 379,
                  "name": "NewResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 685,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 378,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 380,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 378,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 379,
                      "name": "NewResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 501,
                "name": "default.select"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 500,
            "name": "default.select"
          }
        },
        {
          "id": 470,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 56,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 471,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set an HTTP header for the request."
              },
              "parameters": [
                {
                  "id": 472,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 473,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 595,
                "name": "default.setHeader"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 594,
            "name": "default.setHeader"
          }
        },
        {
          "id": 430,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 191,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 431,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
              },
              "typeParameter": [
                {
                  "id": 432,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 156,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 432,
                    "name": "ResultOne"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 555,
                "name": "default.single"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 554,
            "name": "default.single"
          }
        },
        {
          "id": 327,
          "name": "textSearch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestFilterBuilder.ts",
              "line": 464,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 328,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
              },
              "typeParameter": [
                {
                  "id": 329,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 330,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text or tsvector column to filter on"
                  },
                  "type": {
                    "type": "reference",
                    "id": 329,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 331,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The query text to match with"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 332,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 333,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 334,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The text search configuration to use"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 467,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 335,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Change how the `query` text is interpreted\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 467,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [334, 335]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 336,
              "name": "textSearch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Only relevant for text and tsvector columns. Match only rows where\n`column` matches the query string in `query`."
              },
              "parameters": [
                {
                  "id": 337,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The text or tsvector column to filter on"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 338,
                  "name": "query",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The query text to match with"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 339,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 340,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 341,
                          "name": "config",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The text search configuration to use"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 472,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 342,
                          "name": "type",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Change how the `query` text is interpreted\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestFilterBuilder.ts",
                              "line": 472,
                              "character": 33
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "plain"
                              },
                              {
                                "type": "literal",
                                "value": "phrase"
                              },
                              {
                                "type": "literal",
                                "value": "websearch"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [341, 342]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 154,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 155,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 156,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 157,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 158,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 474,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 62,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 475,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 476,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 681,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                },
                {
                  "id": 477,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 478,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 479,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 480,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 481,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 681,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 156,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 476,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 482,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 483,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 484,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 485,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 477,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 477,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 599,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 598,
            "name": "default.then"
          }
        },
        {
          "id": 468,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 469,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 151,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 154,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 155,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 157,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 158,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 156,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 593,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 592,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [152]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [459, 462, 457, 467, 455, 458, 460, 461, 456]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [
            427, 271, 263, 436, 160, 440, 366, 438, 170, 178, 226, 234, 242, 258, 250, 202, 210,
            218, 412, 186, 194, 343, 433, 165, 349, 359, 381, 319, 419, 311, 279, 287, 295, 303,
            452, 450, 376, 470, 430, 327, 474, 468
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestFilterBuilder.ts",
          "line": 72,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 486,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 487,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 488,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 489,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 490,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 491,
          "typeArguments": [
            {
              "type": "reference",
              "id": 154,
              "name": "Schema"
            },
            {
              "type": "reference",
              "id": 155,
              "name": "Row"
            },
            {
              "type": "reference",
              "id": 156,
              "name": "Result"
            },
            {
              "type": "reference",
              "id": 157,
              "name": "RelationName"
            },
            {
              "type": "reference",
              "id": 158,
              "name": "Relationships"
            }
          ],
          "name": "default"
        }
      ]
    },
    {
      "id": 64,
      "name": "PostgrestQueryBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 65,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 18,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 66,
              "name": "new PostgrestQueryBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 67,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 68,
                  "name": "Relation",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "GenericTable"
                      },
                      {
                        "type": "reference",
                        "name": "GenericView"
                      }
                    ]
                  }
                },
                {
                  "id": 69,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 72,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    },
                    "extendsType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 70,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 71,
                            "name": "Relationships",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "src/PostgrestQueryBuilder.ts",
                                "line": 10,
                                "character": 37
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "name": "R"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [71]
                          }
                        ]
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "R"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 73,
                  "name": "url",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "qualifiedName": "URL",
                    "package": "typescript",
                    "name": "URL"
                  }
                },
                {
                  "id": 74,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 75,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 78,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 27,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 79,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 80,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 81,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 82,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 76,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 25,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 77,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 26,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [78, 76, 77]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 64,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 68,
                    "name": "Relation"
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 87,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 16,
              "character": 2
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 88,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 89,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 90,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 91,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 84,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 13,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 85,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 14,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 86,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 15,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          }
        },
        {
          "id": 83,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          }
        },
        {
          "id": 140,
          "name": "delete",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 357,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 141,
              "name": "delete",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a DELETE on the table or view.",
                "text": "By default, deleted rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
              },
              "parameters": [
                {
                  "id": 142,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 143,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 144,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count deleted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 360,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [144]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 101,
          "name": "insert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 101,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 102,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an INSERT into the table or view.",
                "text": "By default, inserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 103,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 104,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 103,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 105,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 106,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 107,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count inserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 104,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [107]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 108,
              "name": "insert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an INSERT into the table or view.",
                "text": "By default, inserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 109,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 110,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to insert. Pass an object to insert a single row\nor an array to insert multiple rows.\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 109,
                      "name": "Row"
                    }
                  }
                },
                {
                  "id": 111,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 112,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 113,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count inserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 110,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 114,
                          "name": "defaultToNull",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Make missing fields default to `null`.\nOtherwise, use the default value for the column. Only applies for bulk\ninserts.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 111,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [113, 114]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 92,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 57,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 93,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT query on the table or view."
              },
              "typeParameter": [
                {
                  "id": 94,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 95,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 685,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 67,
                        "name": "Schema"
                      },
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "literal",
                          "value": "Row"
                        },
                        "objectType": {
                          "type": "reference",
                          "id": 68,
                          "name": "Relation"
                        }
                      },
                      {
                        "type": "reference",
                        "id": 69,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 72,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 94,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 96,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 94,
                    "name": "Query",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 97,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 98,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 100,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count rows in the table or view.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 67,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 99,
                          "name": "head",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "When set to `true`, `data` will not be returned.\nUseful if you only need the count.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 66,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [100, 99]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 95,
                      "name": "ResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 133,
          "name": "update",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 309,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 134,
              "name": "update",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an UPDATE on the table or view.",
                "text": "By default, updated rows are not returned. To return it, chain the call\nwith `.select()` after filters.\n"
              },
              "typeParameter": [
                {
                  "id": 135,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 136,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to update with\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 135,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 137,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 138,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 139,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count updated rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 314,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [139]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 115,
          "name": "upsert",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestQueryBuilder.ts",
              "line": 184,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 116,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto `onConflict`, `.upsert()` allows you to perform the equivalent of\n`.insert()` if a row with the corresponding `onConflict` columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n`ignoreDuplicates`.",
                "text": "By default, upserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 117,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 118,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows.\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 117,
                    "name": "Row",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 119,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 120,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 123,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count upserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 189,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 122,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, duplicate rows are ignored. If\n`false`, duplicate rows are merged with existing rows.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 188,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 121,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n`onConflict` columns are equal.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 187,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [123, 122, 121]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 124,
              "name": "upsert",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform an UPSERT on the table or view. Depending on the column(s) passed\nto `onConflict`, `.upsert()` allows you to perform the equivalent of\n`.insert()` if a row with the corresponding `onConflict` columns doesn't\nexist, or if it does exist, perform an alternative action depending on\n`ignoreDuplicates`.",
                "text": "By default, upserted rows are not returned. To return it, chain the call\nwith `.select()`.\n"
              },
              "typeParameter": [
                {
                  "id": 125,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 126,
                  "name": "values",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The values to upsert with. Pass an object to upsert a\nsingle row or an array to upsert multiple rows.\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 125,
                      "name": "Row"
                    }
                  }
                },
                {
                  "id": 127,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 128,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 131,
                          "name": "count",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Count algorithm to use to count upserted rows.\n\n`\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\nhood.\n\n`\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\nstatistics under the hood.\n\n`\"estimated\"`: Uses exact count for low numbers and planned count for high\nnumbers.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 197,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "exact"
                              },
                              {
                                "type": "literal",
                                "value": "planned"
                              },
                              {
                                "type": "literal",
                                "value": "estimated"
                              }
                            ]
                          }
                        },
                        {
                          "id": 132,
                          "name": "defaultToNull",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Make missing fields default to `null`.\nOtherwise, use the default value for the column. This only applies when\ninserting new rows, not when merging with existing rows under\n`ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 198,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 130,
                          "name": "ignoreDuplicates",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, duplicate rows are ignored. If\n`false`, duplicate rows are merged with existing rows.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 196,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 129,
                          "name": "onConflict",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Comma-separated UNIQUE column(s) to specify how\nduplicate rows are determined. Two rows are duplicates if all the\n`onConflict` columns are equal.\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestQueryBuilder.ts",
                              "line": 195,
                              "character": 6
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [131, 132, 130, 129]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 151,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 67,
                    "name": "Schema"
                  },
                  {
                    "type": "indexedAccess",
                    "indexType": {
                      "type": "literal",
                      "value": "Row"
                    },
                    "objectType": {
                      "type": "reference",
                      "id": 68,
                      "name": "Relation"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 69,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 72,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [65]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [87, 84, 85, 86, 83]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [140, 101, 92, 133, 115]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestQueryBuilder.ts",
          "line": 6,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 145,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 146,
          "name": "Relation",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "GenericTable"
              },
              {
                "type": "reference",
                "name": "GenericView"
              }
            ]
          }
        },
        {
          "id": 147,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 150,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "id": 68,
              "name": "Relation"
            },
            "extendsType": {
              "type": "reflection",
              "declaration": {
                "id": 148,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 149,
                    "name": "Relationships",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "src/PostgrestQueryBuilder.ts",
                        "line": 10,
                        "character": 37
                      }
                    ],
                    "type": {
                      "type": "inferred",
                      "name": "R"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [149]
                  }
                ],
                "sources": [
                  {
                    "fileName": "src/PostgrestQueryBuilder.ts",
                    "line": 10,
                    "character": 35
                  }
                ]
              }
            },
            "trueType": {
              "type": "reference",
              "name": "R"
            },
            "falseType": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        }
      ]
    },
    {
      "id": 491,
      "name": "PostgrestTransformBuilder",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 492,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "signatures": [
            {
              "id": 493,
              "name": "new PostgrestTransformBuilder",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 494,
                  "name": "Schema",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "GenericSchema"
                  }
                },
                {
                  "id": 495,
                  "name": "Row",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  }
                },
                {
                  "id": 496,
                  "name": "Result",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 497,
                  "name": "RelationName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 498,
                  "name": "Relationships",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 499,
                  "name": "builder",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 496,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default",
                    "dereferenced": {
                      "id": 615,
                      "name": "PostgrestBuilder",
                      "kind": 128,
                      "kindString": "Class",
                      "flags": {
                        "isAbstract": true
                      },
                      "children": [
                        {
                          "id": 616,
                          "name": "constructor",
                          "kind": 512,
                          "kindString": "Constructor",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 23,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 617,
                              "name": "new PostgrestBuilder",
                              "kind": 16384,
                              "kindString": "Constructor signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 618,
                                  "name": "Result",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {}
                                },
                                {
                                  "id": 619,
                                  "name": "ThrowOnError",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  },
                                  "default": {
                                    "type": "literal",
                                    "value": false
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 620,
                                  "name": "builder",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "literal",
                                        "value": false
                                      }
                                    ],
                                    "name": "default",
                                    "dereferenced": "[Circular ~.children.5.children.0.signatures.0.parameters.0.type.dereferenced]"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 615,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 619,
                                    "name": "ThrowOnError"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 625,
                          "name": "body",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 17,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "id": 628,
                          "name": "fetch",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 20,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 629,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 630,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 631,
                                      "name": "input",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "reference",
                                            "qualifiedName": "RequestInfo",
                                            "package": "typescript",
                                            "name": "RequestInfo"
                                          },
                                          {
                                            "type": "reference",
                                            "qualifiedName": "URL",
                                            "package": "typescript",
                                            "name": "URL"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 632,
                                      "name": "init",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "type": {
                                        "type": "reference",
                                        "qualifiedName": "RequestInit",
                                        "package": "typescript",
                                        "name": "RequestInit"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "qualifiedName": "Response",
                                        "package": "typescript",
                                        "name": "Response"
                                      }
                                    ],
                                    "qualifiedName": "Promise",
                                    "package": "typescript",
                                    "name": "Promise"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 623,
                          "name": "headers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 15,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ],
                            "qualifiedName": "Record",
                            "package": "typescript",
                            "name": "Record"
                          }
                        },
                        {
                          "id": 633,
                          "name": "isMaybeSingle",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 21,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 621,
                          "name": "method",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 13,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "GET"
                              },
                              {
                                "type": "literal",
                                "value": "HEAD"
                              },
                              {
                                "type": "literal",
                                "value": "POST"
                              },
                              {
                                "type": "literal",
                                "value": "PATCH"
                              },
                              {
                                "type": "literal",
                                "value": "DELETE"
                              }
                            ]
                          }
                        },
                        {
                          "id": 624,
                          "name": "schema",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 16,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 626,
                          "name": "shouldThrowOnError",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 18,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        },
                        {
                          "id": 627,
                          "name": "signal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true,
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 19,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "AbortSignal",
                            "package": "typescript",
                            "name": "AbortSignal"
                          }
                        },
                        {
                          "id": 622,
                          "name": "url",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isProtected": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 14,
                              "character": 12
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        },
                        {
                          "id": 636,
                          "name": "setHeader",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 56,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 637,
                              "name": "setHeader",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "Set an HTTP header for the request."
                              },
                              "parameters": [
                                {
                                  "id": 638,
                                  "name": "name",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 639,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "id": 615,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 619,
                                    "name": "ThrowOnError"
                                  }
                                ],
                                "name": "default"
                              }
                            }
                          ]
                        },
                        {
                          "id": 640,
                          "name": "then",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 62,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 641,
                              "name": "then",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 642,
                                  "name": "TResult1",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "conditional",
                                    "checkType": {
                                      "type": "reference",
                                      "id": 619,
                                      "name": "ThrowOnError"
                                    },
                                    "extendsType": {
                                      "type": "literal",
                                      "value": true
                                    },
                                    "trueType": {
                                      "type": "reference",
                                      "id": 674,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestResponseSuccess"
                                    },
                                    "falseType": {
                                      "type": "reference",
                                      "id": 681,
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "id": 618,
                                          "name": "Result"
                                        }
                                      ],
                                      "name": "PostgrestSingleResponse"
                                    }
                                  }
                                },
                                {
                                  "id": 643,
                                  "name": "TResult2",
                                  "kind": 131072,
                                  "kindString": "Type parameter",
                                  "flags": {},
                                  "default": {
                                    "type": "intrinsic",
                                    "name": "never"
                                  }
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 644,
                                  "name": "onfulfilled",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 645,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 646,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 647,
                                                  "name": "value",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "conditional",
                                                    "checkType": {
                                                      "type": "reference",
                                                      "id": 619,
                                                      "name": "ThrowOnError"
                                                    },
                                                    "extendsType": {
                                                      "type": "literal",
                                                      "value": true
                                                    },
                                                    "trueType": {
                                                      "type": "reference",
                                                      "id": 674,
                                                      "typeArguments": [
                                                        {
                                                          "type": "reference",
                                                          "id": 618,
                                                          "name": "Result"
                                                        }
                                                      ],
                                                      "name": "PostgrestResponseSuccess"
                                                    },
                                                    "falseType": {
                                                      "type": "reference",
                                                      "id": 681,
                                                      "typeArguments": [
                                                        {
                                                          "type": "reference",
                                                          "id": 618,
                                                          "name": "Result"
                                                        }
                                                      ],
                                                      "name": "PostgrestSingleResponse"
                                                    }
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 476,
                                                    "name": "TResult1"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 476,
                                                        "name": "TResult1"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": 648,
                                  "name": "onrejected",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": null
                                      },
                                      {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 649,
                                          "name": "__type",
                                          "kind": 65536,
                                          "kindString": "Type literal",
                                          "flags": {},
                                          "signatures": [
                                            {
                                              "id": 650,
                                              "name": "__type",
                                              "kind": 4096,
                                              "kindString": "Call signature",
                                              "flags": {},
                                              "parameters": [
                                                {
                                                  "id": 651,
                                                  "name": "reason",
                                                  "kind": 32768,
                                                  "kindString": "Parameter",
                                                  "flags": {},
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "any"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "union",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "id": 477,
                                                    "name": "TResult2"
                                                  },
                                                  {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                      {
                                                        "type": "reference",
                                                        "id": 477,
                                                        "name": "TResult2"
                                                      }
                                                    ],
                                                    "qualifiedName": "PromiseLike",
                                                    "package": "typescript",
                                                    "name": "PromiseLike"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      }
                                    ]
                                  }
                                ],
                                "qualifiedName": "PromiseLike",
                                "package": "typescript",
                                "name": "PromiseLike"
                              },
                              "implementationOf": {
                                "type": "reference",
                                "name": "PromiseLike.then"
                              }
                            }
                          ],
                          "implementationOf": {
                            "type": "reference",
                            "name": "PromiseLike.then"
                          }
                        },
                        {
                          "id": 634,
                          "name": "throwOnError",
                          "kind": 2048,
                          "kindString": "Method",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "src/PostgrestBuilder.ts",
                              "line": 48,
                              "character": 2
                            }
                          ],
                          "signatures": [
                            {
                              "id": 635,
                              "name": "throwOnError",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "comment": {
                                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
                              },
                              "type": {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 619,
                                        "name": "ThrowOnError"
                                      }
                                    ],
                                    "name": "default"
                                  },
                                  {
                                    "type": "reference",
                                    "id": 615,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 618,
                                        "name": "Result"
                                      },
                                      {
                                        "type": "literal",
                                        "value": true
                                      }
                                    ],
                                    "name": "default"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "groups": [
                        {
                          "title": "Constructors",
                          "kind": 512,
                          "children": [616]
                        },
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [625, 628, 623, 633, 621, 624, 626, 627, 622]
                        },
                        {
                          "title": "Methods",
                          "kind": 2048,
                          "children": [636, 640, 634]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "src/PostgrestBuilder.ts",
                          "line": 7,
                          "character": 30
                        }
                      ],
                      "typeParameter": [
                        {
                          "id": 652,
                          "name": "Result",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        },
                        {
                          "id": 653,
                          "name": "ThrowOnError",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "default": {
                            "type": "literal",
                            "value": false
                          }
                        }
                      ],
                      "extendedBy": [
                        {
                          "type": "reference",
                          "id": 491,
                          "name": "PostgrestTransformBuilder"
                        }
                      ],
                      "implementedTypes": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "conditional",
                              "checkType": {
                                "type": "reference",
                                "id": 619,
                                "name": "ThrowOnError"
                              },
                              "extendsType": {
                                "type": "literal",
                                "value": true
                              },
                              "trueType": {
                                "type": "reference",
                                "id": 674,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestResponseSuccess"
                              },
                              "falseType": {
                                "type": "reference",
                                "id": 681,
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "id": 618,
                                    "name": "Result"
                                  }
                                ],
                                "name": "PostgrestSingleResponse"
                              }
                            }
                          ],
                          "qualifiedName": "PromiseLike",
                          "package": "typescript",
                          "name": "PromiseLike"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 617,
                "name": "default.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 616,
            "name": "default.constructor"
          }
        },
        {
          "id": 583,
          "name": "body",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 17,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 625,
            "name": "default.body"
          }
        },
        {
          "id": 586,
          "name": "fetch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 20,
              "character": 12
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 587,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "signatures": [
                {
                  "id": 588,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 589,
                      "name": "input",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "qualifiedName": "RequestInfo",
                            "package": "typescript",
                            "name": "RequestInfo"
                          },
                          {
                            "type": "reference",
                            "qualifiedName": "URL",
                            "package": "typescript",
                            "name": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "id": 590,
                      "name": "init",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "qualifiedName": "RequestInit",
                        "package": "typescript",
                        "name": "RequestInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "qualifiedName": "Response",
                        "package": "typescript",
                        "name": "Response"
                      }
                    ],
                    "qualifiedName": "Promise",
                    "package": "typescript",
                    "name": "Promise"
                  }
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 628,
            "name": "default.fetch"
          }
        },
        {
          "id": 581,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 15,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 623,
            "name": "default.headers"
          }
        },
        {
          "id": 591,
          "name": "isMaybeSingle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 21,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 633,
            "name": "default.isMaybeSingle"
          }
        },
        {
          "id": 579,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 13,
              "character": 12
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "GET"
              },
              {
                "type": "literal",
                "value": "HEAD"
              },
              {
                "type": "literal",
                "value": "POST"
              },
              {
                "type": "literal",
                "value": "PATCH"
              },
              {
                "type": "literal",
                "value": "DELETE"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 621,
            "name": "default.method"
          }
        },
        {
          "id": 582,
          "name": "schema",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 16,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 624,
            "name": "default.schema"
          }
        },
        {
          "id": 584,
          "name": "shouldThrowOnError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 18,
              "character": 12
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "defaultValue": "false",
          "inheritedFrom": {
            "type": "reference",
            "id": 626,
            "name": "default.shouldThrowOnError"
          }
        },
        {
          "id": 585,
          "name": "signal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 19,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "AbortSignal",
            "package": "typescript",
            "name": "AbortSignal"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 627,
            "name": "default.signal"
          }
        },
        {
          "id": 580,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isProtected": true
          },
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 14,
              "character": 12
            }
          ],
          "type": {
            "type": "reference",
            "qualifiedName": "URL",
            "package": "typescript",
            "name": "URL"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 622,
            "name": "default.url"
          }
        },
        {
          "id": 551,
          "name": "abortSignal",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 180,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 552,
              "name": "abortSignal",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set the AbortSignal for the fetch request."
              },
              "parameters": [
                {
                  "id": 553,
                  "name": "signal",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The AbortSignal to use for the fetch request\n"
                  },
                  "type": {
                    "type": "reference",
                    "qualifiedName": "AbortSignal",
                    "package": "typescript",
                    "name": "AbortSignal"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 560,
          "name": "csv",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 221,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 561,
              "name": "csv",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a string in CSV format."
              },
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 564,
          "name": "explain",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 259,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 565,
              "name": "explain",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as the EXPLAIN plan for the query.",
                "text": "You need to enable the\n[db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\nsetting before using this method.\n"
              },
              "parameters": [
                {
                  "id": 566,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters\n"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 567,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 568,
                          "name": "analyze",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query will be executed and the\nactual run time will be returned\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 267,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 571,
                          "name": "buffers",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on buffer usage\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 270,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 573,
                          "name": "format",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "The format of the output, can be `\"text\"` (default)\nor `\"json\"`\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 272,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "text"
                              },
                              {
                                "type": "literal",
                                "value": "json"
                              }
                            ]
                          }
                        },
                        {
                          "id": 570,
                          "name": "settings",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on configuration\nparameters that affect query planning\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 269,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 569,
                          "name": "verbose",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the query identifier will be returned\nand `data` will include the output columns of the query\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 268,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 572,
                          "name": "wal",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, include information on WAL record generation\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 271,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [568, 571, 573, 570, 569, 572]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "qualifiedName": "Record",
                          "package": "typescript",
                          "name": "Record"
                        }
                      },
                      {
                        "type": "literal",
                        "value": false
                      }
                    ],
                    "name": "default"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 562,
          "name": "geojson",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 229,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 563,
              "name": "geojson",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as an object in [GeoJSON](https://geojson.org) format."
              },
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "qualifiedName": "Record",
                    "package": "typescript",
                    "name": "Record"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 536,
          "name": "limit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 131,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 537,
              "name": "limit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by `count`."
              },
              "parameters": [
                {
                  "id": 538,
                  "name": "count",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The maximum number of rows to return"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 539,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 540,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 541,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 136,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 542,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 136,
                              "character": 32
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [541, 542]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 557,
          "name": "maybeSingle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 204,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 558,
              "name": "maybeSingle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\nthis returns an error.\n"
              },
              "typeParameter": [
                {
                  "id": 559,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 496,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "id": 435,
                        "name": "ResultOne"
                      }
                    ]
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 505,
          "name": "order",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 55,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 506,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
              },
              "typeParameter": [
                {
                  "id": 507,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 508,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 383,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 509,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 510,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 511,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 512,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 513,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a referenced table by\nits columns"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 57,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [511, 512, 513]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 514,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n"
              },
              "parameters": [
                {
                  "id": 515,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 516,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 517,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 518,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, the result will be in ascending order"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 519,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "If `true`, `null`s appear first. If `false`,\n`null`s appear last."
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 520,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to order a referenced table by\nits columns"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 61,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [518, 519, 520]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 521,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 522,
                  "name": "ColumnName",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 523,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "reference",
                    "id": 398,
                    "name": "ColumnName",
                    "dereferenced": {}
                  }
                },
                {
                  "id": 524,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 525,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 526,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 528,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 527,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 68,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [526, 528, 527]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            },
            {
              "id": 529,
              "name": "order",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Order the query result by `column`.",
                "text": "You can call this method multiple times to order by multiple columns.\n\nYou can order referenced tables, but it only affects the ordering of the\nparent table if you use `!inner` in the query.\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "Use `options.referencedTable` instead of `options.foreignTable`\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 530,
                  "name": "column",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The column to order by"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 531,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 532,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 533,
                          "name": "ascending",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 535,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 59
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 534,
                          "name": "nullsFirst",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 75,
                              "character": 37
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [533, 535, 534]
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 543,
          "name": "range",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 158,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 544,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Limit the query result by starting at an offset `from` and ending at the offset `to`.\nOnly records within this range are returned.\nThis respects the query order and if there is no order clause the range could behave unexpectedly.\nThe `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\nand fourth rows of the query."
              },
              "parameters": [
                {
                  "id": 545,
                  "name": "from",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The starting index from which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 546,
                  "name": "to",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The last index to which to limit the result"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 547,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "Named parameters"
                  },
                  "originalName": "__namedParameters",
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 548,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 549,
                          "name": "foreignTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Deprecated, use `options.referencedTable`\ninstead\n"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 164,
                              "character": 9
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 550,
                          "name": "referencedTable",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "shortText": "Set this to limit rows of referenced\ntables instead of the parent table"
                          },
                          "sources": [
                            {
                              "fileName": "src/PostgrestTransformBuilder.ts",
                              "line": 164,
                              "character": 32
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "kind": 1024,
                          "children": [549, 550]
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 576,
          "name": "returns",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 311,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 577,
              "name": "returns",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Override the type of the returned `data`."
              },
              "typeParameter": [
                {
                  "id": 578,
                  "name": "NewResult",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "comment": {
                    "shortText": "The new result type to override with\n"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 454,
                    "name": "NewResult"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 574,
          "name": "rollback",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 297,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 575,
              "name": "rollback",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Rollback the query.",
                "text": "`data` will still be returned, but the query is not committed.\n"
              },
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 500,
          "name": "select",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 21,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 501,
              "name": "select",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Perform a SELECT on the query result.",
                "text": "By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\nreturn modified rows. By calling this method, modified rows are returned in\n`data`.\n"
              },
              "typeParameter": [
                {
                  "id": 502,
                  "name": "Query",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "default": {
                    "type": "literal",
                    "value": "*"
                  }
                },
                {
                  "id": 503,
                  "name": "NewResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 685,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 494,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 495,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 497,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 498,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "id": 378,
                        "name": "Query"
                      }
                    ],
                    "name": "GetResult"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 504,
                  "name": "columns",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "The columns to retrieve, separated by commas\n"
                  },
                  "type": {
                    "type": "reference",
                    "id": 378,
                    "name": "Query",
                    "dereferenced": {}
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 379,
                      "name": "NewResultOne"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 594,
          "name": "setHeader",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 56,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 595,
              "name": "setHeader",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Set an HTTP header for the request."
              },
              "parameters": [
                {
                  "id": 596,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 597,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 491,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 494,
                    "name": "Schema"
                  },
                  {
                    "type": "reference",
                    "id": 495,
                    "name": "Row"
                  },
                  {
                    "type": "reference",
                    "id": 496,
                    "name": "Result"
                  },
                  {
                    "type": "reference",
                    "id": 497,
                    "name": "RelationName"
                  },
                  {
                    "type": "reference",
                    "id": 498,
                    "name": "Relationships"
                  }
                ],
                "name": "default"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 637,
                "name": "default.setHeader"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 636,
            "name": "default.setHeader"
          }
        },
        {
          "id": 554,
          "name": "single",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestTransformBuilder.ts",
              "line": 191,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 555,
              "name": "single",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Return `data` as a single object instead of an array of objects.",
                "text": "Query result must be one row (e.g. using `.limit(1)`), otherwise this\nreturns an error.\n"
              },
              "typeParameter": [
                {
                  "id": 556,
                  "name": "ResultOne",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 496,
                      "name": "Result"
                    },
                    "extendsType": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "ResultOne"
                      }
                    },
                    "trueType": {
                      "type": "reference",
                      "name": "ResultOne"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "never"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 615,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 432,
                    "name": "ResultOne"
                  },
                  {
                    "type": "literal",
                    "value": false
                  }
                ],
                "name": "default"
              }
            }
          ]
        },
        {
          "id": 598,
          "name": "then",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 62,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 599,
              "name": "then",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "typeParameter": [
                {
                  "id": 600,
                  "name": "TResult1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "id": 681,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 496,
                        "name": "Result"
                      }
                    ],
                    "name": "PostgrestSingleResponse"
                  }
                },
                {
                  "id": 601,
                  "name": "TResult2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 602,
                  "name": "onfulfilled",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 603,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 604,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 605,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 681,
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 496,
                                        "name": "Result"
                                      }
                                    ],
                                    "name": "PostgrestSingleResponse"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 476,
                                    "name": "TResult1"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 476,
                                        "name": "TResult1"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 606,
                  "name": "onrejected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 607,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 608,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 609,
                                  "name": "reason",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "id": 477,
                                    "name": "TResult2"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 477,
                                        "name": "TResult2"
                                      }
                                    ],
                                    "qualifiedName": "PromiseLike",
                                    "package": "typescript",
                                    "name": "PromiseLike"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 476,
                        "name": "TResult1"
                      },
                      {
                        "type": "reference",
                        "id": 477,
                        "name": "TResult2"
                      }
                    ]
                  }
                ],
                "qualifiedName": "PromiseLike",
                "package": "typescript",
                "name": "PromiseLike"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 641,
                "name": "default.then"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 640,
            "name": "default.then"
          }
        },
        {
          "id": 592,
          "name": "throwOnError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "src/PostgrestBuilder.ts",
              "line": 48,
              "character": 2
            }
          ],
          "signatures": [
            {
              "id": 593,
              "name": "throwOnError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "If there's an error with the query, throwOnError will reject the promise by\nthrowing the error instead of returning it as part of a successful response.",
                "text": "{@link https://github.com/supabase/supabase-js/issues/92}\n"
              },
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 491,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 494,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 495,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 496,
                        "name": "Result"
                      },
                      {
                        "type": "reference",
                        "id": 497,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 498,
                        "name": "Relationships"
                      }
                    ],
                    "name": "default"
                  },
                  {
                    "type": "reference",
                    "id": 615,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 496,
                        "name": "Result"
                      },
                      {
                        "type": "literal",
                        "value": true
                      }
                    ],
                    "name": "default"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 635,
                "name": "default.throwOnError"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 634,
            "name": "default.throwOnError"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "kind": 512,
          "children": [492]
        },
        {
          "title": "Properties",
          "kind": 1024,
          "children": [583, 586, 581, 591, 579, 582, 584, 585, 580]
        },
        {
          "title": "Methods",
          "kind": 2048,
          "children": [551, 560, 564, 562, 536, 557, 505, 543, 576, 574, 500, 594, 554, 598, 592]
        }
      ],
      "sources": [
        {
          "fileName": "src/PostgrestTransformBuilder.ts",
          "line": 5,
          "character": 21
        }
      ],
      "typeParameter": [
        {
          "id": 610,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 611,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 612,
          "name": "Result",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 613,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        },
        {
          "id": 614,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "unknown"
          }
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 615,
          "typeArguments": [
            {
              "type": "reference",
              "id": 496,
              "name": "Result"
            }
          ],
          "name": "default"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 151,
          "name": "PostgrestFilterBuilder"
        }
      ]
    },
    {
      "id": 668,
      "name": "PostgrestResponseFailure",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 671,
          "name": "count",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 22,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 670,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 21,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 669,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 20,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 654,
            "name": "default",
            "dereferenced": {
              "id": 654,
              "name": "PostgrestError",
              "kind": 128,
              "kindString": "Class",
              "flags": {},
              "comment": {
                "shortText": "Error format",
                "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
              },
              "children": [
                {
                  "id": 655,
                  "name": "constructor",
                  "kind": 512,
                  "kindString": "Constructor",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 11,
                      "character": 2
                    }
                  ],
                  "signatures": [
                    {
                      "id": 656,
                      "name": "new PostgrestError",
                      "kind": 16384,
                      "kindString": "Constructor signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 657,
                          "name": "context",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 658,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "children": [
                                {
                                  "id": 662,
                                  "name": "code",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 73
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 660,
                                  "name": "details",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 42
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 661,
                                  "name": "hint",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 59
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 659,
                                  "name": "message",
                                  "kind": 1024,
                                  "kindString": "Property",
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "src/PostgrestError.ts",
                                      "line": 11,
                                      "character": 25
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "groups": [
                                {
                                  "title": "Properties",
                                  "kind": 1024,
                                  "children": [662, 660, 661, 659]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 654,
                        "name": "default"
                      },
                      "overwrites": {
                        "type": "reference",
                        "name": "Error.constructor"
                      }
                    }
                  ],
                  "overwrites": {
                    "type": "reference",
                    "name": "Error.constructor"
                  }
                },
                {
                  "id": 665,
                  "name": "code",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 9,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 663,
                  "name": "details",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 7,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 664,
                  "name": "hint",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "src/PostgrestError.ts",
                      "line": 8,
                      "character": 2
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Constructors",
                  "kind": 512,
                  "children": [655]
                },
                {
                  "title": "Properties",
                  "kind": 1024,
                  "children": [665, 663, 664]
                }
              ],
              "sources": [
                {
                  "fileName": "src/PostgrestError.ts",
                  "line": 6,
                  "character": 21
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "qualifiedName": "Error",
                  "package": "typescript",
                  "name": "Error"
                }
              ]
            }
          }
        },
        {
          "id": 672,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.status"
          }
        },
        {
          "id": 673,
          "name": "statusText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.statusText"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [671, 670, 669, 672, 673]
        }
      ],
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 19,
          "character": 17
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "PostgrestResponseBase"
        }
      ]
    },
    {
      "id": 674,
      "name": "PostgrestResponseSuccess",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 677,
          "name": "count",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 17,
              "character": 2
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        {
          "id": 676,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 16,
              "character": 2
            }
          ],
          "type": {
            "type": "reference",
            "id": 680,
            "name": "T",
            "dereferenced": {}
          }
        },
        {
          "id": 675,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 15,
              "character": 2
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        },
        {
          "id": 678,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 11,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.status"
          }
        },
        {
          "id": 679,
          "name": "statusText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "src/types.ts",
              "line": 12,
              "character": 2
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PostgrestResponseBase.statusText"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [677, 676, 675, 678, 679]
        }
      ],
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 14,
          "character": 17
        }
      ],
      "typeParameter": [
        {
          "id": 680,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "PostgrestResponseBase"
        }
      ]
    },
    {
      "id": 683,
      "name": "PostgrestMaybeSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 29,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 684,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 681,
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 684,
                "name": "T"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 666,
      "name": "PostgrestResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 30,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 667,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "reference",
        "id": 681,
        "typeArguments": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 667,
              "name": "T"
            }
          }
        ],
        "name": "PostgrestSingleResponse"
      }
    },
    {
      "id": 681,
      "name": "PostgrestSingleResponse",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "src/types.ts",
          "line": 28,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 682,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "id": 674,
            "name": "PostgrestResponseSuccess",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 677,
                "name": "count",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 17,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  ]
                }
              },
              {
                "id": 676,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 16,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 680,
                  "name": "T",
                  "dereferenced": {}
                }
              },
              {
                "id": 675,
                "name": "error",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 15,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 678,
                "name": "status",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 11,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.status"
                }
              },
              {
                "id": 679,
                "name": "statusText",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 12,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.statusText"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [677, 676, 675, 678, 679]
              }
            ],
            "sources": [
              {
                "fileName": "src/types.ts",
                "line": 14,
                "character": 17
              }
            ],
            "typeParameter": [
              {
                "id": 680,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "extendedTypes": [
              {
                "type": "reference",
                "name": "PostgrestResponseBase"
              }
            ]
          },
          {
            "id": 668,
            "name": "PostgrestResponseFailure",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
              {
                "id": 671,
                "name": "count",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 22,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 670,
                "name": "data",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 21,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": null
                }
              },
              {
                "id": 669,
                "name": "error",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 20,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 654,
                  "name": "default",
                  "dereferenced": {
                    "id": 654,
                    "name": "PostgrestError",
                    "kind": 128,
                    "kindString": "Class",
                    "flags": {},
                    "comment": {
                      "shortText": "Error format",
                      "text": "{@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n"
                    },
                    "children": [
                      {
                        "id": 655,
                        "name": "constructor",
                        "kind": 512,
                        "kindString": "Constructor",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 11,
                            "character": 2
                          }
                        ],
                        "signatures": [
                          {
                            "id": 656,
                            "name": "new PostgrestError",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 657,
                                "name": "context",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reflection",
                                  "declaration": {
                                    "id": 658,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {},
                                    "children": [
                                      {
                                        "id": 662,
                                        "name": "code",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 73
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 660,
                                        "name": "details",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 42
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 661,
                                        "name": "hint",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 59
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      },
                                      {
                                        "id": 659,
                                        "name": "message",
                                        "kind": 1024,
                                        "kindString": "Property",
                                        "flags": {},
                                        "sources": [
                                          {
                                            "fileName": "src/PostgrestError.ts",
                                            "line": 11,
                                            "character": 25
                                          }
                                        ],
                                        "type": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "groups": [
                                      {
                                        "title": "Properties",
                                        "kind": 1024,
                                        "children": [662, 660, 661, 659]
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 654,
                              "name": "default"
                            },
                            "overwrites": {
                              "type": "reference",
                              "name": "Error.constructor"
                            }
                          }
                        ],
                        "overwrites": {
                          "type": "reference",
                          "name": "Error.constructor"
                        }
                      },
                      {
                        "id": 665,
                        "name": "code",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 9,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 663,
                        "name": "details",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 7,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 664,
                        "name": "hint",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "src/PostgrestError.ts",
                            "line": 8,
                            "character": 2
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "groups": [
                      {
                        "title": "Constructors",
                        "kind": 512,
                        "children": [655]
                      },
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [665, 663, 664]
                      }
                    ],
                    "sources": [
                      {
                        "fileName": "src/PostgrestError.ts",
                        "line": 6,
                        "character": 21
                      }
                    ],
                    "extendedTypes": [
                      {
                        "type": "reference",
                        "qualifiedName": "Error",
                        "package": "typescript",
                        "name": "Error"
                      }
                    ]
                  }
                }
              },
              {
                "id": 672,
                "name": "status",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 11,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.status"
                }
              },
              {
                "id": 673,
                "name": "statusText",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "src/types.ts",
                    "line": 12,
                    "character": 2
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "PostgrestResponseBase.statusText"
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [671, 670, 669, 672, 673]
              }
            ],
            "sources": [
              {
                "fileName": "src/types.ts",
                "line": 19,
                "character": 17
              }
            ],
            "extendedTypes": [
              {
                "type": "reference",
                "name": "PostgrestResponseBase"
              }
            ]
          }
        ]
      }
    },
    {
      "id": 685,
      "name": "UnstableGetResult",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "comment": {
        "shortText": "Main entry point for constructing the result type of a PostgREST query."
      },
      "sources": [
        {
          "fileName": "src/select-query-parser/result.ts",
          "line": 33,
          "character": 12
        }
      ],
      "typeParameter": [
        {
          "id": 686,
          "name": "Schema",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Database schema."
          },
          "type": {
            "type": "reference",
            "name": "GenericSchema"
          }
        },
        {
          "id": 687,
          "name": "Row",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "The type of a row in the current table."
          },
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "qualifiedName": "Record",
            "package": "typescript",
            "name": "Record"
          }
        },
        {
          "id": 688,
          "name": "RelationName",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "The name of the current table or view."
          }
        },
        {
          "id": 689,
          "name": "Relationships",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "Relationships of the current table."
          }
        },
        {
          "id": 690,
          "name": "Query",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "comment": {
            "shortText": "The select query string literal to parse.\n"
          },
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "type": {
        "type": "conditional",
        "checkType": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 686,
              "name": "Schema"
            }
          ],
          "name": "IsAny"
        },
        "extendsType": {
          "type": "literal",
          "value": true
        },
        "trueType": {
          "type": "conditional",
          "checkType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 690,
                "name": "Query"
              }
            ],
            "name": "ParseQuery"
          },
          "extendsType": {
            "type": "inferred",
            "name": "ParsedQuery"
          },
          "trueType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "name": "ParsedQuery"
            },
            "extendsType": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "Ast.Node"
              }
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "id": 688,
                "name": "RelationName"
              },
              "extendsType": {
                "type": "intrinsic",
                "name": "string"
              },
              "trueType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "ParsedQuery"
                  }
                ],
                "name": "ProcessNodesWithoutSchema"
              },
              "falseType": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            "falseType": {
              "type": "reference",
              "name": "ParsedQuery"
            }
          },
          "falseType": {
            "type": "intrinsic",
            "name": "any"
          }
        },
        "falseType": {
          "type": "conditional",
          "checkType": {
            "type": "reference",
            "id": 689,
            "name": "Relationships"
          },
          "extendsType": {
            "type": "literal",
            "value": null
          },
          "trueType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 690,
                  "name": "Query"
                }
              ],
              "name": "ParseQuery"
            },
            "extendsType": {
              "type": "inferred",
              "name": "ParsedQuery"
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "name": "ParsedQuery"
              },
              "extendsType": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "Ast.Node"
                }
              },
              "trueType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "ParsedQuery"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "id": 688,
                      "name": "RelationName"
                    },
                    "extendsType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "trueType": {
                      "type": "reference",
                      "id": 688,
                      "name": "RelationName"
                    },
                    "falseType": {
                      "type": "literal",
                      "value": "rpc_call"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 687,
                    "name": "Row"
                  }
                ],
                "name": "RPCCallNodes"
              },
              "falseType": {
                "type": "reference",
                "name": "ParsedQuery"
              }
            },
            "falseType": {
              "type": "reference",
              "id": 687,
              "name": "Row"
            }
          },
          "falseType": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 690,
                  "name": "Query"
                }
              ],
              "name": "ParseQuery"
            },
            "extendsType": {
              "type": "inferred",
              "name": "ParsedQuery"
            },
            "trueType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "name": "ParsedQuery"
              },
              "extendsType": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "Ast.Node"
                }
              },
              "trueType": {
                "type": "conditional",
                "checkType": {
                  "type": "reference",
                  "id": 688,
                  "name": "RelationName"
                },
                "extendsType": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "trueType": {
                  "type": "conditional",
                  "checkType": {
                    "type": "reference",
                    "id": 689,
                    "name": "Relationships"
                  },
                  "extendsType": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "GenericRelationship"
                    }
                  },
                  "trueType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 686,
                        "name": "Schema"
                      },
                      {
                        "type": "reference",
                        "id": 687,
                        "name": "Row"
                      },
                      {
                        "type": "reference",
                        "id": 688,
                        "name": "RelationName"
                      },
                      {
                        "type": "reference",
                        "id": 689,
                        "name": "Relationships"
                      },
                      {
                        "type": "reference",
                        "name": "ParsedQuery"
                      }
                    ],
                    "name": "ProcessNodes"
                  },
                  "falseType": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "literal",
                        "value": "Invalid Relationships cannot infer result type"
                      }
                    ],
                    "name": "SelectQueryError"
                  }
                },
                "falseType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "literal",
                      "value": "Invalid RelationName cannot infer result type"
                    }
                  ],
                  "name": "SelectQueryError"
                }
              },
              "falseType": {
                "type": "reference",
                "name": "ParsedQuery"
              }
            },
            "falseType": {
              "type": "intrinsic",
              "name": "never"
            }
          }
        }
      }
    },
    {
      "id": 1,
      "name": "default",
      "kind": 32,
      "kindString": "Variable",
      "flags": {},
      "sources": [
        {
          "fileName": "src/index.ts",
          "line": 17,
          "character": 0
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 2,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 7,
              "name": "PostgrestBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 615,
                  "name": "default"
                }
              }
            },
            {
              "id": 3,
              "name": "PostgrestClient",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 9,
                  "name": "default"
                }
              }
            },
            {
              "id": 8,
              "name": "PostgrestError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 654,
                  "name": "default"
                }
              }
            },
            {
              "id": 5,
              "name": "PostgrestFilterBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 151,
                  "name": "default"
                }
              }
            },
            {
              "id": 4,
              "name": "PostgrestQueryBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 64,
                  "name": "default"
                }
              }
            },
            {
              "id": 6,
              "name": "PostgrestTransformBuilder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "type": {
                "type": "query",
                "queryType": {
                  "type": "reference",
                  "id": 491,
                  "name": "default"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [7, 3, 8, 5, 4, 6]
            }
          ]
        }
      }
    }
  ],
  "groups": [
    {
      "title": "Classes",
      "kind": 128,
      "children": [615, 9, 654, 151, 64, 491]
    },
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [668, 674]
    },
    {
      "title": "Type Aliases",
      "kind": 4194304,
      "children": [683, 666, 681, 685]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [1]
    }
  ],
  "sources": [
    {
      "fileName": "src/index.ts",
      "line": 2,
      "character": 0
    }
  ]
}
